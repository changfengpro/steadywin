ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.global	motor_param
  21              		.section	.bss.motor_param,"aw",%nobits
  22              		.align	2
  25              	motor_param:
  26 0000 00000000 		.space	4
  27              		.global	angle
  28              		.section	.bss.angle,"aw",%nobits
  29              		.align	2
  32              	angle:
  33 0000 00000000 		.space	4
  34              		.global	ki
  35              		.section	.data.ki,"aw"
  36              		.align	2
  39              	ki:
  40 0000 9A99993E 		.word	1050253722
  41              		.section	.text.main,"ax",%progbits
  42              		.align	1
  43              		.global	main
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	main:
  49              	.LFB132:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 2


  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "fdcan.h"
  22:Core/Src/main.c **** #include "tim.h"
  23:Core/Src/main.c **** #include "gpio.h"
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** #include "bsp_fdcan.h"
  28:Core/Src/main.c **** #include "GIM6010.h"
  29:Core/Src/main.c **** #include "GIM6010_8.h"
  30:Core/Src/main.c **** #include "math.h"
  31:Core/Src/main.c **** /* USER CODE END Includes */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PTD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PD */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  44:Core/Src/main.c **** /* USER CODE BEGIN PM */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* USER CODE BEGIN PV */
  51:Core/Src/main.c **** GIM6010_Measure_s *motor_param;
  52:Core/Src/main.c **** float angle;
  53:Core/Src/main.c **** float ki = 0.3;
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** static void ReadParameter();
  60:Core/Src/main.c **** static void Control_State_Machine();
  61:Core/Src/main.c **** /* USER CODE END PFP */
  62:Core/Src/main.c **** 
  63:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  64:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END 0 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /**
  69:Core/Src/main.c ****   * @brief  The application entry point.
  70:Core/Src/main.c ****   * @retval int
  71:Core/Src/main.c ****   */
  72:Core/Src/main.c **** int main(void)
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 3


  73:Core/Src/main.c **** {
  50              		.loc 1 73 1
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54 0000 80B5     		push	{r7, lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 7, -8
  58              		.cfi_offset 14, -4
  59 0002 00AF     		add	r7, sp, #0
  60              	.LCFI1:
  61              		.cfi_def_cfa_register 7
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE END 1 */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Core/Src/main.c ****   HAL_Init();
  62              		.loc 1 82 3
  63 0004 FFF7FEFF 		bl	HAL_Init
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END Init */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* Configure the system clock */
  89:Core/Src/main.c ****   SystemClock_Config();
  64              		.loc 1 89 3
  65 0008 FFF7FEFF 		bl	SystemClock_Config
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* USER CODE END SysInit */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* Initialize all configured peripherals */
  96:Core/Src/main.c ****   MX_GPIO_Init();
  66              		.loc 1 96 3
  67 000c FFF7FEFF 		bl	MX_GPIO_Init
  97:Core/Src/main.c ****   MX_FDCAN1_Init();
  68              		.loc 1 97 3
  69 0010 FFF7FEFF 		bl	MX_FDCAN1_Init
  98:Core/Src/main.c ****   MX_TIM6_Init();
  70              		.loc 1 98 3
  71 0014 FFF7FEFF 		bl	MX_TIM6_Init
  99:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 100:Core/Src/main.c ****   fdcan_user_init();  
  72              		.loc 1 100 3
  73 0018 FFF7FEFF 		bl	fdcan_user_init
 101:Core/Src/main.c ****   GIMCANMotorSetMode(&hfdcan1, 0x01, GIMCAN_CMD_READ_ANGLE_MODE);
  74              		.loc 1 101 3
  75 001c A322     		movs	r2, #163
  76 001e 0121     		movs	r1, #1
  77 0020 0848     		ldr	r0, .L3
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 4


  78 0022 FFF7FEFF 		bl	GIMCANMotorSetMode
 102:Core/Src/main.c ****   motor_param = GIM6010_Measure_Ptr();
  79              		.loc 1 102 17
  80 0026 FFF7FEFF 		bl	GIM6010_Measure_Ptr
  81 002a 0346     		mov	r3, r0
  82              		.loc 1 102 15 discriminator 1
  83 002c 064A     		ldr	r2, .L3+4
  84 002e 1360     		str	r3, [r2]
  85              	.L2:
 103:Core/Src/main.c ****   /* USER CODE END 2 */
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****   /* Infinite loop */
 106:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 107:Core/Src/main.c ****   while (1)
 108:Core/Src/main.c ****   { 
 109:Core/Src/main.c ****     ReadParameter();
  86              		.loc 1 109 5
  87 0030 FFF7FEFF 		bl	ReadParameter
 110:Core/Src/main.c ****     Control_State_Machine();
  88              		.loc 1 110 5
  89 0034 FFF7FEFF 		bl	Control_State_Machine
 111:Core/Src/main.c ****     HAL_Delay(10);
  90              		.loc 1 111 5 discriminator 1
  91 0038 0A20     		movs	r0, #10
  92 003a FFF7FEFF 		bl	HAL_Delay
 109:Core/Src/main.c ****     Control_State_Machine();
  93              		.loc 1 109 5
  94 003e 00BF     		nop
  95 0040 F6E7     		b	.L2
  96              	.L4:
  97 0042 00BF     		.align	2
  98              	.L3:
  99 0044 00000000 		.word	hfdcan1
 100 0048 00000000 		.word	motor_param
 101              		.cfi_endproc
 102              	.LFE132:
 104              		.section	.text.SystemClock_Config,"ax",%progbits
 105              		.align	1
 106              		.global	SystemClock_Config
 107              		.syntax unified
 108              		.thumb
 109              		.thumb_func
 111              	SystemClock_Config:
 112              	.LFB133:
 112:Core/Src/main.c ****     /* USER CODE END WHILE */
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 115:Core/Src/main.c ****   }
 116:Core/Src/main.c ****   /* USER CODE END 3 */
 117:Core/Src/main.c **** }
 118:Core/Src/main.c **** 
 119:Core/Src/main.c **** /**
 120:Core/Src/main.c ****   * @brief System Clock Configuration
 121:Core/Src/main.c ****   * @retval None
 122:Core/Src/main.c ****   */
 123:Core/Src/main.c **** void SystemClock_Config(void)
 124:Core/Src/main.c **** {
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 5


 113              		.loc 1 124 1
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 80
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117 0000 80B5     		push	{r7, lr}
 118              	.LCFI2:
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 7, -8
 121              		.cfi_offset 14, -4
 122 0002 94B0     		sub	sp, sp, #80
 123              	.LCFI3:
 124              		.cfi_def_cfa_offset 88
 125 0004 00AF     		add	r7, sp, #0
 126              	.LCFI4:
 127              		.cfi_def_cfa_register 7
 125:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 128              		.loc 1 125 22
 129 0006 07F11803 		add	r3, r7, #24
 130 000a 3822     		movs	r2, #56
 131 000c 0021     		movs	r1, #0
 132 000e 1846     		mov	r0, r3
 133 0010 FFF7FEFF 		bl	memset
 126:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 134              		.loc 1 126 22
 135 0014 3B1D     		adds	r3, r7, #4
 136 0016 0022     		movs	r2, #0
 137 0018 1A60     		str	r2, [r3]
 138 001a 5A60     		str	r2, [r3, #4]
 139 001c 9A60     		str	r2, [r3, #8]
 140 001e DA60     		str	r2, [r3, #12]
 141 0020 1A61     		str	r2, [r3, #16]
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 129:Core/Src/main.c ****   */
 130:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 142              		.loc 1 130 3
 143 0022 0020     		movs	r0, #0
 144 0024 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 133:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 145              		.loc 1 135 36
 146 0028 0123     		movs	r3, #1
 147 002a BB61     		str	r3, [r7, #24]
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 148              		.loc 1 136 30
 149 002c 4FF48033 		mov	r3, #65536
 150 0030 FB61     		str	r3, [r7, #28]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 151              		.loc 1 137 34
 152 0032 0223     		movs	r3, #2
 153 0034 7B63     		str	r3, [r7, #52]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 154              		.loc 1 138 35
 155 0036 0323     		movs	r3, #3
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 6


 156 0038 BB63     		str	r3, [r7, #56]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 157              		.loc 1 139 30
 158 003a 0223     		movs	r3, #2
 159 003c FB63     		str	r3, [r7, #60]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 160              		.loc 1 140 30
 161 003e 5523     		movs	r3, #85
 162 0040 3B64     		str	r3, [r7, #64]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 163              		.loc 1 141 30
 164 0042 0223     		movs	r3, #2
 165 0044 7B64     		str	r3, [r7, #68]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 166              		.loc 1 142 30
 167 0046 0223     		movs	r3, #2
 168 0048 BB64     		str	r3, [r7, #72]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 169              		.loc 1 143 30
 170 004a 0223     		movs	r3, #2
 171 004c FB64     		str	r3, [r7, #76]
 144:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 172              		.loc 1 144 7
 173 004e 07F11803 		add	r3, r7, #24
 174 0052 1846     		mov	r0, r3
 175 0054 FFF7FEFF 		bl	HAL_RCC_OscConfig
 176 0058 0346     		mov	r3, r0
 177              		.loc 1 144 6 discriminator 1
 178 005a 002B     		cmp	r3, #0
 179 005c 01D0     		beq	.L6
 145:Core/Src/main.c ****   {
 146:Core/Src/main.c ****     Error_Handler();
 180              		.loc 1 146 5
 181 005e FFF7FEFF 		bl	Error_Handler
 182              	.L6:
 147:Core/Src/main.c ****   }
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 150:Core/Src/main.c ****   */
 151:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 183              		.loc 1 151 31
 184 0062 0F23     		movs	r3, #15
 185 0064 7B60     		str	r3, [r7, #4]
 152:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 153:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 186              		.loc 1 153 34
 187 0066 0323     		movs	r3, #3
 188 0068 BB60     		str	r3, [r7, #8]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 189              		.loc 1 154 35
 190 006a 0023     		movs	r3, #0
 191 006c FB60     		str	r3, [r7, #12]
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 192              		.loc 1 155 36
 193 006e 0023     		movs	r3, #0
 194 0070 3B61     		str	r3, [r7, #16]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 7


 195              		.loc 1 156 36
 196 0072 0023     		movs	r3, #0
 197 0074 7B61     		str	r3, [r7, #20]
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 198              		.loc 1 158 7
 199 0076 3B1D     		adds	r3, r7, #4
 200 0078 0421     		movs	r1, #4
 201 007a 1846     		mov	r0, r3
 202 007c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 203 0080 0346     		mov	r3, r0
 204              		.loc 1 158 6 discriminator 1
 205 0082 002B     		cmp	r3, #0
 206 0084 01D0     		beq	.L8
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****     Error_Handler();
 207              		.loc 1 160 5
 208 0086 FFF7FEFF 		bl	Error_Handler
 209              	.L8:
 161:Core/Src/main.c ****   }
 162:Core/Src/main.c **** }
 210              		.loc 1 162 1
 211 008a 00BF     		nop
 212 008c 5037     		adds	r7, r7, #80
 213              	.LCFI5:
 214              		.cfi_def_cfa_offset 8
 215 008e BD46     		mov	sp, r7
 216              	.LCFI6:
 217              		.cfi_def_cfa_register 13
 218              		@ sp needed
 219 0090 80BD     		pop	{r7, pc}
 220              		.cfi_endproc
 221              	.LFE133:
 223              		.section	.text.ReadParameter,"ax",%progbits
 224              		.align	1
 225              		.syntax unified
 226              		.thumb
 227              		.thumb_func
 229              	ReadParameter:
 230              	.LFB134:
 163:Core/Src/main.c **** 
 164:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 165:Core/Src/main.c **** static void ReadParameter()
 166:Core/Src/main.c **** {
 231              		.loc 1 166 1
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235 0000 80B5     		push	{r7, lr}
 236              	.LCFI7:
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 7, -8
 239              		.cfi_offset 14, -4
 240 0002 00AF     		add	r7, sp, #0
 241              	.LCFI8:
 242              		.cfi_def_cfa_register 7
 167:Core/Src/main.c ****   GIMCANMotorSetMode(&hfdcan1, 0x01, GIMCAN_CMD_READ_ANGLE_MODE);
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 8


 243              		.loc 1 167 3
 244 0004 A322     		movs	r2, #163
 245 0006 0121     		movs	r1, #1
 246 0008 0448     		ldr	r0, .L10
 247 000a FFF7FEFF 		bl	GIMCANMotorSetMode
 168:Core/Src/main.c ****   GIMCANMotorSetMode(&hfdcan1, 0x01, GIMCAN_CMD_READ_RPM_MODE);
 248              		.loc 1 168 3
 249 000e A222     		movs	r2, #162
 250 0010 0121     		movs	r1, #1
 251 0012 0248     		ldr	r0, .L10
 252 0014 FFF7FEFF 		bl	GIMCANMotorSetMode
 169:Core/Src/main.c **** }
 253              		.loc 1 169 1
 254 0018 00BF     		nop
 255 001a 80BD     		pop	{r7, pc}
 256              	.L11:
 257              		.align	2
 258              	.L10:
 259 001c 00000000 		.word	hfdcan1
 260              		.cfi_endproc
 261              	.LFE134:
 263              		.global	__aeabi_f2d
 264              		.global	__aeabi_dmul
 265              		.global	__aeabi_d2f
 266              		.section	.text.Control_State_Machine,"ax",%progbits
 267              		.align	1
 268              		.syntax unified
 269              		.thumb
 270              		.thumb_func
 272              	Control_State_Machine:
 273              	.LFB135:
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** static void Control_State_Machine()
 172:Core/Src/main.c **** {
 274              		.loc 1 172 1
 275              		.cfi_startproc
 276              		@ args = 0, pretend = 0, frame = 8
 277              		@ frame_needed = 1, uses_anonymous_args = 0
 278 0000 B0B5     		push	{r4, r5, r7, lr}
 279              	.LCFI9:
 280              		.cfi_def_cfa_offset 16
 281              		.cfi_offset 4, -16
 282              		.cfi_offset 5, -12
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 82B0     		sub	sp, sp, #8
 286              	.LCFI10:
 287              		.cfi_def_cfa_offset 24
 288 0004 00AF     		add	r7, sp, #0
 289              	.LCFI11:
 290              		.cfi_def_cfa_register 7
 173:Core/Src/main.c ****   motor_param->set_current = cos(motor_param->angle_single_round) * ki;
 291              		.loc 1 173 45
 292 0006 274B     		ldr	r3, .L19
 293 0008 1B68     		ldr	r3, [r3]
 294 000a 1B68     		ldr	r3, [r3]	@ unaligned
 295              		.loc 1 173 30
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 9


 296 000c 1846     		mov	r0, r3	@ float
 297 000e FFF7FEFF 		bl	__aeabi_f2d
 298 0012 0246     		mov	r2, r0
 299 0014 0B46     		mov	r3, r1
 300 0016 43EC102B 		vmov	d0, r2, r3
 301 001a FFF7FEFF 		bl	cos
 302 001e 55EC104B 		vmov	r4, r5, d0
 303              		.loc 1 173 67 discriminator 1
 304 0022 214B     		ldr	r3, .L19+4
 305 0024 1B68     		ldr	r3, [r3]	@ float
 306 0026 1846     		mov	r0, r3	@ float
 307 0028 FFF7FEFF 		bl	__aeabi_f2d
 308 002c 0246     		mov	r2, r0
 309 002e 0B46     		mov	r3, r1
 310 0030 2046     		mov	r0, r4
 311 0032 2946     		mov	r1, r5
 312 0034 FFF7FEFF 		bl	__aeabi_dmul
 313 0038 0246     		mov	r2, r0
 314 003a 0B46     		mov	r3, r1
 315              		.loc 1 173 14 discriminator 1
 316 003c 1949     		ldr	r1, .L19
 317 003e 0C68     		ldr	r4, [r1]
 318              		.loc 1 173 67 discriminator 1
 319 0040 1046     		mov	r0, r2
 320 0042 1946     		mov	r1, r3
 321 0044 FFF7FEFF 		bl	__aeabi_d2f
 322 0048 0346     		mov	r3, r0	@ float
 323              		.loc 1 173 28 discriminator 1
 324 004a 6361     		str	r3, [r4, #20]	@ unaligned
 174:Core/Src/main.c ****   GIMCANMotorSetCurrent(&hfdcan1, 0x01, motor_param->set_current);
 325              		.loc 1 174 52
 326 004c 154B     		ldr	r3, .L19
 327 004e 1B68     		ldr	r3, [r3]
 328              		.loc 1 174 3
 329 0050 5B69     		ldr	r3, [r3, #20]	@ unaligned
 330 0052 00EE103A 		vmov	s0, r3
 331 0056 0121     		movs	r1, #1
 332 0058 1448     		ldr	r0, .L19+8
 333 005a FFF7FEFF 		bl	GIMCANMotorSetCurrent
 175:Core/Src/main.c ****   int32_t cnt = 0;
 334              		.loc 1 175 11
 335 005e 0023     		movs	r3, #0
 336 0060 7B60     		str	r3, [r7, #4]
 176:Core/Src/main.c ****   if(fabs(motor_param->speed_raw) > 50)
 337              		.loc 1 176 22
 338 0062 104B     		ldr	r3, .L19
 339 0064 1B68     		ldr	r3, [r3]
 340 0066 DB68     		ldr	r3, [r3, #12]	@ unaligned
 341              		.loc 1 176 6
 342 0068 07EE903A 		vmov	s15, r3
 343 006c F0EEE77A 		vabs.f32	s15, s15
 344              		.loc 1 176 5
 345 0070 9FED0F7A 		vldr.32	s14, .L19+12
 346 0074 F4EEC77A 		vcmpe.f32	s15, s14
 347 0078 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 348 007c 00DC     		bgt	.L17
 177:Core/Src/main.c ****   { 
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 10


 178:Core/Src/main.c ****     cnt++;
 179:Core/Src/main.c ****     while(cnt > 500)
 180:Core/Src/main.c ****     {
 181:Core/Src/main.c ****       GIMCANMotorSetMode(&hfdcan1, 0x01, GIMCAN_CMD_DISABLE_MODE);
 182:Core/Src/main.c ****     }
 183:Core/Src/main.c ****   }
 184:Core/Src/main.c **** }
 349              		.loc 1 184 1
 350 007e 0CE0     		b	.L18
 351              	.L17:
 178:Core/Src/main.c ****     while(cnt > 500)
 352              		.loc 1 178 8
 353 0080 7B68     		ldr	r3, [r7, #4]
 354 0082 0133     		adds	r3, r3, #1
 355 0084 7B60     		str	r3, [r7, #4]
 179:Core/Src/main.c ****     {
 356              		.loc 1 179 10
 357 0086 04E0     		b	.L15
 358              	.L16:
 181:Core/Src/main.c ****     }
 359              		.loc 1 181 7
 360 0088 CF22     		movs	r2, #207
 361 008a 0121     		movs	r1, #1
 362 008c 0748     		ldr	r0, .L19+8
 363 008e FFF7FEFF 		bl	GIMCANMotorSetMode
 364              	.L15:
 179:Core/Src/main.c ****     {
 365              		.loc 1 179 15
 366 0092 7B68     		ldr	r3, [r7, #4]
 367 0094 B3F5FA7F 		cmp	r3, #500
 368 0098 F6DC     		bgt	.L16
 369              	.L18:
 370              		.loc 1 184 1
 371 009a 00BF     		nop
 372 009c 0837     		adds	r7, r7, #8
 373              	.LCFI12:
 374              		.cfi_def_cfa_offset 16
 375 009e BD46     		mov	sp, r7
 376              	.LCFI13:
 377              		.cfi_def_cfa_register 13
 378              		@ sp needed
 379 00a0 B0BD     		pop	{r4, r5, r7, pc}
 380              	.L20:
 381 00a2 00BF     		.align	2
 382              	.L19:
 383 00a4 00000000 		.word	motor_param
 384 00a8 00000000 		.word	ki
 385 00ac 00000000 		.word	hfdcan1
 386 00b0 00004842 		.word	1112014848
 387              		.cfi_endproc
 388              	.LFE135:
 390              		.section	.text.Error_Handler,"ax",%progbits
 391              		.align	1
 392              		.global	Error_Handler
 393              		.syntax unified
 394              		.thumb
 395              		.thumb_func
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 11


 397              	Error_Handler:
 398              	.LFB136:
 185:Core/Src/main.c **** /* USER CODE END 4 */
 186:Core/Src/main.c **** 
 187:Core/Src/main.c **** /**
 188:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 189:Core/Src/main.c ****   * @retval None
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c **** void Error_Handler(void)
 192:Core/Src/main.c **** {
 399              		.loc 1 192 1
 400              		.cfi_startproc
 401              		@ args = 0, pretend = 0, frame = 0
 402              		@ frame_needed = 1, uses_anonymous_args = 0
 403 0000 80B5     		push	{r7, lr}
 404              	.LCFI14:
 405              		.cfi_def_cfa_offset 8
 406              		.cfi_offset 7, -8
 407              		.cfi_offset 14, -4
 408 0002 00AF     		add	r7, sp, #0
 409              	.LCFI15:
 410              		.cfi_def_cfa_register 7
 411              	.LBB4:
 412              	.LBB5:
 413              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 12


  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 13


  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 14


 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 15


 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 414              		.loc 2 209 3
 415              		.syntax unified
 416              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 417 0004 72B6     		cpsid i
 418              	@ 0 "" 2
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 419              		.loc 2 210 1
 420              		.thumb
 421              		.syntax unified
 422 0006 00BF     		nop
 423              	.LBE5:
 424              	.LBE4:
 193:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 194:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 195:Core/Src/main.c ****   __disable_irq();
 196:Core/Src/main.c ****   while (1)
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     HAL_FDCAN_AbortTxRequest(&hfdcan1, FDCAN_TX_BUFFER0 | FDCAN_TX_BUFFER1);
 425              		.loc 1 198 5
 426 0008 0321     		movs	r1, #3
 427 000a 0348     		ldr	r0, .L22
 428 000c FFF7FEFF 		bl	HAL_FDCAN_AbortTxRequest
 199:Core/Src/main.c ****     break;
 429              		.loc 1 199 5
 430 0010 00BF     		nop
 200:Core/Src/main.c ****   }
 201:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 202:Core/Src/main.c **** }
 431              		.loc 1 202 1
 432 0012 00BF     		nop
 433 0014 80BD     		pop	{r7, pc}
 434              	.L23:
 435 0016 00BF     		.align	2
 436              	.L22:
 437 0018 00000000 		.word	hfdcan1
 438              		.cfi_endproc
 439              	.LFE136:
 441              		.text
 442              	.Letext0:
 443              		.file 3 "D:/msys64/mingw64/arm-none-eabi/include/machine/_default_types.h"
 444              		.file 4 "D:/msys64/mingw64/arm-none-eabi/include/sys/_stdint.h"
 445              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 446              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 447              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 448              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 449              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_fdcan.h"
 450              		.file 10 "Module/GIM6010_8/GIM6010_8.h"
 451              		.file 11 "Core/Inc/fdcan.h"
 452              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 453              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 454              		.file 14 "Core/Inc/tim.h"
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 16


 455              		.file 15 "Core/Inc/gpio.h"
 456              		.file 16 "D:/msys64/mingw64/arm-none-eabi/include/math.h"
 457              		.file 17 "Bsp/bsp_fdcan/bsp_fdcan.h"
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:25     .bss.motor_param:00000000 motor_param
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:22     .bss.motor_param:00000000 $d
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:32     .bss.angle:00000000 angle
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:29     .bss.angle:00000000 $d
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:39     .data.ki:00000000 ki
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:36     .data.ki:00000000 $d
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:42     .text.main:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:48     .text.main:00000000 main
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:111    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:229    .text.ReadParameter:00000000 ReadParameter
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:272    .text.Control_State_Machine:00000000 Control_State_Machine
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:99     .text.main:00000044 $d
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:105    .text.SystemClock_Config:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:397    .text.Error_Handler:00000000 Error_Handler
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:224    .text.ReadParameter:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:259    .text.ReadParameter:0000001c $d
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:267    .text.Control_State_Machine:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:383    .text.Control_State_Machine:000000a4 $d
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:391    .text.Error_Handler:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\cc2z2IdS.s:437    .text.Error_Handler:00000018 $d

UNDEFINED SYMBOLS
HAL_Init
MX_GPIO_Init
MX_FDCAN1_Init
MX_TIM6_Init
fdcan_user_init
GIMCANMotorSetMode
GIM6010_Measure_Ptr
HAL_Delay
hfdcan1
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
cos
GIMCANMotorSetCurrent
HAL_FDCAN_AbortTxRequest
