ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.global	motor_param
  21              		.section	.bss.motor_param,"aw",%nobits
  22              		.align	2
  25              	motor_param:
  26 0000 00000000 		.space	4
  27              		.global	angle
  28              		.section	.bss.angle,"aw",%nobits
  29              		.align	2
  32              	angle:
  33 0000 00000000 		.space	4
  34              		.global	ki
  35              		.section	.data.ki,"aw"
  36              		.align	2
  39              	ki:
  40 0000 9A99993E 		.word	1050253722
  41              		.section	.text.main,"ax",%progbits
  42              		.align	1
  43              		.global	main
  44              		.syntax unified
  45              		.thumb
  46              		.thumb_func
  48              	main:
  49              	.LFB132:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 2


  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "fdcan.h"
  22:Core/Src/main.c **** #include "spi.h"
  23:Core/Src/main.c **** #include "tim.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include "bsp_fdcan.h"
  29:Core/Src/main.c **** #include "GIM6010.h"
  30:Core/Src/main.c **** #include "GIM6010_8.h"
  31:Core/Src/main.c **** #include "math.h"
  32:Core/Src/main.c **** /* USER CODE END Includes */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PD */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PD */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  45:Core/Src/main.c **** /* USER CODE BEGIN PM */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE END PM */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* USER CODE BEGIN PV */
  52:Core/Src/main.c **** GIM6010_Measure_s *motor_param;
  53:Core/Src/main.c **** float angle;
  54:Core/Src/main.c **** float ki = 0.3;
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  60:Core/Src/main.c **** static void ReadParameter();
  61:Core/Src/main.c **** static void Control_State_Machine();
  62:Core/Src/main.c **** /* USER CODE END PFP */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  65:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /* USER CODE END 0 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c **** /**
  70:Core/Src/main.c ****   * @brief  The application entry point.
  71:Core/Src/main.c ****   * @retval int
  72:Core/Src/main.c ****   */
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 3


  73:Core/Src/main.c **** int main(void)
  74:Core/Src/main.c **** {
  50              		.loc 1 74 1
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 1, uses_anonymous_args = 0
  54 0000 80B5     		push	{r7, lr}
  55              	.LCFI0:
  56              		.cfi_def_cfa_offset 8
  57              		.cfi_offset 7, -8
  58              		.cfi_offset 14, -4
  59 0002 00AF     		add	r7, sp, #0
  60              	.LCFI1:
  61              		.cfi_def_cfa_register 7
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* USER CODE END 1 */
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  83:Core/Src/main.c ****   HAL_Init();
  62              		.loc 1 83 3
  63 0004 FFF7FEFF 		bl	HAL_Init
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE END Init */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* Configure the system clock */
  90:Core/Src/main.c ****   SystemClock_Config();
  64              		.loc 1 90 3
  65 0008 FFF7FEFF 		bl	SystemClock_Config
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE END SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* Initialize all configured peripherals */
  97:Core/Src/main.c ****   MX_GPIO_Init();
  66              		.loc 1 97 3
  67 000c FFF7FEFF 		bl	MX_GPIO_Init
  98:Core/Src/main.c ****   MX_FDCAN1_Init();
  68              		.loc 1 98 3
  69 0010 FFF7FEFF 		bl	MX_FDCAN1_Init
  99:Core/Src/main.c ****   MX_TIM6_Init();
  70              		.loc 1 99 3
  71 0014 FFF7FEFF 		bl	MX_TIM6_Init
 100:Core/Src/main.c ****   MX_SPI3_Init();
  72              		.loc 1 100 3
  73 0018 FFF7FEFF 		bl	MX_SPI3_Init
 101:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 102:Core/Src/main.c ****   fdcan_user_init();  
  74              		.loc 1 102 3
  75 001c FFF7FEFF 		bl	fdcan_user_init
 103:Core/Src/main.c ****   GIMCANMotorSetMode(&hfdcan1, 0x01, GIMCAN_CMD_READ_ANGLE_MODE);
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 4


  76              		.loc 1 103 3
  77 0020 A322     		movs	r2, #163
  78 0022 0121     		movs	r1, #1
  79 0024 0848     		ldr	r0, .L3
  80 0026 FFF7FEFF 		bl	GIMCANMotorSetMode
 104:Core/Src/main.c ****   motor_param = GIM6010_Measure_Ptr();
  81              		.loc 1 104 17
  82 002a FFF7FEFF 		bl	GIM6010_Measure_Ptr
  83 002e 0346     		mov	r3, r0
  84              		.loc 1 104 15 discriminator 1
  85 0030 064A     		ldr	r2, .L3+4
  86 0032 1360     		str	r3, [r2]
  87              	.L2:
 105:Core/Src/main.c ****   /* USER CODE END 2 */
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* Infinite loop */
 108:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 109:Core/Src/main.c ****   while (1)
 110:Core/Src/main.c ****   { 
 111:Core/Src/main.c ****     ReadParameter();
  88              		.loc 1 111 5
  89 0034 FFF7FEFF 		bl	ReadParameter
 112:Core/Src/main.c ****     Control_State_Machine();
  90              		.loc 1 112 5
  91 0038 FFF7FEFF 		bl	Control_State_Machine
 113:Core/Src/main.c ****     HAL_Delay(10);
  92              		.loc 1 113 5 discriminator 1
  93 003c 0A20     		movs	r0, #10
  94 003e FFF7FEFF 		bl	HAL_Delay
 111:Core/Src/main.c ****     Control_State_Machine();
  95              		.loc 1 111 5
  96 0042 00BF     		nop
  97 0044 F6E7     		b	.L2
  98              	.L4:
  99 0046 00BF     		.align	2
 100              	.L3:
 101 0048 00000000 		.word	hfdcan1
 102 004c 00000000 		.word	motor_param
 103              		.cfi_endproc
 104              	.LFE132:
 106              		.section	.text.SystemClock_Config,"ax",%progbits
 107              		.align	1
 108              		.global	SystemClock_Config
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 113              	SystemClock_Config:
 114              	.LFB133:
 114:Core/Src/main.c ****     /* USER CODE END WHILE */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 117:Core/Src/main.c ****   }
 118:Core/Src/main.c ****   /* USER CODE END 3 */
 119:Core/Src/main.c **** }
 120:Core/Src/main.c **** 
 121:Core/Src/main.c **** /**
 122:Core/Src/main.c ****   * @brief System Clock Configuration
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 5


 123:Core/Src/main.c ****   * @retval None
 124:Core/Src/main.c ****   */
 125:Core/Src/main.c **** void SystemClock_Config(void)
 126:Core/Src/main.c **** {
 115              		.loc 1 126 1
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 80
 118              		@ frame_needed = 1, uses_anonymous_args = 0
 119 0000 80B5     		push	{r7, lr}
 120              	.LCFI2:
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
 124 0002 94B0     		sub	sp, sp, #80
 125              	.LCFI3:
 126              		.cfi_def_cfa_offset 88
 127 0004 00AF     		add	r7, sp, #0
 128              	.LCFI4:
 129              		.cfi_def_cfa_register 7
 127:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 130              		.loc 1 127 22
 131 0006 07F11803 		add	r3, r7, #24
 132 000a 3822     		movs	r2, #56
 133 000c 0021     		movs	r1, #0
 134 000e 1846     		mov	r0, r3
 135 0010 FFF7FEFF 		bl	memset
 128:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 136              		.loc 1 128 22
 137 0014 3B1D     		adds	r3, r7, #4
 138 0016 0022     		movs	r2, #0
 139 0018 1A60     		str	r2, [r3]
 140 001a 5A60     		str	r2, [r3, #4]
 141 001c 9A60     		str	r2, [r3, #8]
 142 001e DA60     		str	r2, [r3, #12]
 143 0020 1A61     		str	r2, [r3, #16]
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 131:Core/Src/main.c ****   */
 132:Core/Src/main.c ****   HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST);
 144              		.loc 1 132 3
 145 0022 0020     		movs	r0, #0
 146 0024 FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 135:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 147              		.loc 1 137 36
 148 0028 0123     		movs	r3, #1
 149 002a BB61     		str	r3, [r7, #24]
 138:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 150              		.loc 1 138 30
 151 002c 4FF48033 		mov	r3, #65536
 152 0030 FB61     		str	r3, [r7, #28]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 153              		.loc 1 139 34
 154 0032 0223     		movs	r3, #2
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 6


 155 0034 7B63     		str	r3, [r7, #52]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 156              		.loc 1 140 35
 157 0036 0323     		movs	r3, #3
 158 0038 BB63     		str	r3, [r7, #56]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = RCC_PLLM_DIV2;
 159              		.loc 1 141 30
 160 003a 0223     		movs	r3, #2
 161 003c FB63     		str	r3, [r7, #60]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 85;
 162              		.loc 1 142 30
 163 003e 5523     		movs	r3, #85
 164 0040 3B64     		str	r3, [r7, #64]
 143:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 165              		.loc 1 143 30
 166 0042 0223     		movs	r3, #2
 167 0044 7B64     		str	r3, [r7, #68]
 144:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 168              		.loc 1 144 30
 169 0046 0223     		movs	r3, #2
 170 0048 BB64     		str	r3, [r7, #72]
 145:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 171              		.loc 1 145 30
 172 004a 0223     		movs	r3, #2
 173 004c FB64     		str	r3, [r7, #76]
 146:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 174              		.loc 1 146 7
 175 004e 07F11803 		add	r3, r7, #24
 176 0052 1846     		mov	r0, r3
 177 0054 FFF7FEFF 		bl	HAL_RCC_OscConfig
 178 0058 0346     		mov	r3, r0
 179              		.loc 1 146 6 discriminator 1
 180 005a 002B     		cmp	r3, #0
 181 005c 01D0     		beq	.L6
 147:Core/Src/main.c ****   {
 148:Core/Src/main.c ****     Error_Handler();
 182              		.loc 1 148 5
 183 005e FFF7FEFF 		bl	Error_Handler
 184              	.L6:
 149:Core/Src/main.c ****   }
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 185              		.loc 1 153 31
 186 0062 0F23     		movs	r3, #15
 187 0064 7B60     		str	r3, [r7, #4]
 154:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 155:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 188              		.loc 1 155 34
 189 0066 0323     		movs	r3, #3
 190 0068 BB60     		str	r3, [r7, #8]
 156:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 191              		.loc 1 156 35
 192 006a 0023     		movs	r3, #0
 193 006c FB60     		str	r3, [r7, #12]
 157:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 7


 194              		.loc 1 157 36
 195 006e 0023     		movs	r3, #0
 196 0070 3B61     		str	r3, [r7, #16]
 158:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 197              		.loc 1 158 36
 198 0072 0023     		movs	r3, #0
 199 0074 7B61     		str	r3, [r7, #20]
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 200              		.loc 1 160 7
 201 0076 3B1D     		adds	r3, r7, #4
 202 0078 0421     		movs	r1, #4
 203 007a 1846     		mov	r0, r3
 204 007c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 205 0080 0346     		mov	r3, r0
 206              		.loc 1 160 6 discriminator 1
 207 0082 002B     		cmp	r3, #0
 208 0084 01D0     		beq	.L8
 161:Core/Src/main.c ****   {
 162:Core/Src/main.c ****     Error_Handler();
 209              		.loc 1 162 5
 210 0086 FFF7FEFF 		bl	Error_Handler
 211              	.L8:
 163:Core/Src/main.c ****   }
 164:Core/Src/main.c **** }
 212              		.loc 1 164 1
 213 008a 00BF     		nop
 214 008c 5037     		adds	r7, r7, #80
 215              	.LCFI5:
 216              		.cfi_def_cfa_offset 8
 217 008e BD46     		mov	sp, r7
 218              	.LCFI6:
 219              		.cfi_def_cfa_register 13
 220              		@ sp needed
 221 0090 80BD     		pop	{r7, pc}
 222              		.cfi_endproc
 223              	.LFE133:
 225              		.section	.text.ReadParameter,"ax",%progbits
 226              		.align	1
 227              		.syntax unified
 228              		.thumb
 229              		.thumb_func
 231              	ReadParameter:
 232              	.LFB134:
 165:Core/Src/main.c **** 
 166:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 167:Core/Src/main.c **** static void ReadParameter()
 168:Core/Src/main.c **** {
 233              		.loc 1 168 1
 234              		.cfi_startproc
 235              		@ args = 0, pretend = 0, frame = 0
 236              		@ frame_needed = 1, uses_anonymous_args = 0
 237 0000 80B5     		push	{r7, lr}
 238              	.LCFI7:
 239              		.cfi_def_cfa_offset 8
 240              		.cfi_offset 7, -8
 241              		.cfi_offset 14, -4
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 8


 242 0002 00AF     		add	r7, sp, #0
 243              	.LCFI8:
 244              		.cfi_def_cfa_register 7
 169:Core/Src/main.c ****   GIMCANMotorSetMode(&hfdcan1, 0x01, GIMCAN_CMD_READ_ANGLE_MODE);
 245              		.loc 1 169 3
 246 0004 A322     		movs	r2, #163
 247 0006 0121     		movs	r1, #1
 248 0008 0448     		ldr	r0, .L10
 249 000a FFF7FEFF 		bl	GIMCANMotorSetMode
 170:Core/Src/main.c ****   GIMCANMotorSetMode(&hfdcan1, 0x01, GIMCAN_CMD_READ_RPM_MODE);
 250              		.loc 1 170 3
 251 000e A222     		movs	r2, #162
 252 0010 0121     		movs	r1, #1
 253 0012 0248     		ldr	r0, .L10
 254 0014 FFF7FEFF 		bl	GIMCANMotorSetMode
 171:Core/Src/main.c **** }
 255              		.loc 1 171 1
 256 0018 00BF     		nop
 257 001a 80BD     		pop	{r7, pc}
 258              	.L11:
 259              		.align	2
 260              	.L10:
 261 001c 00000000 		.word	hfdcan1
 262              		.cfi_endproc
 263              	.LFE134:
 265              		.global	__aeabi_f2d
 266              		.global	__aeabi_dmul
 267              		.global	__aeabi_d2f
 268              		.section	.text.Control_State_Machine,"ax",%progbits
 269              		.align	1
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 274              	Control_State_Machine:
 275              	.LFB135:
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** static void Control_State_Machine()
 174:Core/Src/main.c **** {
 276              		.loc 1 174 1
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 8
 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 B0B5     		push	{r4, r5, r7, lr}
 281              	.LCFI9:
 282              		.cfi_def_cfa_offset 16
 283              		.cfi_offset 4, -16
 284              		.cfi_offset 5, -12
 285              		.cfi_offset 7, -8
 286              		.cfi_offset 14, -4
 287 0002 82B0     		sub	sp, sp, #8
 288              	.LCFI10:
 289              		.cfi_def_cfa_offset 24
 290 0004 00AF     		add	r7, sp, #0
 291              	.LCFI11:
 292              		.cfi_def_cfa_register 7
 175:Core/Src/main.c ****   motor_param->set_current = cos(motor_param->angle_single_round) * ki;
 293              		.loc 1 175 45
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 9


 294 0006 274B     		ldr	r3, .L19
 295 0008 1B68     		ldr	r3, [r3]
 296 000a 1B68     		ldr	r3, [r3]	@ unaligned
 297              		.loc 1 175 30
 298 000c 1846     		mov	r0, r3	@ float
 299 000e FFF7FEFF 		bl	__aeabi_f2d
 300 0012 0246     		mov	r2, r0
 301 0014 0B46     		mov	r3, r1
 302 0016 43EC102B 		vmov	d0, r2, r3
 303 001a FFF7FEFF 		bl	cos
 304 001e 55EC104B 		vmov	r4, r5, d0
 305              		.loc 1 175 67 discriminator 1
 306 0022 214B     		ldr	r3, .L19+4
 307 0024 1B68     		ldr	r3, [r3]	@ float
 308 0026 1846     		mov	r0, r3	@ float
 309 0028 FFF7FEFF 		bl	__aeabi_f2d
 310 002c 0246     		mov	r2, r0
 311 002e 0B46     		mov	r3, r1
 312 0030 2046     		mov	r0, r4
 313 0032 2946     		mov	r1, r5
 314 0034 FFF7FEFF 		bl	__aeabi_dmul
 315 0038 0246     		mov	r2, r0
 316 003a 0B46     		mov	r3, r1
 317              		.loc 1 175 14 discriminator 1
 318 003c 1949     		ldr	r1, .L19
 319 003e 0C68     		ldr	r4, [r1]
 320              		.loc 1 175 67 discriminator 1
 321 0040 1046     		mov	r0, r2
 322 0042 1946     		mov	r1, r3
 323 0044 FFF7FEFF 		bl	__aeabi_d2f
 324 0048 0346     		mov	r3, r0	@ float
 325              		.loc 1 175 28 discriminator 1
 326 004a 6361     		str	r3, [r4, #20]	@ unaligned
 176:Core/Src/main.c ****   GIMCANMotorSetCurrent(&hfdcan1, 0x01, motor_param->set_current);
 327              		.loc 1 176 52
 328 004c 154B     		ldr	r3, .L19
 329 004e 1B68     		ldr	r3, [r3]
 330              		.loc 1 176 3
 331 0050 5B69     		ldr	r3, [r3, #20]	@ unaligned
 332 0052 00EE103A 		vmov	s0, r3
 333 0056 0121     		movs	r1, #1
 334 0058 1448     		ldr	r0, .L19+8
 335 005a FFF7FEFF 		bl	GIMCANMotorSetCurrent
 177:Core/Src/main.c ****   int32_t cnt = 0;
 336              		.loc 1 177 11
 337 005e 0023     		movs	r3, #0
 338 0060 7B60     		str	r3, [r7, #4]
 178:Core/Src/main.c ****   if(fabs(motor_param->speed_raw) > 50)
 339              		.loc 1 178 22
 340 0062 104B     		ldr	r3, .L19
 341 0064 1B68     		ldr	r3, [r3]
 342 0066 DB68     		ldr	r3, [r3, #12]	@ unaligned
 343              		.loc 1 178 6
 344 0068 07EE903A 		vmov	s15, r3
 345 006c F0EEE77A 		vabs.f32	s15, s15
 346              		.loc 1 178 5
 347 0070 9FED0F7A 		vldr.32	s14, .L19+12
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 10


 348 0074 F4EEC77A 		vcmpe.f32	s15, s14
 349 0078 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 350 007c 00DC     		bgt	.L17
 179:Core/Src/main.c ****   { 
 180:Core/Src/main.c ****     cnt++;
 181:Core/Src/main.c ****     while(cnt > 500)
 182:Core/Src/main.c ****     {
 183:Core/Src/main.c ****       GIMCANMotorSetMode(&hfdcan1, 0x01, GIMCAN_CMD_DISABLE_MODE);
 184:Core/Src/main.c ****     }
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c **** }
 351              		.loc 1 186 1
 352 007e 0CE0     		b	.L18
 353              	.L17:
 180:Core/Src/main.c ****     while(cnt > 500)
 354              		.loc 1 180 8
 355 0080 7B68     		ldr	r3, [r7, #4]
 356 0082 0133     		adds	r3, r3, #1
 357 0084 7B60     		str	r3, [r7, #4]
 181:Core/Src/main.c ****     {
 358              		.loc 1 181 10
 359 0086 04E0     		b	.L15
 360              	.L16:
 183:Core/Src/main.c ****     }
 361              		.loc 1 183 7
 362 0088 CF22     		movs	r2, #207
 363 008a 0121     		movs	r1, #1
 364 008c 0748     		ldr	r0, .L19+8
 365 008e FFF7FEFF 		bl	GIMCANMotorSetMode
 366              	.L15:
 181:Core/Src/main.c ****     {
 367              		.loc 1 181 15
 368 0092 7B68     		ldr	r3, [r7, #4]
 369 0094 B3F5FA7F 		cmp	r3, #500
 370 0098 F6DC     		bgt	.L16
 371              	.L18:
 372              		.loc 1 186 1
 373 009a 00BF     		nop
 374 009c 0837     		adds	r7, r7, #8
 375              	.LCFI12:
 376              		.cfi_def_cfa_offset 16
 377 009e BD46     		mov	sp, r7
 378              	.LCFI13:
 379              		.cfi_def_cfa_register 13
 380              		@ sp needed
 381 00a0 B0BD     		pop	{r4, r5, r7, pc}
 382              	.L20:
 383 00a2 00BF     		.align	2
 384              	.L19:
 385 00a4 00000000 		.word	motor_param
 386 00a8 00000000 		.word	ki
 387 00ac 00000000 		.word	hfdcan1
 388 00b0 00004842 		.word	1112014848
 389              		.cfi_endproc
 390              	.LFE135:
 392              		.section	.text.Error_Handler,"ax",%progbits
 393              		.align	1
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 11


 394              		.global	Error_Handler
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 399              	Error_Handler:
 400              	.LFB136:
 187:Core/Src/main.c **** /* USER CODE END 4 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c **** /**
 190:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 191:Core/Src/main.c ****   * @retval None
 192:Core/Src/main.c ****   */
 193:Core/Src/main.c **** void Error_Handler(void)
 194:Core/Src/main.c **** {
 401              		.loc 1 194 1
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 0
 404              		@ frame_needed = 1, uses_anonymous_args = 0
 405 0000 80B5     		push	{r7, lr}
 406              	.LCFI14:
 407              		.cfi_def_cfa_offset 8
 408              		.cfi_offset 7, -8
 409              		.cfi_offset 14, -4
 410 0002 00AF     		add	r7, sp, #0
 411              	.LCFI15:
 412              		.cfi_def_cfa_register 7
 413              	.LBB4:
 414              	.LBB5:
 415              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 12


  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 13


  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 14


 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 15


 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 416              		.loc 2 209 3
 417              		.syntax unified
 418              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 419 0004 72B6     		cpsid i
 420              	@ 0 "" 2
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 421              		.loc 2 210 1
 422              		.thumb
 423              		.syntax unified
 424 0006 00BF     		nop
 425              	.LBE5:
 426              	.LBE4:
 195:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 196:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 197:Core/Src/main.c ****   __disable_irq();
 198:Core/Src/main.c ****   while (1)
 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     HAL_FDCAN_AbortTxRequest(&hfdcan1, FDCAN_TX_BUFFER0 | FDCAN_TX_BUFFER1);
 427              		.loc 1 200 5
 428 0008 0321     		movs	r1, #3
 429 000a 0348     		ldr	r0, .L22
 430 000c FFF7FEFF 		bl	HAL_FDCAN_AbortTxRequest
 201:Core/Src/main.c ****     break;
 431              		.loc 1 201 5
 432 0010 00BF     		nop
 202:Core/Src/main.c ****   }
 203:Core/Src/main.c ****   /* USER CODE END Error_Handler_Debug */
 204:Core/Src/main.c **** }
 433              		.loc 1 204 1
 434 0012 00BF     		nop
 435 0014 80BD     		pop	{r7, pc}
 436              	.L23:
 437 0016 00BF     		.align	2
 438              	.L22:
 439 0018 00000000 		.word	hfdcan1
 440              		.cfi_endproc
 441              	.LFE136:
 443              		.text
 444              	.Letext0:
 445              		.file 3 "D:/msys64/mingw64/arm-none-eabi/include/machine/_default_types.h"
 446              		.file 4 "D:/msys64/mingw64/arm-none-eabi/include/sys/_stdint.h"
 447              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 448              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 449              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 450              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 451              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_fdcan.h"
 452              		.file 10 "Module/GIM6010_8/GIM6010_8.h"
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 16


 453              		.file 11 "Core/Inc/fdcan.h"
 454              		.file 12 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_pwr_ex.h"
 455              		.file 13 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
 456              		.file 14 "Core/Inc/spi.h"
 457              		.file 15 "Core/Inc/tim.h"
 458              		.file 16 "Core/Inc/gpio.h"
 459              		.file 17 "D:/msys64/mingw64/arm-none-eabi/include/math.h"
 460              		.file 18 "Bsp/bsp_fdcan/bsp_fdcan.h"
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:25     .bss.motor_param:00000000 motor_param
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:22     .bss.motor_param:00000000 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:32     .bss.angle:00000000 angle
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:29     .bss.angle:00000000 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:39     .data.ki:00000000 ki
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:36     .data.ki:00000000 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:42     .text.main:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:48     .text.main:00000000 main
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:113    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:231    .text.ReadParameter:00000000 ReadParameter
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:274    .text.Control_State_Machine:00000000 Control_State_Machine
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:101    .text.main:00000048 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:107    .text.SystemClock_Config:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:399    .text.Error_Handler:00000000 Error_Handler
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:226    .text.ReadParameter:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:261    .text.ReadParameter:0000001c $d
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:269    .text.Control_State_Machine:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:385    .text.Control_State_Machine:000000a4 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:393    .text.Error_Handler:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccISuMeb.s:439    .text.Error_Handler:00000018 $d

UNDEFINED SYMBOLS
HAL_Init
MX_GPIO_Init
MX_FDCAN1_Init
MX_TIM6_Init
MX_SPI3_Init
fdcan_user_init
GIMCANMotorSetMode
GIM6010_Measure_Ptr
HAL_Delay
hfdcan1
memset
HAL_PWREx_ControlVoltageScaling
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_f2d
__aeabi_dmul
__aeabi_d2f
cos
GIMCANMotorSetCurrent
HAL_FDCAN_AbortTxRequest
