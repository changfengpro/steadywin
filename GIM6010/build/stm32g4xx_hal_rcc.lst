ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"stm32g4xx_hal_rcc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c"
  20              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  21              		.align	1
  22              		.global	HAL_RCC_DeInit
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	HAL_RCC_DeInit:
  28              	.LFB132:
   1:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
   2:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @file    stm32g4xx_hal_rcc.c
   4:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   6:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
   8:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *           + Peripheral Control functions
  10:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
  11:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   @verbatim
  12:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   ==============================================================================
  13:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                       ##### RCC specific features #####
  14:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..]
  16:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       After reset the device is running from High Speed Internal oscillator
  17:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (16 MHz) with Flash 0 wait state. Flash prefetch buffer, D-Cache
  18:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       and I-Cache are disabled, and all peripherals are off except internal
  19:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       SRAM, Flash and JTAG.
  20:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  21:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHBs) and Low speed (APBs) buses:
  22:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  23:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) All GPIOs are in analog mode, except the JTAG pins which
  25:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  26:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  27:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..]
  28:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       Once the device started from reset, the user application has to:
  29:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  30:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 2


  31:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings
  32:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  33:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  34:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals which clocks are not
  35:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           derived from the System clock (USB, RNG, USART, LPUART, FDCAN, some TIMERs,
  36:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           UCPD, I2S, I2C, LPTIM, ADC, QSPI)
  37:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  38:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   @endverbatim
  39:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   ******************************************************************************
  40:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @attention
  41:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
  42:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * Copyright (c) 2019 STMicroelectronics.
  43:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * All rights reserved.
  44:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
  45:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * This software is licensed under terms that can be found in the LICENSE file in
  46:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * the root directory of this software component.
  47:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  48:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   ******************************************************************************
  49:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  50:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  51:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  52:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #include "stm32g4xx_hal.h"
  53:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  54:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @addtogroup STM32G4xx_HAL_Driver
  55:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
  56:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  57:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  58:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC RCC
  59:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief RCC HAL module driver
  60:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
  61:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  62:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  63:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  64:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  65:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  66:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  67:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  68:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  * @{
  69:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  */
  70:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define HSE_TIMEOUT_VALUE          HSE_STARTUP_TIMEOUT
  71:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define HSI_TIMEOUT_VALUE          2U                /* 2 ms (minimum Tick + 1) */
  72:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define LSI_TIMEOUT_VALUE          2U                /* 2 ms (minimum Tick + 1) */
  73:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define HSI48_TIMEOUT_VALUE        2U                /* 2 ms (minimum Tick + 1) */
  74:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define PLL_TIMEOUT_VALUE          2U                /* 2 ms (minimum Tick + 1) */
  75:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define CLOCKSWITCH_TIMEOUT_VALUE  5000U             /* 5 s    */
  76:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
  77:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
  78:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  79:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  80:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
  81:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
  82:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
  83:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  84:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define RCC_GET_MCO_GPIO_PIN(__RCC_MCOx__)   ((__RCC_MCOx__) & GPIO_PIN_MASK)
  85:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  86:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define RCC_GET_MCO_GPIO_AF(__RCC_MCOx__)    (((__RCC_MCOx__) & RCC_MCO_GPIOAF_MASK) >> RCC_MCO_GPI
  87:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 3


  88:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define RCC_GET_MCO_GPIO_INDEX(__RCC_MCOx__) (((__RCC_MCOx__) & RCC_MCO_GPIOPORT_MASK) >> RCC_MCO_G
  89:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  90:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define RCC_GET_MCO_GPIO_PORT(__RCC_MCOx__)  (AHB2PERIPH_BASE + ((0x00000400UL) * RCC_GET_MCO_GPIO_
  91:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  92:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** #define RCC_PLL_OSCSOURCE_CONFIG(__HAL_RCC_PLLSOURCE__) \
  93:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             (MODIFY_REG(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC, (__HAL_RCC_PLLSOURCE__)))
  94:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
  95:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
  96:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
  97:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
  98:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
  99:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Private_Functions RCC Private Functions
 102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
 103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** static uint32_t          RCC_GetSysClockFreqFromPLLSource(void);
 105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
 107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
 113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions
 116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions
 117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   @verbatim
 119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  ===============================================================================
 120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  ===============================================================================
 122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..]
 123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       This section provides functions allowing to configure the internal and external oscillators
 124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****        and APB2).
 126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) HSI (high-speed internal): 16 MHz factory-trimmed RC used directly or through
 129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              the PLL as System clock source.
 130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) LSI (low-speed internal): 32 KHz low consumption RC used as IWDG and/or RTC
 132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              clock source.
 133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) HSE (high-speed external): 4 to 48 MHz crystal oscillator used directly or
 135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              through the PLL as System clock source. Can be used also optionally as RTC clock sourc
 136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) LSE (low-speed external): 32.768 KHz oscillator used optionally as RTC clock source.
 138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) PLL (clocked by HSI, HSE) providing up to three independent output clocks:
 140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (++) The first output is used to generate the high speed system clock (up to 170 MHz).
 141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (++) The second output is used to generate the clock for the USB (48 MHz),
 142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 the QSPI (<= 48 MHz), the FDCAN, the SAI and the I2S.
 143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (++) The third output is used to generate a clock for ADC
 144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 4


 145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) CSS (Clock security system): once enabled, if a HSE clock failure occurs
 146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             (HSE used directly or through PLL as System clock source), the System clock
 147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              is automatically switched to HSI and an interrupt is generated if enabled.
 148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              The interrupt is linked to the Cortex-M4 NMI (Non-Maskable Interrupt)
 149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              exception vector.
 150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) MCO (microcontroller clock output): used to output LSI, HSI, LSE, HSE,
 152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              main PLL clock, system clock or RC48 clock (through a configurable prescaler) on PA8 p
 153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              HSE and main PLL.
 157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              The AHB clock (HCLK) is derived from System clock through configurable
 158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              prescaler and used to clock the CPU, memory and peripherals mapped
 159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              from AHB clock through configurable prescalers and used to clock
 161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              the peripherals mapped on these buses. You can use
 162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              "HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (+@) RTC: the RTC clock can be derived either from the LSI, LSE or HSE clock
 167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 divided by 2 to 31.
 168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 You have to use __HAL_RCC_RTC_ENABLE() and HAL_RCCEx_PeriphCLKConfig() function
 169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 to configure this clock.
 170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (+@) USB FS and RNG: USB FS requires a frequency equal to 48 MHz
 171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 to work correctly, while the RNG peripheral requires a frequency
 172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 equal or lower than to 48 MHz. This clock is derived of the main PLL
 173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 through PLLQ divider. You have to enable the peripheral clock and use
 174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                 HAL_RCCEx_PeriphCLKConfig() function to configure this clock.
 175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            (+@) IWDG clock which is always the LSI clock.
 176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (+) The maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 is 170 MHz.
 179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              The clock source frequency should be adapted depending on the device voltage range
 180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****              as listed in the Reference Manual "Clock source frequency versus voltage scaling" chap
 181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   @endverbatim
 183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            Table 1. HCLK clock frequency for STM32G4xx devices
 185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            +----------------------------------------------------------------------------+
 186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            | Latency         |            HCLK clock frequency (MHz)                    |
 187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |                 |----------------------------------------------------------|
 188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |                 |  voltage range 1  |  voltage range 1  | voltage range 2  |
 189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |                 | boost mode 1.28 V | normal mode 1.2 V |     1.0 V        |
 190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|-------------------|------------------|
 191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |0WS(1 CPU cycles)|    HCLK <= 34     |    HCLK <= 30     |    HCLK <= 13    |
 192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|-------------------|------------------|
 193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |1WS(2 CPU cycles)|    HCLK <= 68     |    HCLK <= 60     |    HCLK <= 26    |
 194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|-------------------|------------------|
 195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |2WS(3 CPU cycles)|    HCLK <= 102    |    HCLK <= 90     |        -         |
 196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|-------------------|------------------|
 197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |3WS(4 CPU cycles)|    HCLK <= 136    |    HCLK <= 120    |        -         |
 198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |-----------------|-------------------|-------------------|------------------|
 199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            |4WS(5 CPU cycles)|    HCLK <= 170    |    HCLK <= 150    |        -         |
 200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****            +----------------------------------------------------------------------------+
 201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 5


 202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
 203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Reset the RCC clock configuration to the default reset state.
 207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - HSE, PLL OFF
 210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - CSS, MCO1 OFF
 212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - All interrupts disabled
 213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - All interrupt and reset flags cleared
 214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   This function doesn't modify the configuration of the
 215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - Peripheral clocks
 216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval HAL status
 218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_DeInit(void)
 220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
  29              		.loc 1 220 1
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
 221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t tickstart;
 222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get Start Tick*/
 224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  44              		.loc 1 224 15
  45 0006 FFF7FEFF 		bl	HAL_GetTick
  46 000a 7860     		str	r0, [r7, #4]
 225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Set HSION bit to the reset value */
 227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION);
  47              		.loc 1 227 3
  48 000c 394B     		ldr	r3, .L10
  49 000e 1B68     		ldr	r3, [r3]
  50 0010 384A     		ldr	r2, .L10
  51 0012 43F48073 		orr	r3, r3, #256
  52 0016 1360     		str	r3, [r2]
 228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Wait till HSI is ready */
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
  53              		.loc 1 230 9
  54 0018 08E0     		b	.L2
  55              	.L4:
 231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 6


 232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
  56              		.loc 1 232 10
  57 001a FFF7FEFF 		bl	HAL_GetTick
  58 001e 0246     		mov	r2, r0
  59              		.loc 1 232 24 discriminator 1
  60 0020 7B68     		ldr	r3, [r7, #4]
  61 0022 D31A     		subs	r3, r2, r3
  62              		.loc 1 232 8 discriminator 1
  63 0024 022B     		cmp	r3, #2
  64 0026 01D9     		bls	.L2
 233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       return HAL_TIMEOUT;
  65              		.loc 1 234 14
  66 0028 0323     		movs	r3, #3
  67 002a 5FE0     		b	.L3
  68              	.L2:
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
  69              		.loc 1 230 10
  70 002c 314B     		ldr	r3, .L10
  71 002e 1B68     		ldr	r3, [r3]
  72 0030 03F48063 		and	r3, r3, #1024
 230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
  73              		.loc 1 230 43
  74 0034 002B     		cmp	r3, #0
  75 0036 F0D0     		beq	.L4
 235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  /* Set HSITRIM[6:0] bits to the reset value */
 239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->ICSCR, RCC_HSICALIBRATION_DEFAULT << RCC_ICSCR_HSITRIM_Pos);
  76              		.loc 1 239 3
  77 0038 2E4B     		ldr	r3, .L10
  78 003a 5B68     		ldr	r3, [r3, #4]
  79 003c 2D4A     		ldr	r2, .L10
  80 003e 43F08043 		orr	r3, r3, #1073741824
  81 0042 5360     		str	r3, [r2, #4]
 240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get Start Tick*/
 242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
  82              		.loc 1 242 15
  83 0044 FFF7FEFF 		bl	HAL_GetTick
  84 0048 7860     		str	r0, [r7, #4]
 243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Reset CFGR register (HSI is selected as system clock source) */
 245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC->CFGR = 0x00000001u;
  85              		.loc 1 245 6
  86 004a 2A4B     		ldr	r3, .L10
  87              		.loc 1 245 13
  88 004c 0122     		movs	r2, #1
  89 004e 9A60     		str	r2, [r3, #8]
 246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Wait till HSI is ready */
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   while (READ_BIT(RCC->CFGR, RCC_CFGR_SWS) != RCC_CFGR_SWS_HSI)
  90              		.loc 1 248 9
  91 0050 0AE0     		b	.L5
  92              	.L6:
 249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 7


 250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
  93              		.loc 1 250 10
  94 0052 FFF7FEFF 		bl	HAL_GetTick
  95 0056 0246     		mov	r2, r0
  96              		.loc 1 250 24 discriminator 1
  97 0058 7B68     		ldr	r3, [r7, #4]
  98 005a D31A     		subs	r3, r2, r3
  99              		.loc 1 250 8 discriminator 1
 100 005c 41F28832 		movw	r2, #5000
 101 0060 9342     		cmp	r3, r2
 102 0062 01D9     		bls	.L5
 251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       return HAL_TIMEOUT;
 103              		.loc 1 252 14
 104 0064 0323     		movs	r3, #3
 105 0066 41E0     		b	.L3
 106              	.L5:
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 107              		.loc 1 248 10
 108 0068 224B     		ldr	r3, .L10
 109 006a 9B68     		ldr	r3, [r3, #8]
 110 006c 03F00C03 		and	r3, r3, #12
 248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 111              		.loc 1 248 44
 112 0070 042B     		cmp	r3, #4
 113 0072 EED1     		bne	.L6
 253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
 114              		.loc 1 257 19
 115 0074 204B     		ldr	r3, .L10+4
 116 0076 214A     		ldr	r2, .L10+8
 117 0078 1A60     		str	r2, [r3]
 258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Adapt Systick interrupt period */
 260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (HAL_InitTick(uwTickPrio) != HAL_OK)
 118              		.loc 1 260 7
 119 007a 214B     		ldr	r3, .L10+12
 120 007c 1B68     		ldr	r3, [r3]
 121 007e 1846     		mov	r0, r3
 122 0080 FFF7FEFF 		bl	HAL_InitTick
 123 0084 0346     		mov	r3, r0
 124              		.loc 1 260 6 discriminator 1
 125 0086 002B     		cmp	r3, #0
 126 0088 01D0     		beq	.L7
 261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     return HAL_ERROR;
 127              		.loc 1 262 12
 128 008a 0123     		movs	r3, #1
 129 008c 2EE0     		b	.L3
 130              	.L7:
 263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Clear CR register in 2 steps: first to clear HSEON in case bypass was enabled */
 266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC->CR = RCC_CR_HSION;
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 8


 131              		.loc 1 266 6
 132 008e 194B     		ldr	r3, .L10
 133              		.loc 1 266 11
 134 0090 4FF48072 		mov	r2, #256
 135 0094 1A60     		str	r2, [r3]
 267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Then again to HSEBYP in case bypass was enabled */
 269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC->CR = RCC_CR_HSION;
 136              		.loc 1 269 6
 137 0096 174B     		ldr	r3, .L10
 138              		.loc 1 269 11
 139 0098 4FF48072 		mov	r2, #256
 140 009c 1A60     		str	r2, [r3]
 270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get Start Tick*/
 272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   tickstart = HAL_GetTick();
 141              		.loc 1 272 15
 142 009e FFF7FEFF 		bl	HAL_GetTick
 143 00a2 7860     		str	r0, [r7, #4]
 273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Wait till PLL is OFF */
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 144              		.loc 1 275 9
 145 00a4 08E0     		b	.L8
 146              	.L9:
 276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 147              		.loc 1 277 10
 148 00a6 FFF7FEFF 		bl	HAL_GetTick
 149 00aa 0246     		mov	r2, r0
 150              		.loc 1 277 24 discriminator 1
 151 00ac 7B68     		ldr	r3, [r7, #4]
 152 00ae D31A     		subs	r3, r2, r3
 153              		.loc 1 277 8 discriminator 1
 154 00b0 022B     		cmp	r3, #2
 155 00b2 01D9     		bls	.L8
 278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       return HAL_TIMEOUT;
 156              		.loc 1 279 14
 157 00b4 0323     		movs	r3, #3
 158 00b6 19E0     		b	.L3
 159              	.L8:
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 160              		.loc 1 275 10
 161 00b8 0E4B     		ldr	r3, .L10
 162 00ba 1B68     		ldr	r3, [r3]
 163 00bc 03F00073 		and	r3, r3, #33554432
 275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 164              		.loc 1 275 43
 165 00c0 002B     		cmp	r3, #0
 166 00c2 F0D1     		bne	.L9
 280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* once PLL is OFF, reset PLLCFGR register to default value */
 284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC->PLLCFGR = RCC_PLLCFGR_PLLN_4;
 167              		.loc 1 284 6
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 9


 168 00c4 0B4B     		ldr	r3, .L10
 169              		.loc 1 284 16
 170 00c6 4FF48052 		mov	r2, #4096
 171 00ca DA60     		str	r2, [r3, #12]
 285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Disable all interrupts */
 287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   CLEAR_REG(RCC->CIER);
 172              		.loc 1 287 3
 173 00cc 094B     		ldr	r3, .L10
 174 00ce 0022     		movs	r2, #0
 175 00d0 9A61     		str	r2, [r3, #24]
 288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Clear all interrupt flags */
 290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   WRITE_REG(RCC->CICR, 0xFFFFFFFFU);
 176              		.loc 1 290 3
 177 00d2 084B     		ldr	r3, .L10
 178 00d4 4FF0FF32 		mov	r2, #-1
 179 00d8 1A62     		str	r2, [r3, #32]
 291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Clear all reset flags */
 293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->CSR, RCC_CSR_RMVF);
 180              		.loc 1 293 3
 181 00da 064B     		ldr	r3, .L10
 182 00dc D3F89430 		ldr	r3, [r3, #148]
 183 00e0 044A     		ldr	r2, .L10
 184 00e2 43F40003 		orr	r3, r3, #8388608
 185 00e6 C2F89430 		str	r3, [r2, #148]
 294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return HAL_OK;
 186              		.loc 1 295 10
 187 00ea 0023     		movs	r3, #0
 188              	.L3:
 296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 189              		.loc 1 296 1
 190 00ec 1846     		mov	r0, r3
 191 00ee 0837     		adds	r7, r7, #8
 192              	.LCFI3:
 193              		.cfi_def_cfa_offset 8
 194 00f0 BD46     		mov	sp, r7
 195              	.LCFI4:
 196              		.cfi_def_cfa_register 13
 197              		@ sp needed
 198 00f2 80BD     		pop	{r7, pc}
 199              	.L11:
 200              		.align	2
 201              	.L10:
 202 00f4 00100240 		.word	1073876992
 203 00f8 00000000 		.word	SystemCoreClock
 204 00fc 0024F400 		.word	16000000
 205 0100 00000000 		.word	uwTickPrio
 206              		.cfi_endproc
 207              	.LFE132:
 209              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 210              		.align	1
 211              		.global	HAL_RCC_OscConfig
 212              		.syntax unified
 213              		.thumb
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 10


 214              		.thumb_func
 216              	HAL_RCC_OscConfig:
 217              	.LFB133:
 297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Initialize the RCC Oscillators according to the specified parameters in the
 300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
 302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval HAL status
 311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 218              		.loc 1 313 1
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 32
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222 0000 80B5     		push	{r7, lr}
 223              	.LCFI5:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 7, -8
 226              		.cfi_offset 14, -4
 227 0002 88B0     		sub	sp, sp, #32
 228              	.LCFI6:
 229              		.cfi_def_cfa_offset 40
 230 0004 00AF     		add	r7, sp, #0
 231              	.LCFI7:
 232              		.cfi_def_cfa_register 7
 233 0006 7860     		str	r0, [r7, #4]
 314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t tickstart;
 315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t temp_sysclksrc;
 316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t temp_pllckcfg;
 317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check Null pointer */
 319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (RCC_OscInitStruct == NULL)
 234              		.loc 1 319 6
 235 0008 7B68     		ldr	r3, [r7, #4]
 236 000a 002B     		cmp	r3, #0
 237 000c 01D1     		bne	.L13
 320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     return HAL_ERROR;
 238              		.loc 1 321 12
 239 000e 0123     		movs	r3, #1
 240 0010 FEE2     		b	.L14
 241              	.L13:
 322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
 325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 11


 327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/
 328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 242              		.loc 1 328 26
 243 0012 7B68     		ldr	r3, [r7, #4]
 244 0014 1B68     		ldr	r3, [r3]
 245              		.loc 1 328 44
 246 0016 03F00103 		and	r3, r3, #1
 247              		.loc 1 328 6
 248 001a 002B     		cmp	r3, #0
 249 001c 75D0     		beq	.L15
 329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the parameters */
 331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 250              		.loc 1 333 22
 251 001e 974B     		ldr	r3, .L80
 252 0020 9B68     		ldr	r3, [r3, #8]
 253              		.loc 1 333 20
 254 0022 03F00C03 		and	r3, r3, #12
 255 0026 BB61     		str	r3, [r7, #24]
 334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 256              		.loc 1 334 21
 257 0028 944B     		ldr	r3, .L80
 258 002a DB68     		ldr	r3, [r3, #12]
 259              		.loc 1 334 19
 260 002c 03F00303 		and	r3, r3, #3
 261 0030 7B61     		str	r3, [r7, #20]
 335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (((temp_sysclksrc == RCC_CFGR_SWS_PLL) && (temp_pllckcfg == RCC_PLLSOURCE_HSE)) || (temp_sys
 262              		.loc 1 337 8
 263 0032 BB69     		ldr	r3, [r7, #24]
 264 0034 0C2B     		cmp	r3, #12
 265 0036 02D1     		bne	.L16
 266              		.loc 1 337 47 discriminator 1
 267 0038 7B69     		ldr	r3, [r7, #20]
 268 003a 032B     		cmp	r3, #3
 269 003c 02D0     		beq	.L17
 270              	.L16:
 271              		.loc 1 337 88 discriminator 3
 272 003e BB69     		ldr	r3, [r7, #24]
 273 0040 082B     		cmp	r3, #8
 274 0042 0BD1     		bne	.L18
 275              	.L17:
 338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if ((READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 276              		.loc 1 339 12
 277 0044 8D4B     		ldr	r3, .L80
 278 0046 1B68     		ldr	r3, [r3]
 279 0048 03F40033 		and	r3, r3, #131072
 280              		.loc 1 339 10
 281 004c 002B     		cmp	r3, #0
 282 004e 5BD0     		beq	.L78
 283              		.loc 1 339 73 discriminator 1
 284 0050 7B68     		ldr	r3, [r7, #4]
 285 0052 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 12


 286              		.loc 1 339 52 discriminator 1
 287 0054 002B     		cmp	r3, #0
 288 0056 57D1     		bne	.L78
 340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_ERROR;
 289              		.loc 1 341 16
 290 0058 0123     		movs	r3, #1
 291 005a D9E2     		b	.L14
 292              	.L18:
 342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 293              		.loc 1 347 7
 294 005c 7B68     		ldr	r3, [r7, #4]
 295 005e 5B68     		ldr	r3, [r3, #4]
 296 0060 B3F5803F 		cmp	r3, #65536
 297 0064 06D1     		bne	.L20
 298              		.loc 1 347 7 is_stmt 0 discriminator 1
 299 0066 854B     		ldr	r3, .L80
 300 0068 1B68     		ldr	r3, [r3]
 301 006a 844A     		ldr	r2, .L80
 302 006c 43F48033 		orr	r3, r3, #65536
 303 0070 1360     		str	r3, [r2]
 304 0072 1DE0     		b	.L21
 305              	.L20:
 306              		.loc 1 347 7 discriminator 2
 307 0074 7B68     		ldr	r3, [r7, #4]
 308 0076 5B68     		ldr	r3, [r3, #4]
 309 0078 B3F5A02F 		cmp	r3, #327680
 310 007c 0CD1     		bne	.L22
 311              		.loc 1 347 7 discriminator 3
 312 007e 7F4B     		ldr	r3, .L80
 313 0080 1B68     		ldr	r3, [r3]
 314 0082 7E4A     		ldr	r2, .L80
 315 0084 43F48023 		orr	r3, r3, #262144
 316 0088 1360     		str	r3, [r2]
 317 008a 7C4B     		ldr	r3, .L80
 318 008c 1B68     		ldr	r3, [r3]
 319 008e 7B4A     		ldr	r2, .L80
 320 0090 43F48033 		orr	r3, r3, #65536
 321 0094 1360     		str	r3, [r2]
 322 0096 0BE0     		b	.L21
 323              	.L22:
 324              		.loc 1 347 7 discriminator 4
 325 0098 784B     		ldr	r3, .L80
 326 009a 1B68     		ldr	r3, [r3]
 327 009c 774A     		ldr	r2, .L80
 328 009e 23F48033 		bic	r3, r3, #65536
 329 00a2 1360     		str	r3, [r2]
 330 00a4 754B     		ldr	r3, .L80
 331 00a6 1B68     		ldr	r3, [r3]
 332 00a8 744A     		ldr	r2, .L80
 333 00aa 23F48023 		bic	r3, r3, #262144
 334 00ae 1360     		str	r3, [r2]
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 13


 335              	.L21:
 348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Check the HSE State */
 350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if (RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 336              		.loc 1 350 28 is_stmt 1
 337 00b0 7B68     		ldr	r3, [r7, #4]
 338 00b2 5B68     		ldr	r3, [r3, #4]
 339              		.loc 1 350 10
 340 00b4 002B     		cmp	r3, #0
 341 00b6 13D0     		beq	.L23
 351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 342              		.loc 1 353 21
 343 00b8 FFF7FEFF 		bl	HAL_GetTick
 344 00bc 3861     		str	r0, [r7, #16]
 354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till HSE is ready */
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 345              		.loc 1 356 15
 346 00be 08E0     		b	.L24
 347              	.L25:
 357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 348              		.loc 1 358 16
 349 00c0 FFF7FEFF 		bl	HAL_GetTick
 350 00c4 0246     		mov	r2, r0
 351              		.loc 1 358 30 discriminator 1
 352 00c6 3B69     		ldr	r3, [r7, #16]
 353 00c8 D31A     		subs	r3, r2, r3
 354              		.loc 1 358 14 discriminator 1
 355 00ca 642B     		cmp	r3, #100
 356 00cc 01D9     		bls	.L24
 359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 357              		.loc 1 360 20
 358 00ce 0323     		movs	r3, #3
 359 00d0 9EE2     		b	.L14
 360              	.L24:
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 361              		.loc 1 356 16
 362 00d2 6A4B     		ldr	r3, .L80
 363 00d4 1B68     		ldr	r3, [r3]
 364 00d6 03F40033 		and	r3, r3, #131072
 356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 365              		.loc 1 356 49
 366 00da 002B     		cmp	r3, #0
 367 00dc F0D0     		beq	.L25
 368 00de 14E0     		b	.L15
 369              	.L23:
 361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 14


 370              		.loc 1 367 21
 371 00e0 FFF7FEFF 		bl	HAL_GetTick
 372 00e4 3861     		str	r0, [r7, #16]
 368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_HSERDY) != 0U)
 373              		.loc 1 370 15
 374 00e6 08E0     		b	.L26
 375              	.L27:
 371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 376              		.loc 1 372 16
 377 00e8 FFF7FEFF 		bl	HAL_GetTick
 378 00ec 0246     		mov	r2, r0
 379              		.loc 1 372 30 discriminator 1
 380 00ee 3B69     		ldr	r3, [r7, #16]
 381 00f0 D31A     		subs	r3, r2, r3
 382              		.loc 1 372 14 discriminator 1
 383 00f2 642B     		cmp	r3, #100
 384 00f4 01D9     		bls	.L26
 373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 385              		.loc 1 374 20
 386 00f6 0323     		movs	r3, #3
 387 00f8 8AE2     		b	.L14
 388              	.L26:
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 389              		.loc 1 370 16
 390 00fa 604B     		ldr	r3, .L80
 391 00fc 1B68     		ldr	r3, [r3]
 392 00fe 03F40033 		and	r3, r3, #131072
 370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 393              		.loc 1 370 49
 394 0102 002B     		cmp	r3, #0
 395 0104 F0D1     		bne	.L27
 396 0106 00E0     		b	.L15
 397              	.L78:
 339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 398              		.loc 1 339 10
 399 0108 00BF     		nop
 400              	.L15:
 375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/
 381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 401              		.loc 1 381 26
 402 010a 7B68     		ldr	r3, [r7, #4]
 403 010c 1B68     		ldr	r3, [r3]
 404              		.loc 1 381 44
 405 010e 03F00203 		and	r3, r3, #2
 406              		.loc 1 381 6
 407 0112 002B     		cmp	r3, #0
 408 0114 75D0     		beq	.L28
 382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 15


 383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the parameters */
 384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 387:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 388:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     temp_sysclksrc = __HAL_RCC_GET_SYSCLK_SOURCE();
 409              		.loc 1 388 22
 410 0116 594B     		ldr	r3, .L80
 411 0118 9B68     		ldr	r3, [r3, #8]
 412              		.loc 1 388 20
 413 011a 03F00C03 		and	r3, r3, #12
 414 011e BB61     		str	r3, [r7, #24]
 389:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     temp_pllckcfg = __HAL_RCC_GET_PLL_OSCSOURCE();
 415              		.loc 1 389 21
 416 0120 564B     		ldr	r3, .L80
 417 0122 DB68     		ldr	r3, [r3, #12]
 418              		.loc 1 389 19
 419 0124 03F00303 		and	r3, r3, #3
 420 0128 7B61     		str	r3, [r7, #20]
 390:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (((temp_sysclksrc == RCC_CFGR_SWS_PLL) && (temp_pllckcfg == RCC_PLLSOURCE_HSI)) || (temp_sys
 421              		.loc 1 390 8
 422 012a BB69     		ldr	r3, [r7, #24]
 423 012c 0C2B     		cmp	r3, #12
 424 012e 02D1     		bne	.L29
 425              		.loc 1 390 47 discriminator 1
 426 0130 7B69     		ldr	r3, [r7, #20]
 427 0132 022B     		cmp	r3, #2
 428 0134 02D0     		beq	.L30
 429              	.L29:
 430              		.loc 1 390 88 discriminator 3
 431 0136 BB69     		ldr	r3, [r7, #24]
 432 0138 042B     		cmp	r3, #4
 433 013a 1FD1     		bne	.L31
 434              	.L30:
 391:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 392:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* When HSI is used as system clock it will not be disabled */
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if ((READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U) && (RCC_OscInitStruct->HSIState == RCC_HSI_OFF))
 435              		.loc 1 393 12
 436 013c 4F4B     		ldr	r3, .L80
 437 013e 1B68     		ldr	r3, [r3]
 438 0140 03F48063 		and	r3, r3, #1024
 439              		.loc 1 393 10
 440 0144 002B     		cmp	r3, #0
 441 0146 05D0     		beq	.L32
 442              		.loc 1 393 73 discriminator 1
 443 0148 7B68     		ldr	r3, [r7, #4]
 444 014a DB68     		ldr	r3, [r3, #12]
 445              		.loc 1 393 52 discriminator 1
 446 014c 002B     		cmp	r3, #0
 447 014e 01D1     		bne	.L32
 394:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 395:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_ERROR;
 448              		.loc 1 395 16
 449 0150 0123     		movs	r3, #1
 450 0152 5DE2     		b	.L14
 451              	.L32:
 396:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 16


 397:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 398:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 399:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 400:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 401:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 452              		.loc 1 401 9
 453 0154 494B     		ldr	r3, .L80
 454 0156 5B68     		ldr	r3, [r3, #4]
 455 0158 23F0FE42 		bic	r2, r3, #2130706432
 456 015c 7B68     		ldr	r3, [r7, #4]
 457 015e 1B69     		ldr	r3, [r3, #16]
 458 0160 1B06     		lsls	r3, r3, #24
 459 0162 4649     		ldr	r1, .L80
 460 0164 1343     		orrs	r3, r3, r2
 461 0166 4B60     		str	r3, [r1, #4]
 402:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 403:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Adapt Systick interrupt period */
 404:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if (HAL_InitTick(uwTickPrio) != HAL_OK)
 462              		.loc 1 404 13
 463 0168 454B     		ldr	r3, .L80+4
 464 016a 1B68     		ldr	r3, [r3]
 465 016c 1846     		mov	r0, r3
 466 016e FFF7FEFF 		bl	HAL_InitTick
 467 0172 0346     		mov	r3, r0
 468              		.loc 1 404 12 discriminator 1
 469 0174 002B     		cmp	r3, #0
 470 0176 43D0     		beq	.L79
 405:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 406:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_ERROR;
 471              		.loc 1 406 18
 472 0178 0123     		movs	r3, #1
 473 017a 49E2     		b	.L14
 474              	.L31:
 407:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 408:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 409:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 410:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 411:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 412:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Check the HSI State */
 413:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if (RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 475              		.loc 1 413 28
 476 017c 7B68     		ldr	r3, [r7, #4]
 477 017e DB68     		ldr	r3, [r3, #12]
 478              		.loc 1 413 10
 479 0180 002B     		cmp	r3, #0
 480 0182 23D0     		beq	.L34
 414:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 415:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Enable the Internal High Speed oscillator (HSI). */
 416:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 481              		.loc 1 416 9
 482 0184 3D4B     		ldr	r3, .L80
 483 0186 1B68     		ldr	r3, [r3]
 484 0188 3C4A     		ldr	r2, .L80
 485 018a 43F48073 		orr	r3, r3, #256
 486 018e 1360     		str	r3, [r2]
 417:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 418:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 17


 419:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 487              		.loc 1 419 21
 488 0190 FFF7FEFF 		bl	HAL_GetTick
 489 0194 3861     		str	r0, [r7, #16]
 420:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 421:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till HSI is ready */
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 490              		.loc 1 422 15
 491 0196 08E0     		b	.L35
 492              	.L36:
 423:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 424:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 493              		.loc 1 424 16
 494 0198 FFF7FEFF 		bl	HAL_GetTick
 495 019c 0246     		mov	r2, r0
 496              		.loc 1 424 30 discriminator 1
 497 019e 3B69     		ldr	r3, [r7, #16]
 498 01a0 D31A     		subs	r3, r2, r3
 499              		.loc 1 424 14 discriminator 1
 500 01a2 022B     		cmp	r3, #2
 501 01a4 01D9     		bls	.L35
 425:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 426:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 502              		.loc 1 426 20
 503 01a6 0323     		movs	r3, #3
 504 01a8 32E2     		b	.L14
 505              	.L35:
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 506              		.loc 1 422 16
 507 01aa 344B     		ldr	r3, .L80
 508 01ac 1B68     		ldr	r3, [r3]
 509 01ae 03F48063 		and	r3, r3, #1024
 422:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 510              		.loc 1 422 49
 511 01b2 002B     		cmp	r3, #0
 512 01b4 F0D0     		beq	.L36
 427:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 428:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 429:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 430:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 431:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 513              		.loc 1 431 9
 514 01b6 314B     		ldr	r3, .L80
 515 01b8 5B68     		ldr	r3, [r3, #4]
 516 01ba 23F0FE42 		bic	r2, r3, #2130706432
 517 01be 7B68     		ldr	r3, [r7, #4]
 518 01c0 1B69     		ldr	r3, [r3, #16]
 519 01c2 1B06     		lsls	r3, r3, #24
 520 01c4 2D49     		ldr	r1, .L80
 521 01c6 1343     		orrs	r3, r3, r2
 522 01c8 4B60     		str	r3, [r1, #4]
 523 01ca 1AE0     		b	.L28
 524              	.L34:
 432:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 433:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 434:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 435:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 18


 436:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 525              		.loc 1 436 9
 526 01cc 2B4B     		ldr	r3, .L80
 527 01ce 1B68     		ldr	r3, [r3]
 528 01d0 2A4A     		ldr	r2, .L80
 529 01d2 23F48073 		bic	r3, r3, #256
 530 01d6 1360     		str	r3, [r2]
 437:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 438:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 439:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 531              		.loc 1 439 21
 532 01d8 FFF7FEFF 		bl	HAL_GetTick
 533 01dc 3861     		str	r0, [r7, #16]
 440:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 441:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_HSIRDY) != 0U)
 534              		.loc 1 442 15
 535 01de 08E0     		b	.L37
 536              	.L38:
 443:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 444:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 537              		.loc 1 444 16
 538 01e0 FFF7FEFF 		bl	HAL_GetTick
 539 01e4 0246     		mov	r2, r0
 540              		.loc 1 444 30 discriminator 1
 541 01e6 3B69     		ldr	r3, [r7, #16]
 542 01e8 D31A     		subs	r3, r2, r3
 543              		.loc 1 444 14 discriminator 1
 544 01ea 022B     		cmp	r3, #2
 545 01ec 01D9     		bls	.L37
 445:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 446:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 546              		.loc 1 446 20
 547 01ee 0323     		movs	r3, #3
 548 01f0 0EE2     		b	.L14
 549              	.L37:
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 550              		.loc 1 442 16
 551 01f2 224B     		ldr	r3, .L80
 552 01f4 1B68     		ldr	r3, [r3]
 553 01f6 03F48063 		and	r3, r3, #1024
 442:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 554              		.loc 1 442 49
 555 01fa 002B     		cmp	r3, #0
 556 01fc F0D1     		bne	.L38
 557 01fe 00E0     		b	.L28
 558              	.L79:
 393:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 559              		.loc 1 393 10
 560 0200 00BF     		nop
 561              	.L28:
 447:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 448:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 449:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 450:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 451:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 452:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 19


 453:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 562              		.loc 1 453 26
 563 0202 7B68     		ldr	r3, [r7, #4]
 564 0204 1B68     		ldr	r3, [r3]
 565              		.loc 1 453 44
 566 0206 03F00803 		and	r3, r3, #8
 567              		.loc 1 453 6
 568 020a 002B     		cmp	r3, #0
 569 020c 41D0     		beq	.L39
 454:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 455:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the parameters */
 456:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 457:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 458:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the LSI State */
 459:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 570              		.loc 1 459 25
 571 020e 7B68     		ldr	r3, [r7, #4]
 572 0210 5B69     		ldr	r3, [r3, #20]
 573              		.loc 1 459 7
 574 0212 002B     		cmp	r3, #0
 575 0214 1CD0     		beq	.L40
 460:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 461:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 462:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 576              		.loc 1 462 7
 577 0216 194B     		ldr	r3, .L80
 578 0218 D3F89430 		ldr	r3, [r3, #148]
 579 021c 174A     		ldr	r2, .L80
 580 021e 43F00103 		orr	r3, r3, #1
 581 0222 C2F89430 		str	r3, [r2, #148]
 463:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 464:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 465:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 582              		.loc 1 465 19
 583 0226 FFF7FEFF 		bl	HAL_GetTick
 584 022a 3861     		str	r0, [r7, #16]
 466:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 467:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till LSI is ready */
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while (READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) == 0U)
 585              		.loc 1 468 13
 586 022c 08E0     		b	.L41
 587              	.L42:
 469:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 470:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 588              		.loc 1 470 14
 589 022e FFF7FEFF 		bl	HAL_GetTick
 590 0232 0246     		mov	r2, r0
 591              		.loc 1 470 28 discriminator 1
 592 0234 3B69     		ldr	r3, [r7, #16]
 593 0236 D31A     		subs	r3, r2, r3
 594              		.loc 1 470 12 discriminator 1
 595 0238 022B     		cmp	r3, #2
 596 023a 01D9     		bls	.L41
 471:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 472:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 597              		.loc 1 472 18
 598 023c 0323     		movs	r3, #3
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 20


 599 023e E7E1     		b	.L14
 600              	.L41:
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 601              		.loc 1 468 14
 602 0240 0E4B     		ldr	r3, .L80
 603 0242 D3F89430 		ldr	r3, [r3, #148]
 604 0246 03F00203 		and	r3, r3, #2
 468:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 605              		.loc 1 468 49
 606 024a 002B     		cmp	r3, #0
 607 024c EFD0     		beq	.L42
 608 024e 20E0     		b	.L39
 609              	.L40:
 473:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 474:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 475:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 476:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 477:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 478:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 479:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 610              		.loc 1 479 7
 611 0250 0A4B     		ldr	r3, .L80
 612 0252 D3F89430 		ldr	r3, [r3, #148]
 613 0256 094A     		ldr	r2, .L80
 614 0258 23F00103 		bic	r3, r3, #1
 615 025c C2F89430 		str	r3, [r2, #148]
 480:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 481:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 482:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 616              		.loc 1 482 19
 617 0260 FFF7FEFF 		bl	HAL_GetTick
 618 0264 3861     		str	r0, [r7, #16]
 483:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 484:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till LSI is disabled */
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while(READ_BIT(RCC->CSR, RCC_CSR_LSIRDY) != 0U)
 619              		.loc 1 485 12
 620 0266 0DE0     		b	.L43
 621              	.L44:
 486:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 487:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 622              		.loc 1 487 13
 623 0268 FFF7FEFF 		bl	HAL_GetTick
 624 026c 0246     		mov	r2, r0
 625              		.loc 1 487 27 discriminator 1
 626 026e 3B69     		ldr	r3, [r7, #16]
 627 0270 D31A     		subs	r3, r2, r3
 628              		.loc 1 487 11 discriminator 1
 629 0272 022B     		cmp	r3, #2
 630 0274 06D9     		bls	.L43
 488:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 489:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 631              		.loc 1 489 18
 632 0276 0323     		movs	r3, #3
 633 0278 CAE1     		b	.L14
 634              	.L81:
 635 027a 00BF     		.align	2
 636              	.L80:
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 21


 637 027c 00100240 		.word	1073876992
 638 0280 00000000 		.word	uwTickPrio
 639              	.L43:
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 640              		.loc 1 485 13
 641 0284 8C4B     		ldr	r3, .L82
 642 0286 D3F89430 		ldr	r3, [r3, #148]
 643 028a 03F00203 		and	r3, r3, #2
 485:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 644              		.loc 1 485 48
 645 028e 002B     		cmp	r3, #0
 646 0290 EAD1     		bne	.L44
 647              	.L39:
 490:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 491:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 492:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 493:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 494:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/
 495:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 648              		.loc 1 495 26
 649 0292 7B68     		ldr	r3, [r7, #4]
 650 0294 1B68     		ldr	r3, [r3]
 651              		.loc 1 495 44
 652 0296 03F00403 		and	r3, r3, #4
 653              		.loc 1 495 6
 654 029a 002B     		cmp	r3, #0
 655 029c 00F0A680 		beq	.L45
 656              	.LBB2:
 496:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 497:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 657              		.loc 1 497 22
 658 02a0 0023     		movs	r3, #0
 659 02a2 FB77     		strb	r3, [r7, #31]
 498:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 499:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the parameters */
 500:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 501:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 502:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 503:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain if necessary */
 504:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (__HAL_RCC_PWR_IS_CLK_DISABLED() != 0U)
 660              		.loc 1 504 9
 661 02a4 844B     		ldr	r3, .L82
 662 02a6 9B6D     		ldr	r3, [r3, #88]
 663 02a8 03F08053 		and	r3, r3, #268435456
 664              		.loc 1 504 41
 665 02ac 002B     		cmp	r3, #0
 666 02ae 01D1     		bne	.L46
 667              		.loc 1 504 41 is_stmt 0 discriminator 1
 668 02b0 0123     		movs	r3, #1
 669 02b2 00E0     		b	.L47
 670              	.L46:
 671              		.loc 1 504 41 discriminator 2
 672 02b4 0023     		movs	r3, #0
 673              	.L47:
 674              		.loc 1 504 8 is_stmt 1 discriminator 4
 675 02b6 002B     		cmp	r3, #0
 676 02b8 0DD0     		beq	.L48
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 22


 677              	.LBB3:
 505:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 506:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 678              		.loc 1 506 7
 679 02ba 7F4B     		ldr	r3, .L82
 680 02bc 9B6D     		ldr	r3, [r3, #88]
 681 02be 7E4A     		ldr	r2, .L82
 682 02c0 43F08053 		orr	r3, r3, #268435456
 683 02c4 9365     		str	r3, [r2, #88]
 684 02c6 7C4B     		ldr	r3, .L82
 685 02c8 9B6D     		ldr	r3, [r3, #88]
 686 02ca 03F08053 		and	r3, r3, #268435456
 687 02ce FB60     		str	r3, [r7, #12]
 688 02d0 FB68     		ldr	r3, [r7, #12]
 689              	.LBE3:
 507:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       pwrclkchanged = SET;
 690              		.loc 1 507 21
 691 02d2 0123     		movs	r3, #1
 692 02d4 FB77     		strb	r3, [r7, #31]
 693              	.L48:
 508:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 509:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 510:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 694              		.loc 1 510 9
 695 02d6 794B     		ldr	r3, .L82+4
 696 02d8 1B68     		ldr	r3, [r3]
 697 02da 03F48073 		and	r3, r3, #256
 698              		.loc 1 510 8
 699 02de 002B     		cmp	r3, #0
 700 02e0 18D1     		bne	.L49
 511:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 512:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 513:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       SET_BIT(PWR->CR1, PWR_CR1_DBP);
 701              		.loc 1 513 7
 702 02e2 764B     		ldr	r3, .L82+4
 703 02e4 1B68     		ldr	r3, [r3]
 704 02e6 754A     		ldr	r2, .L82+4
 705 02e8 43F48073 		orr	r3, r3, #256
 706 02ec 1360     		str	r3, [r2]
 514:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 515:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 516:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 707              		.loc 1 516 19
 708 02ee FFF7FEFF 		bl	HAL_GetTick
 709 02f2 3861     		str	r0, [r7, #16]
 517:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while (HAL_IS_BIT_CLR(PWR->CR1, PWR_CR1_DBP))
 710              		.loc 1 518 13
 711 02f4 08E0     		b	.L50
 712              	.L51:
 519:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 520:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 713              		.loc 1 520 14
 714 02f6 FFF7FEFF 		bl	HAL_GetTick
 715 02fa 0246     		mov	r2, r0
 716              		.loc 1 520 28 discriminator 1
 717 02fc 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 23


 718 02fe D31A     		subs	r3, r2, r3
 719              		.loc 1 520 12 discriminator 1
 720 0300 022B     		cmp	r3, #2
 721 0302 01D9     		bls	.L50
 521:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 522:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 722              		.loc 1 522 18
 723 0304 0323     		movs	r3, #3
 724 0306 83E1     		b	.L14
 725              	.L50:
 518:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 726              		.loc 1 518 14
 727 0308 6C4B     		ldr	r3, .L82+4
 728 030a 1B68     		ldr	r3, [r3]
 729 030c 03F48073 		and	r3, r3, #256
 730 0310 002B     		cmp	r3, #0
 731 0312 F0D0     		beq	.L51
 732              	.L49:
 523:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 524:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 525:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 526:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 527:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 528:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 733              		.loc 1 528 5
 734 0314 7B68     		ldr	r3, [r7, #4]
 735 0316 9B68     		ldr	r3, [r3, #8]
 736 0318 012B     		cmp	r3, #1
 737 031a 08D1     		bne	.L52
 738              		.loc 1 528 5 is_stmt 0 discriminator 1
 739 031c 664B     		ldr	r3, .L82
 740 031e D3F89030 		ldr	r3, [r3, #144]
 741 0322 654A     		ldr	r2, .L82
 742 0324 43F00103 		orr	r3, r3, #1
 743 0328 C2F89030 		str	r3, [r2, #144]
 744 032c 24E0     		b	.L53
 745              	.L52:
 746              		.loc 1 528 5 discriminator 2
 747 032e 7B68     		ldr	r3, [r7, #4]
 748 0330 9B68     		ldr	r3, [r3, #8]
 749 0332 052B     		cmp	r3, #5
 750 0334 10D1     		bne	.L54
 751              		.loc 1 528 5 discriminator 3
 752 0336 604B     		ldr	r3, .L82
 753 0338 D3F89030 		ldr	r3, [r3, #144]
 754 033c 5E4A     		ldr	r2, .L82
 755 033e 43F00403 		orr	r3, r3, #4
 756 0342 C2F89030 		str	r3, [r2, #144]
 757 0346 5C4B     		ldr	r3, .L82
 758 0348 D3F89030 		ldr	r3, [r3, #144]
 759 034c 5A4A     		ldr	r2, .L82
 760 034e 43F00103 		orr	r3, r3, #1
 761 0352 C2F89030 		str	r3, [r2, #144]
 762 0356 0FE0     		b	.L53
 763              	.L54:
 764              		.loc 1 528 5 discriminator 4
 765 0358 574B     		ldr	r3, .L82
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 24


 766 035a D3F89030 		ldr	r3, [r3, #144]
 767 035e 564A     		ldr	r2, .L82
 768 0360 23F00103 		bic	r3, r3, #1
 769 0364 C2F89030 		str	r3, [r2, #144]
 770 0368 534B     		ldr	r3, .L82
 771 036a D3F89030 		ldr	r3, [r3, #144]
 772 036e 524A     		ldr	r2, .L82
 773 0370 23F00403 		bic	r3, r3, #4
 774 0374 C2F89030 		str	r3, [r2, #144]
 775              	.L53:
 529:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 530:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the LSE State */
 531:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 776              		.loc 1 531 26 is_stmt 1
 777 0378 7B68     		ldr	r3, [r7, #4]
 778 037a 9B68     		ldr	r3, [r3, #8]
 779              		.loc 1 531 8
 780 037c 002B     		cmp	r3, #0
 781 037e 16D0     		beq	.L55
 532:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 533:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 534:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 782              		.loc 1 534 19
 783 0380 FFF7FEFF 		bl	HAL_GetTick
 784 0384 3861     		str	r0, [r7, #16]
 535:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 536:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till LSE is ready */
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) == 0U)
 785              		.loc 1 537 13
 786 0386 0AE0     		b	.L56
 787              	.L57:
 538:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 539:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 788              		.loc 1 539 13
 789 0388 FFF7FEFF 		bl	HAL_GetTick
 790 038c 0246     		mov	r2, r0
 791              		.loc 1 539 27 discriminator 1
 792 038e 3B69     		ldr	r3, [r7, #16]
 793 0390 D31A     		subs	r3, r2, r3
 794              		.loc 1 539 11 discriminator 1
 795 0392 41F28832 		movw	r2, #5000
 796 0396 9342     		cmp	r3, r2
 797 0398 01D9     		bls	.L56
 540:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 541:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 798              		.loc 1 541 18
 799 039a 0323     		movs	r3, #3
 800 039c 38E1     		b	.L14
 801              	.L56:
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 802              		.loc 1 537 14
 803 039e 464B     		ldr	r3, .L82
 804 03a0 D3F89030 		ldr	r3, [r3, #144]
 805 03a4 03F00203 		and	r3, r3, #2
 537:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 806              		.loc 1 537 51
 807 03a8 002B     		cmp	r3, #0
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 25


 808 03aa EDD0     		beq	.L57
 809 03ac 15E0     		b	.L58
 810              	.L55:
 542:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 543:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 544:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 545:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 546:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 547:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 548:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 811              		.loc 1 548 19
 812 03ae FFF7FEFF 		bl	HAL_GetTick
 813 03b2 3861     		str	r0, [r7, #16]
 549:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 550:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till LSE is disabled */
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while (READ_BIT(RCC->BDCR, RCC_BDCR_LSERDY) != 0U)
 814              		.loc 1 551 13
 815 03b4 0AE0     		b	.L59
 816              	.L60:
 552:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 553:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 817              		.loc 1 553 13
 818 03b6 FFF7FEFF 		bl	HAL_GetTick
 819 03ba 0246     		mov	r2, r0
 820              		.loc 1 553 27 discriminator 1
 821 03bc 3B69     		ldr	r3, [r7, #16]
 822 03be D31A     		subs	r3, r2, r3
 823              		.loc 1 553 11 discriminator 1
 824 03c0 41F28832 		movw	r2, #5000
 825 03c4 9342     		cmp	r3, r2
 826 03c6 01D9     		bls	.L59
 554:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 555:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 827              		.loc 1 555 18
 828 03c8 0323     		movs	r3, #3
 829 03ca 21E1     		b	.L14
 830              	.L59:
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 831              		.loc 1 551 14
 832 03cc 3A4B     		ldr	r3, .L82
 833 03ce D3F89030 		ldr	r3, [r3, #144]
 834 03d2 03F00203 		and	r3, r3, #2
 551:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 835              		.loc 1 551 51
 836 03d6 002B     		cmp	r3, #0
 837 03d8 EDD1     		bne	.L60
 838              	.L58:
 556:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 557:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 558:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 559:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 560:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Restore clock configuration if changed */
 561:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (pwrclkchanged == SET)
 839              		.loc 1 561 8
 840 03da FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 841 03dc 012B     		cmp	r3, #1
 842 03de 05D1     		bne	.L45
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 26


 562:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 563:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 843              		.loc 1 563 7
 844 03e0 354B     		ldr	r3, .L82
 845 03e2 9B6D     		ldr	r3, [r3, #88]
 846 03e4 344A     		ldr	r2, .L82
 847 03e6 23F08053 		bic	r3, r3, #268435456
 848 03ea 9365     		str	r3, [r2, #88]
 849              	.L45:
 850              	.LBE2:
 564:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 565:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 566:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 567:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*------------------------------ HSI48 Configuration -----------------------*/
 568:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 851              		.loc 1 568 25
 852 03ec 7B68     		ldr	r3, [r7, #4]
 853 03ee 1B68     		ldr	r3, [r3]
 854              		.loc 1 568 43
 855 03f0 03F02003 		and	r3, r3, #32
 856              		.loc 1 568 5
 857 03f4 002B     		cmp	r3, #0
 858 03f6 3CD0     		beq	.L61
 569:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 570:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the parameters */
 571:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));
 572:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 573:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check the HSI48 State */
 574:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 859              		.loc 1 574 25
 860 03f8 7B68     		ldr	r3, [r7, #4]
 861 03fa 9B69     		ldr	r3, [r3, #24]
 862              		.loc 1 574 7
 863 03fc 002B     		cmp	r3, #0
 864 03fe 1CD0     		beq	.L62
 575:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 576:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (HSI48). */
 577:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_HSI48_ENABLE();
 865              		.loc 1 577 7
 866 0400 2D4B     		ldr	r3, .L82
 867 0402 D3F89830 		ldr	r3, [r3, #152]
 868 0406 2C4A     		ldr	r2, .L82
 869 0408 43F00103 		orr	r3, r3, #1
 870 040c C2F89830 		str	r3, [r2, #152]
 578:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 579:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 580:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 871              		.loc 1 580 19
 872 0410 FFF7FEFF 		bl	HAL_GetTick
 873 0414 3861     		str	r0, [r7, #16]
 581:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 582:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till HSI48 is ready */
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) == 0U)
 874              		.loc 1 583 12
 875 0416 08E0     		b	.L63
 876              	.L64:
 584:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 27


 585:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 877              		.loc 1 585 13
 878 0418 FFF7FEFF 		bl	HAL_GetTick
 879 041c 0246     		mov	r2, r0
 880              		.loc 1 585 27 discriminator 1
 881 041e 3B69     		ldr	r3, [r7, #16]
 882 0420 D31A     		subs	r3, r2, r3
 883              		.loc 1 585 11 discriminator 1
 884 0422 022B     		cmp	r3, #2
 885 0424 01D9     		bls	.L63
 586:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 587:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 886              		.loc 1 587 18
 887 0426 0323     		movs	r3, #3
 888 0428 F2E0     		b	.L14
 889              	.L63:
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 890              		.loc 1 583 13
 891 042a 234B     		ldr	r3, .L82
 892 042c D3F89830 		ldr	r3, [r3, #152]
 893 0430 03F00203 		and	r3, r3, #2
 583:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 894              		.loc 1 583 54
 895 0434 002B     		cmp	r3, #0
 896 0436 EFD0     		beq	.L64
 897 0438 1BE0     		b	.L61
 898              	.L62:
 588:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 589:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 590:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 591:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 592:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 593:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (HSI48). */
 594:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       __HAL_RCC_HSI48_DISABLE();
 899              		.loc 1 594 7
 900 043a 1F4B     		ldr	r3, .L82
 901 043c D3F89830 		ldr	r3, [r3, #152]
 902 0440 1D4A     		ldr	r2, .L82
 903 0442 23F00103 		bic	r3, r3, #1
 904 0446 C2F89830 		str	r3, [r2, #152]
 595:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 596:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Get Start Tick*/
 597:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 905              		.loc 1 597 19
 906 044a FFF7FEFF 		bl	HAL_GetTick
 907 044e 3861     		str	r0, [r7, #16]
 598:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 599:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Wait till HSI48 is disabled */
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       while(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48RDY) != 0U)
 908              		.loc 1 600 12
 909 0450 08E0     		b	.L65
 910              	.L66:
 601:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 602:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 911              		.loc 1 602 13
 912 0452 FFF7FEFF 		bl	HAL_GetTick
 913 0456 0246     		mov	r2, r0
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 28


 914              		.loc 1 602 27 discriminator 1
 915 0458 3B69     		ldr	r3, [r7, #16]
 916 045a D31A     		subs	r3, r2, r3
 917              		.loc 1 602 11 discriminator 1
 918 045c 022B     		cmp	r3, #2
 919 045e 01D9     		bls	.L65
 603:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 604:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_TIMEOUT;
 920              		.loc 1 604 18
 921 0460 0323     		movs	r3, #3
 922 0462 D5E0     		b	.L14
 923              	.L65:
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 924              		.loc 1 600 13
 925 0464 144B     		ldr	r3, .L82
 926 0466 D3F89830 		ldr	r3, [r3, #152]
 927 046a 03F00203 		and	r3, r3, #2
 600:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 928              		.loc 1 600 54
 929 046e 002B     		cmp	r3, #0
 930 0470 EFD1     		bne	.L66
 931              	.L61:
 605:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 606:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 607:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 608:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 609:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 610:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 611:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
 612:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 613:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 614:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (RCC_OscInitStruct->PLL.PLLState != RCC_PLL_NONE)
 932              		.loc 1 614 29
 933 0472 7B68     		ldr	r3, [r7, #4]
 934 0474 DB69     		ldr	r3, [r3, #28]
 935              		.loc 1 614 6
 936 0476 002B     		cmp	r3, #0
 937 0478 00F0C980 		beq	.L67
 615:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 616:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 617:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 938              		.loc 1 617 9
 939 047c 0E4B     		ldr	r3, .L82
 940 047e 9B68     		ldr	r3, [r3, #8]
 941 0480 03F00C03 		and	r3, r3, #12
 942              		.loc 1 617 8
 943 0484 0C2B     		cmp	r3, #12
 944 0486 00F08380 		beq	.L68
 618:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 619:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if (RCC_OscInitStruct->PLL.PLLState == RCC_PLL_ON)
 945              		.loc 1 619 33
 946 048a 7B68     		ldr	r3, [r7, #4]
 947 048c DB69     		ldr	r3, [r3, #28]
 948              		.loc 1 619 10
 949 048e 022B     		cmp	r3, #2
 950 0490 5ED1     		bne	.L69
 620:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 29


 621:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Check the parameters */
 622:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 623:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLM_VALUE(RCC_OscInitStruct->PLL.PLLM));
 624:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
 625:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
 626:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
 627:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));
 628:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 629:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Disable the main PLL. */
 630:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 951              		.loc 1 630 9
 952 0492 094B     		ldr	r3, .L82
 953 0494 1B68     		ldr	r3, [r3]
 954 0496 084A     		ldr	r2, .L82
 955 0498 23F08073 		bic	r3, r3, #16777216
 956 049c 1360     		str	r3, [r2]
 631:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 632:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 633:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 957              		.loc 1 633 21
 958 049e FFF7FEFF 		bl	HAL_GetTick
 959 04a2 3861     		str	r0, [r7, #16]
 634:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 635:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 960              		.loc 1 636 15
 961 04a4 0CE0     		b	.L70
 962              	.L71:
 637:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 638:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 963              		.loc 1 638 16
 964 04a6 FFF7FEFF 		bl	HAL_GetTick
 965 04aa 0246     		mov	r2, r0
 966              		.loc 1 638 30 discriminator 1
 967 04ac 3B69     		ldr	r3, [r7, #16]
 968 04ae D31A     		subs	r3, r2, r3
 969              		.loc 1 638 14 discriminator 1
 970 04b0 022B     		cmp	r3, #2
 971 04b2 05D9     		bls	.L70
 639:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 640:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 972              		.loc 1 640 20
 973 04b4 0323     		movs	r3, #3
 974 04b6 ABE0     		b	.L14
 975              	.L83:
 976              		.align	2
 977              	.L82:
 978 04b8 00100240 		.word	1073876992
 979 04bc 00700040 		.word	1073770496
 980              	.L70:
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 981              		.loc 1 636 16
 982 04c0 554B     		ldr	r3, .L84
 983 04c2 1B68     		ldr	r3, [r3]
 984 04c4 03F00073 		and	r3, r3, #33554432
 636:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 985              		.loc 1 636 49
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 30


 986 04c8 002B     		cmp	r3, #0
 987 04ca ECD1     		bne	.L71
 641:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 642:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 643:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 644:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Configure the main PLL clock source, multiplication and division factors. */
 645:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 988              		.loc 1 645 9
 989 04cc 524B     		ldr	r3, .L84
 990 04ce DA68     		ldr	r2, [r3, #12]
 991 04d0 524B     		ldr	r3, .L84+4
 992 04d2 1340     		ands	r3, r3, r2
 993 04d4 7A68     		ldr	r2, [r7, #4]
 994 04d6 116A     		ldr	r1, [r2, #32]
 995 04d8 7A68     		ldr	r2, [r7, #4]
 996 04da 526A     		ldr	r2, [r2, #36]
 997 04dc 013A     		subs	r2, r2, #1
 998 04de 1201     		lsls	r2, r2, #4
 999 04e0 1143     		orrs	r1, r1, r2
 1000 04e2 7A68     		ldr	r2, [r7, #4]
 1001 04e4 926A     		ldr	r2, [r2, #40]
 1002 04e6 1202     		lsls	r2, r2, #8
 1003 04e8 1143     		orrs	r1, r1, r2
 1004 04ea 7A68     		ldr	r2, [r7, #4]
 1005 04ec 126B     		ldr	r2, [r2, #48]
 1006 04ee 5208     		lsrs	r2, r2, #1
 1007 04f0 013A     		subs	r2, r2, #1
 1008 04f2 5205     		lsls	r2, r2, #21
 1009 04f4 1143     		orrs	r1, r1, r2
 1010 04f6 7A68     		ldr	r2, [r7, #4]
 1011 04f8 526B     		ldr	r2, [r2, #52]
 1012 04fa 5208     		lsrs	r2, r2, #1
 1013 04fc 013A     		subs	r2, r2, #1
 1014 04fe 5206     		lsls	r2, r2, #25
 1015 0500 1143     		orrs	r1, r1, r2
 1016 0502 7A68     		ldr	r2, [r7, #4]
 1017 0504 D26A     		ldr	r2, [r2, #44]
 1018 0506 D206     		lsls	r2, r2, #27
 1019 0508 0A43     		orrs	r2, r2, r1
 1020 050a 4349     		ldr	r1, .L84
 1021 050c 1343     		orrs	r3, r3, r2
 1022 050e CB60     		str	r3, [r1, #12]
 646:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLM,
 647:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLN,
 648:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLP,
 649:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLQ,
 650:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLR);
 651:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 652:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Enable the main PLL. */
 653:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1023              		.loc 1 653 9
 1024 0510 414B     		ldr	r3, .L84
 1025 0512 1B68     		ldr	r3, [r3]
 1026 0514 404A     		ldr	r2, .L84
 1027 0516 43F08073 		orr	r3, r3, #16777216
 1028 051a 1360     		str	r3, [r2]
 654:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 31


 655:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Enable PLL System Clock output. */
 656:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          __HAL_RCC_PLLCLKOUT_ENABLE(RCC_PLL_SYSCLK);
 1029              		.loc 1 656 10
 1030 051c 3E4B     		ldr	r3, .L84
 1031 051e DB68     		ldr	r3, [r3, #12]
 1032 0520 3D4A     		ldr	r2, .L84
 1033 0522 43F08073 		orr	r3, r3, #16777216
 1034 0526 D360     		str	r3, [r2, #12]
 657:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 658:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 659:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1035              		.loc 1 659 21
 1036 0528 FFF7FEFF 		bl	HAL_GetTick
 1037 052c 3861     		str	r0, [r7, #16]
 660:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 661:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till PLL is ready */
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1038              		.loc 1 662 15
 1039 052e 08E0     		b	.L72
 1040              	.L73:
 663:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 664:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1041              		.loc 1 664 16
 1042 0530 FFF7FEFF 		bl	HAL_GetTick
 1043 0534 0246     		mov	r2, r0
 1044              		.loc 1 664 30 discriminator 1
 1045 0536 3B69     		ldr	r3, [r7, #16]
 1046 0538 D31A     		subs	r3, r2, r3
 1047              		.loc 1 664 14 discriminator 1
 1048 053a 022B     		cmp	r3, #2
 1049 053c 01D9     		bls	.L72
 665:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 666:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1050              		.loc 1 666 20
 1051 053e 0323     		movs	r3, #3
 1052 0540 66E0     		b	.L14
 1053              	.L72:
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 1054              		.loc 1 662 16
 1055 0542 354B     		ldr	r3, .L84
 1056 0544 1B68     		ldr	r3, [r3]
 1057 0546 03F00073 		and	r3, r3, #33554432
 662:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 1058              		.loc 1 662 49
 1059 054a 002B     		cmp	r3, #0
 1060 054c F0D0     		beq	.L73
 1061 054e 5EE0     		b	.L67
 1062              	.L69:
 667:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 668:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 669:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 670:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 671:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 672:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Disable the main PLL. */
 673:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1063              		.loc 1 673 9
 1064 0550 314B     		ldr	r3, .L84
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 32


 1065 0552 1B68     		ldr	r3, [r3]
 1066 0554 304A     		ldr	r2, .L84
 1067 0556 23F08073 		bic	r3, r3, #16777216
 1068 055a 1360     		str	r3, [r2]
 674:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 675:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Get Start Tick*/
 676:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1069              		.loc 1 676 21
 1070 055c FFF7FEFF 		bl	HAL_GetTick
 1071 0560 3861     		str	r0, [r7, #16]
 677:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 678:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         while (READ_BIT(RCC->CR, RCC_CR_PLLRDY) != 0U)
 1072              		.loc 1 679 15
 1073 0562 08E0     		b	.L74
 1074              	.L75:
 680:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 681:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 1075              		.loc 1 681 16
 1076 0564 FFF7FEFF 		bl	HAL_GetTick
 1077 0568 0246     		mov	r2, r0
 1078              		.loc 1 681 30 discriminator 1
 1079 056a 3B69     		ldr	r3, [r7, #16]
 1080 056c D31A     		subs	r3, r2, r3
 1081              		.loc 1 681 14 discriminator 1
 1082 056e 022B     		cmp	r3, #2
 1083 0570 01D9     		bls	.L74
 682:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           {
 683:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1084              		.loc 1 683 20
 1085 0572 0323     		movs	r3, #3
 1086 0574 4CE0     		b	.L14
 1087              	.L74:
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 1088              		.loc 1 679 16
 1089 0576 284B     		ldr	r3, .L84
 1090 0578 1B68     		ldr	r3, [r3]
 1091 057a 03F00073 		and	r3, r3, #33554432
 679:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 1092              		.loc 1 679 49
 1093 057e 002B     		cmp	r3, #0
 1094 0580 F0D1     		bne	.L75
 684:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           }
 685:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 686:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 687:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Unselect PLL clock source and disable outputs to save power */
 688:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         RCC->PLLCFGR &= ~(RCC_PLLCFGR_PLLSRC | RCC_PLL_SYSCLK | RCC_PLL_48M1CLK | RCC_PLL_ADCCLK);
 1095              		.loc 1 688 12
 1096 0582 254B     		ldr	r3, .L84
 1097 0584 DA68     		ldr	r2, [r3, #12]
 1098 0586 2449     		ldr	r1, .L84
 1099              		.loc 1 688 22
 1100 0588 254B     		ldr	r3, .L84+8
 1101 058a 1340     		ands	r3, r3, r2
 1102 058c CB60     		str	r3, [r1, #12]
 1103 058e 3EE0     		b	.L67
 1104              	.L68:
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 33


 689:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 690:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 691:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 692:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 693:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Check if there is a request to disable the PLL used as System clock source */
 694:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 1105              		.loc 1 694 33
 1106 0590 7B68     		ldr	r3, [r7, #4]
 1107 0592 DB69     		ldr	r3, [r3, #28]
 1108              		.loc 1 694 9
 1109 0594 012B     		cmp	r3, #1
 1110 0596 01D1     		bne	.L76
 695:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 696:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_ERROR;
 1111              		.loc 1 696 16
 1112 0598 0123     		movs	r3, #1
 1113 059a 39E0     		b	.L14
 1114              	.L76:
 697:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 698:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 699:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 700:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Do not return HAL_ERROR if request repeats the current configuration */
 701:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       temp_pllckcfg = RCC->PLLCFGR;
 1115              		.loc 1 701 26
 1116 059c 1E4B     		ldr	r3, .L84
 1117              		.loc 1 701 21
 1118 059e DB68     		ldr	r3, [r3, #12]
 1119 05a0 7B61     		str	r3, [r7, #20]
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1120              		.loc 1 702 11
 1121 05a2 7B69     		ldr	r3, [r7, #20]
 1122 05a4 03F00302 		and	r2, r3, #3
 1123              		.loc 1 702 80
 1124 05a8 7B68     		ldr	r3, [r7, #4]
 1125 05aa 1B6A     		ldr	r3, [r3, #32]
 1126              		.loc 1 702 9
 1127 05ac 9A42     		cmp	r2, r3
 1128 05ae 2CD1     		bne	.L77
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != (((RCC_OscInitStruct->PLL.PLLM) - 1U) << RCC
 1129              		.loc 1 703 11
 1130 05b0 7B69     		ldr	r3, [r7, #20]
 1131 05b2 03F0F002 		and	r2, r3, #240
 1132              		.loc 1 703 81
 1133 05b6 7B68     		ldr	r3, [r7, #4]
 1134 05b8 5B6A     		ldr	r3, [r3, #36]
 1135              		.loc 1 703 88
 1136 05ba 013B     		subs	r3, r3, #1
 1137              		.loc 1 703 94
 1138 05bc 1B01     		lsls	r3, r3, #4
 702:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if((READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 1139              		.loc 1 702 92 discriminator 1
 1140 05be 9A42     		cmp	r2, r3
 1141 05c0 23D1     		bne	.L77
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != ((RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFG
 1142              		.loc 1 704 11
 1143 05c2 7B69     		ldr	r3, [r7, #20]
 1144 05c4 03F4FE42 		and	r2, r3, #32512
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 34


 1145              		.loc 1 704 80
 1146 05c8 7B68     		ldr	r3, [r7, #4]
 1147 05ca 9B6A     		ldr	r3, [r3, #40]
 1148              		.loc 1 704 87
 1149 05cc 1B02     		lsls	r3, r3, #8
 703:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLM) != (((RCC_OscInitStruct->PLL.PLLM) - 1U) << RCC
 1150              		.loc 1 703 120
 1151 05ce 9A42     		cmp	r2, r3
 1152 05d0 1BD1     		bne	.L77
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLPDIV) != ((RCC_OscInitStruct->PLL.PLLP) << RCC_PLL
 1153              		.loc 1 705 11
 1154 05d2 7B69     		ldr	r3, [r7, #20]
 1155 05d4 03F07842 		and	r2, r3, #-134217728
 1156              		.loc 1 705 83
 1157 05d8 7B68     		ldr	r3, [r7, #4]
 1158 05da DB6A     		ldr	r3, [r3, #44]
 1159              		.loc 1 705 90
 1160 05dc DB06     		lsls	r3, r3, #27
 704:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLN) != ((RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFG
 1161              		.loc 1 704 113
 1162 05de 9A42     		cmp	r2, r3
 1163 05e0 13D1     		bne	.L77
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U
 1164              		.loc 1 706 11
 1165 05e2 7B69     		ldr	r3, [r7, #20]
 1166 05e4 03F4C002 		and	r2, r3, #6291456
 1167              		.loc 1 706 82
 1168 05e8 7B68     		ldr	r3, [r7, #4]
 1169 05ea 1B6B     		ldr	r3, [r3, #48]
 1170              		.loc 1 706 89
 1171 05ec 5B08     		lsrs	r3, r3, #1
 1172              		.loc 1 706 96
 1173 05ee 013B     		subs	r3, r3, #1
 1174              		.loc 1 706 102
 1175 05f0 5B05     		lsls	r3, r3, #21
 705:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLPDIV) != ((RCC_OscInitStruct->PLL.PLLP) << RCC_PLL
 1176              		.loc 1 705 119
 1177 05f2 9A42     		cmp	r2, r3
 1178 05f4 09D1     		bne	.L77
 707:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLR) != ((((RCC_OscInitStruct->PLL.PLLR) >> 1U) - 1U
 1179              		.loc 1 707 11
 1180 05f6 7B69     		ldr	r3, [r7, #20]
 1181 05f8 03F0C062 		and	r2, r3, #100663296
 1182              		.loc 1 707 82
 1183 05fc 7B68     		ldr	r3, [r7, #4]
 1184 05fe 5B6B     		ldr	r3, [r3, #52]
 1185              		.loc 1 707 89
 1186 0600 5B08     		lsrs	r3, r3, #1
 1187              		.loc 1 707 96
 1188 0602 013B     		subs	r3, r3, #1
 1189              		.loc 1 707 102
 1190 0604 5B06     		lsls	r3, r3, #25
 706:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****          (READ_BIT(temp_pllckcfg, RCC_PLLCFGR_PLLQ) != ((((RCC_OscInitStruct->PLL.PLLQ) >> 1U) - 1U
 1191              		.loc 1 706 128
 1192 0606 9A42     		cmp	r2, r3
 1193 0608 01D0     		beq	.L67
 1194              	.L77:
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 35


 708:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 709:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_ERROR;
 1195              		.loc 1 709 16
 1196 060a 0123     		movs	r3, #1
 1197 060c 00E0     		b	.L14
 1198              	.L67:
 710:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 711:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 712:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 713:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 714:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 715:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return HAL_OK;
 1199              		.loc 1 715 10
 1200 060e 0023     		movs	r3, #0
 1201              	.L14:
 716:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1202              		.loc 1 716 1
 1203 0610 1846     		mov	r0, r3
 1204 0612 2037     		adds	r7, r7, #32
 1205              	.LCFI8:
 1206              		.cfi_def_cfa_offset 8
 1207 0614 BD46     		mov	sp, r7
 1208              	.LCFI9:
 1209              		.cfi_def_cfa_register 13
 1210              		@ sp needed
 1211 0616 80BD     		pop	{r7, pc}
 1212              	.L85:
 1213              		.align	2
 1214              	.L84:
 1215 0618 00100240 		.word	1073876992
 1216 061c 0C809F01 		.word	27230220
 1217 0620 FCFFEEFE 		.word	-17891332
 1218              		.cfi_endproc
 1219              	.LFE133:
 1221              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1222              		.align	1
 1223              		.global	HAL_RCC_ClockConfig
 1224              		.syntax unified
 1225              		.thumb
 1226              		.thumb_func
 1228              	HAL_RCC_ClockConfig:
 1229              	.LFB134:
 717:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 718:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 719:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Initialize the CPU, AHB and APB buses clocks according to the specified
 720:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 721:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_OscInitTypeDef structure that
 722:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 723:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  FLatency  FLASH Latency
 724:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 725:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_0   FLASH 0 Latency cycle
 726:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_1   FLASH 1 Latency cycle
 727:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_2   FLASH 2 Latency cycles
 728:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_3   FLASH 3 Latency cycles
 729:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_4   FLASH 4 Latency cycles
 730:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_5   FLASH 5 Latency cycles
 731:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_6   FLASH 6 Latency cycles
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 36


 732:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_7   FLASH 7 Latency cycles
 733:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_8   FLASH 8 Latency cycles
 734:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_9   FLASH 9 Latency cycles
 735:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_10  FLASH 10 Latency cycles
 736:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_11  FLASH 11 Latency cycles
 737:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_12  FLASH 12 Latency cycles
 738:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_13  FLASH 13 Latency cycles
 739:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_14  FLASH 14 Latency cycles
 740:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg FLASH_LATENCY_15  FLASH 15 Latency cycles
 741:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 742:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
 743:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         and updated by HAL_RCC_GetHCLKFreq() function called within this function
 744:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 745:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The HSI is used by default as system clock source after
 746:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         startup from Reset, wake-up from STANDBY mode. After restart from Reset,
 747:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         the HSI frequency is set to its default value 16 MHz.
 748:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 749:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The HSI can be selected as system clock source after
 750:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         from STOP modes or in case of failure of the HSE used directly or indirectly
 751:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         as system clock (if the Clock Security System CSS is enabled).
 752:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 753:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 754:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         clock source is ready (clock stable after startup delay or PLL locked).
 755:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 756:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         occur when the clock source is ready.
 757:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 758:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   You can use HAL_RCC_GetClockConfig() function to know which clock is
 759:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         currently used as system clock source.
 760:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
 761:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Depending on the device voltage range, the software has to set correctly
 762:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
 763:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         (for more details refer to section above "Initialization/de-initialization functions")
 764:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
 765:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 766:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 767:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1230              		.loc 1 767 1
 1231              		.cfi_startproc
 1232              		@ args = 0, pretend = 0, frame = 24
 1233              		@ frame_needed = 1, uses_anonymous_args = 0
 1234 0000 80B5     		push	{r7, lr}
 1235              	.LCFI10:
 1236              		.cfi_def_cfa_offset 8
 1237              		.cfi_offset 7, -8
 1238              		.cfi_offset 14, -4
 1239 0002 86B0     		sub	sp, sp, #24
 1240              	.LCFI11:
 1241              		.cfi_def_cfa_offset 32
 1242 0004 00AF     		add	r7, sp, #0
 1243              	.LCFI12:
 1244              		.cfi_def_cfa_register 7
 1245 0006 7860     		str	r0, [r7, #4]
 1246 0008 3960     		str	r1, [r7]
 768:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t tickstart;
 769:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t pllfreq;
 770:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t hpre = RCC_SYSCLK_DIV1;
 1247              		.loc 1 770 12
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 37


 1248 000a 0023     		movs	r3, #0
 1249 000c 7B61     		str	r3, [r7, #20]
 771:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 772:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check Null pointer */
 773:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (RCC_ClkInitStruct == NULL)
 1250              		.loc 1 773 6
 1251 000e 7B68     		ldr	r3, [r7, #4]
 1252 0010 002B     		cmp	r3, #0
 1253 0012 01D1     		bne	.L87
 774:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 775:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     return HAL_ERROR;
 1254              		.loc 1 775 12
 1255 0014 0123     		movs	r3, #1
 1256 0016 1EE1     		b	.L88
 1257              	.L87:
 776:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 777:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 778:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
 779:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 780:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 781:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 782:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
 783:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     must be correctly programmed according to the frequency of the CPU clock
 784:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     (HCLK) and the supply voltage of the device. */
 785:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 786:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 787:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (FLatency > __HAL_FLASH_GET_LATENCY())
 1258              		.loc 1 787 18
 1259 0018 914B     		ldr	r3, .L108
 1260 001a 1B68     		ldr	r3, [r3]
 1261 001c 03F00F03 		and	r3, r3, #15
 1262              		.loc 1 787 6
 1263 0020 3A68     		ldr	r2, [r7]
 1264 0022 9A42     		cmp	r2, r3
 1265 0024 10D9     		bls	.L89
 788:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 789:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 790:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1266              		.loc 1 790 5
 1267 0026 8E4B     		ldr	r3, .L108
 1268 0028 1B68     		ldr	r3, [r3]
 1269 002a 23F00F02 		bic	r2, r3, #15
 1270 002e 8C49     		ldr	r1, .L108
 1271 0030 3B68     		ldr	r3, [r7]
 1272 0032 1343     		orrs	r3, r3, r2
 1273 0034 0B60     		str	r3, [r1]
 791:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 792:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 793:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 794:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (__HAL_FLASH_GET_LATENCY() != FLatency)
 1274              		.loc 1 794 9
 1275 0036 8A4B     		ldr	r3, .L108
 1276 0038 1B68     		ldr	r3, [r3]
 1277 003a 03F00F03 		and	r3, r3, #15
 1278              		.loc 1 794 8
 1279 003e 3A68     		ldr	r2, [r7]
 1280 0040 9A42     		cmp	r2, r3
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 38


 1281 0042 01D0     		beq	.L89
 795:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 796:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       return HAL_ERROR;
 1282              		.loc 1 796 14
 1283 0044 0123     		movs	r3, #1
 1284 0046 06E1     		b	.L88
 1285              	.L89:
 797:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 798:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 799:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 800:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/
 801:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1286              		.loc 1 801 25
 1287 0048 7B68     		ldr	r3, [r7, #4]
 1288 004a 1B68     		ldr	r3, [r3]
 1289              		.loc 1 801 38
 1290 004c 03F00103 		and	r3, r3, #1
 1291              		.loc 1 801 5
 1292 0050 002B     		cmp	r3, #0
 1293 0052 73D0     		beq	.L90
 802:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 803:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 804:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 805:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 806:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1294              		.loc 1 806 26
 1295 0054 7B68     		ldr	r3, [r7, #4]
 1296 0056 5B68     		ldr	r3, [r3, #4]
 1297              		.loc 1 806 8
 1298 0058 032B     		cmp	r3, #3
 1299 005a 29D1     		bne	.L91
 807:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 808:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Check the PLL ready flag */
 809:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if (READ_BIT(RCC->CR, RCC_CR_PLLRDY) == 0U)
 1300              		.loc 1 809 11
 1301 005c 814B     		ldr	r3, .L108+4
 1302 005e 1B68     		ldr	r3, [r3]
 1303 0060 03F00073 		and	r3, r3, #33554432
 1304              		.loc 1 809 10
 1305 0064 002B     		cmp	r3, #0
 1306 0066 01D1     		bne	.L92
 810:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 811:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_ERROR;
 1307              		.loc 1 811 16
 1308 0068 0123     		movs	r3, #1
 1309 006a F4E0     		b	.L88
 1310              	.L92:
 812:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 813:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Undershoot management when selection PLL as SYSCLK source and frequency above 80Mhz */
 814:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Compute target PLL output frequency */
 815:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       pllfreq = RCC_GetSysClockFreqFromPLLSource();
 1311              		.loc 1 815 17
 1312 006c FFF7FEFF 		bl	RCC_GetSysClockFreqFromPLLSource
 1313 0070 3861     		str	r0, [r7, #16]
 816:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 817:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Intermediate step with HCLK prescaler 2 necessary before to go over 80Mhz */
 818:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if(pllfreq > 80000000U)
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 39


 1314              		.loc 1 818 9
 1315 0072 3B69     		ldr	r3, [r7, #16]
 1316 0074 7C4A     		ldr	r2, .L108+8
 1317 0076 9342     		cmp	r3, r2
 1318 0078 3FD9     		bls	.L93
 819:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if (((READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) == RCC_SYSCLK_DIV1)) ||
 1319              		.loc 1 820 15
 1320 007a 7A4B     		ldr	r3, .L108+4
 1321 007c 9B68     		ldr	r3, [r3, #8]
 1322 007e 03F0F003 		and	r3, r3, #240
 1323              		.loc 1 820 12
 1324 0082 002B     		cmp	r3, #0
 1325 0084 09D0     		beq	.L94
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             (((((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK) &&
 1326              		.loc 1 821 35
 1327 0086 7B68     		ldr	r3, [r7, #4]
 1328 0088 1B68     		ldr	r3, [r3]
 1329              		.loc 1 821 48
 1330 008a 03F00203 		and	r3, r3, #2
 820:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             (((((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK) &&
 1331              		.loc 1 820 71 discriminator 1
 1332 008e 002B     		cmp	r3, #0
 1333 0090 33D0     		beq	.L93
 822:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****               (RCC_ClkInitStruct->AHBCLKDivider == RCC_SYSCLK_DIV1))))
 1334              		.loc 1 822 33
 1335 0092 7B68     		ldr	r3, [r7, #4]
 1336 0094 9B68     		ldr	r3, [r3, #8]
 821:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             (((((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK) &&
 1337              		.loc 1 821 93
 1338 0096 002B     		cmp	r3, #0
 1339 0098 2FD1     		bne	.L93
 1340              	.L94:
 823:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 824:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
 1341              		.loc 1 824 11
 1342 009a 724B     		ldr	r3, .L108+4
 1343 009c 9B68     		ldr	r3, [r3, #8]
 1344 009e 23F0F003 		bic	r3, r3, #240
 1345 00a2 704A     		ldr	r2, .L108+4
 1346 00a4 43F08003 		orr	r3, r3, #128
 1347 00a8 9360     		str	r3, [r2, #8]
 825:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           hpre = RCC_SYSCLK_DIV2;
 1348              		.loc 1 825 16
 1349 00aa 8023     		movs	r3, #128
 1350 00ac 7B61     		str	r3, [r7, #20]
 1351 00ae 24E0     		b	.L93
 1352              	.L91:
 826:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 827:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 828:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 829:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     else
 830:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 831:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* HSE is selected as System Clock Source */
 832:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1353              		.loc 1 832 28
 1354 00b0 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 40


 1355 00b2 5B68     		ldr	r3, [r3, #4]
 1356              		.loc 1 832 10
 1357 00b4 022B     		cmp	r3, #2
 1358 00b6 07D1     		bne	.L95
 833:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 834:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Check the HSE ready flag */
 835:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSERDY) == 0U)
 1359              		.loc 1 835 12
 1360 00b8 6A4B     		ldr	r3, .L108+4
 1361 00ba 1B68     		ldr	r3, [r3]
 1362 00bc 03F40033 		and	r3, r3, #131072
 1363              		.loc 1 835 11
 1364 00c0 002B     		cmp	r3, #0
 1365 00c2 09D1     		bne	.L96
 836:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 837:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_ERROR;
 1366              		.loc 1 837 18
 1367 00c4 0123     		movs	r3, #1
 1368 00c6 C6E0     		b	.L88
 1369              	.L95:
 838:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 839:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 840:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* HSI is selected as System Clock Source */
 841:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       else
 842:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 843:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         /* Check the HSI ready flag */
 844:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         if(READ_BIT(RCC->CR, RCC_CR_HSIRDY) == 0U)
 1370              		.loc 1 844 12
 1371 00c8 664B     		ldr	r3, .L108+4
 1372 00ca 1B68     		ldr	r3, [r3]
 1373 00cc 03F48063 		and	r3, r3, #1024
 1374              		.loc 1 844 11
 1375 00d0 002B     		cmp	r3, #0
 1376 00d2 01D1     		bne	.L96
 845:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         {
 846:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****           return HAL_ERROR;
 1377              		.loc 1 846 18
 1378 00d4 0123     		movs	r3, #1
 1379 00d6 BEE0     		b	.L88
 1380              	.L96:
 847:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         }
 848:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 849:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Overshoot management when going down from PLL as SYSCLK source and frequency above 80Mhz *
 850:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       pllfreq = HAL_RCC_GetSysClockFreq();
 1381              		.loc 1 850 17
 1382 00d8 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1383 00dc 3861     		str	r0, [r7, #16]
 851:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 852:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       /* Intermediate step with HCLK prescaler 2 necessary before to go under 80Mhz */
 853:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if(pllfreq > 80000000U)
 1384              		.loc 1 853 9
 1385 00de 3B69     		ldr	r3, [r7, #16]
 1386 00e0 614A     		ldr	r2, .L108+8
 1387 00e2 9342     		cmp	r3, r2
 1388 00e4 09D9     		bls	.L93
 854:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 855:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV2);
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 41


 1389              		.loc 1 855 9
 1390 00e6 5F4B     		ldr	r3, .L108+4
 1391 00e8 9B68     		ldr	r3, [r3, #8]
 1392 00ea 23F0F003 		bic	r3, r3, #240
 1393 00ee 5D4A     		ldr	r2, .L108+4
 1394 00f0 43F08003 		orr	r3, r3, #128
 1395 00f4 9360     		str	r3, [r2, #8]
 856:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         hpre = RCC_SYSCLK_DIV2;
 1396              		.loc 1 856 14
 1397 00f6 8023     		movs	r3, #128
 1398 00f8 7B61     		str	r3, [r7, #20]
 1399              	.L93:
 857:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 858:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 859:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 860:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 861:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_SW, RCC_ClkInitStruct->SYSCLKSource);
 1400              		.loc 1 861 5
 1401 00fa 5A4B     		ldr	r3, .L108+4
 1402 00fc 9B68     		ldr	r3, [r3, #8]
 1403 00fe 23F00302 		bic	r2, r3, #3
 1404 0102 7B68     		ldr	r3, [r7, #4]
 1405 0104 5B68     		ldr	r3, [r3, #4]
 1406 0106 5749     		ldr	r1, .L108+4
 1407 0108 1343     		orrs	r3, r3, r2
 1408 010a 8B60     		str	r3, [r1, #8]
 862:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 863:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Get Start Tick*/
 864:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1409              		.loc 1 864 17
 1410 010c FFF7FEFF 		bl	HAL_GetTick
 1411 0110 F860     		str	r0, [r7, #12]
 865:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 1412              		.loc 1 866 11
 1413 0112 0AE0     		b	.L97
 1414              	.L98:
 867:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 868:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1415              		.loc 1 868 12
 1416 0114 FFF7FEFF 		bl	HAL_GetTick
 1417 0118 0246     		mov	r2, r0
 1418              		.loc 1 868 26 discriminator 1
 1419 011a FB68     		ldr	r3, [r7, #12]
 1420 011c D31A     		subs	r3, r2, r3
 1421              		.loc 1 868 10 discriminator 1
 1422 011e 41F28832 		movw	r2, #5000
 1423 0122 9342     		cmp	r3, r2
 1424 0124 01D9     		bls	.L97
 869:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 870:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1425              		.loc 1 870 16
 1426 0126 0323     		movs	r3, #3
 1427 0128 95E0     		b	.L88
 1428              	.L97:
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1429              		.loc 1 866 12
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 42


 1430 012a 4E4B     		ldr	r3, .L108+4
 1431 012c 9B68     		ldr	r3, [r3, #8]
 1432 012e 03F00C02 		and	r2, r3, #12
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1433              		.loc 1 866 63
 1434 0132 7B68     		ldr	r3, [r7, #4]
 1435 0134 5B68     		ldr	r3, [r3, #4]
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1436              		.loc 1 866 78
 1437 0136 9B00     		lsls	r3, r3, #2
 866:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1438              		.loc 1 866 42
 1439 0138 9A42     		cmp	r2, r3
 1440 013a EBD1     		bne	.L98
 1441              	.L90:
 871:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 872:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 873:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 874:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 875:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 876:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1442              		.loc 1 876 26
 1443 013c 7B68     		ldr	r3, [r7, #4]
 1444 013e 1B68     		ldr	r3, [r3]
 1445              		.loc 1 876 39
 1446 0140 03F00203 		and	r3, r3, #2
 1447              		.loc 1 876 6
 1448 0144 002B     		cmp	r3, #0
 1449 0146 23D0     		beq	.L99
 877:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 878:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Set the highest APB divider in order to ensure that we do not go through
 879:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****        a non-spec phase whatever we decrease or increase HCLK. */
 880:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1450              		.loc 1 880 28
 1451 0148 7B68     		ldr	r3, [r7, #4]
 1452 014a 1B68     		ldr	r3, [r3]
 1453              		.loc 1 880 41
 1454 014c 03F00403 		and	r3, r3, #4
 1455              		.loc 1 880 8
 1456 0150 002B     		cmp	r3, #0
 1457 0152 05D0     		beq	.L100
 881:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 882:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 1458              		.loc 1 882 7
 1459 0154 434B     		ldr	r3, .L108+4
 1460 0156 9B68     		ldr	r3, [r3, #8]
 1461 0158 424A     		ldr	r2, .L108+4
 1462 015a 43F4E063 		orr	r3, r3, #1792
 1463 015e 9360     		str	r3, [r2, #8]
 1464              	.L100:
 883:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 884:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1465              		.loc 1 884 28
 1466 0160 7B68     		ldr	r3, [r7, #4]
 1467 0162 1B68     		ldr	r3, [r3]
 1468              		.loc 1 884 41
 1469 0164 03F00803 		and	r3, r3, #8
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 43


 1470              		.loc 1 884 8
 1471 0168 002B     		cmp	r3, #0
 1472 016a 07D0     		beq	.L101
 885:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 886:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, RCC_HCLK_DIV16);
 1473              		.loc 1 886 7
 1474 016c 3D4B     		ldr	r3, .L108+4
 1475 016e 9B68     		ldr	r3, [r3, #8]
 1476 0170 23F47C53 		bic	r3, r3, #16128
 1477 0174 3B4A     		ldr	r2, .L108+4
 1478 0176 43F4E063 		orr	r3, r3, #1792
 1479 017a 9360     		str	r3, [r2, #8]
 1480              	.L101:
 887:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 888:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 889:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Set the new HCLK clock divider */
 890:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 891:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1481              		.loc 1 891 5
 1482 017c 394B     		ldr	r3, .L108+4
 1483 017e 9B68     		ldr	r3, [r3, #8]
 1484 0180 23F0F002 		bic	r2, r3, #240
 1485 0184 7B68     		ldr	r3, [r7, #4]
 1486 0186 9B68     		ldr	r3, [r3, #8]
 1487 0188 3649     		ldr	r1, .L108+4
 1488 018a 1343     		orrs	r3, r3, r2
 1489 018c 8B60     		str	r3, [r1, #8]
 1490 018e 08E0     		b	.L102
 1491              	.L99:
 892:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 893:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
 894:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 895:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Is intermediate HCLK prescaler 2 applied internally, complete with HCLK prescaler 1 */
 896:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     if(hpre == RCC_SYSCLK_DIV2)
 1492              		.loc 1 896 7
 1493 0190 7B69     		ldr	r3, [r7, #20]
 1494 0192 802B     		cmp	r3, #128
 1495 0194 05D1     		bne	.L102
 897:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 898:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_SYSCLK_DIV1);
 1496              		.loc 1 898 7
 1497 0196 334B     		ldr	r3, .L108+4
 1498 0198 9B68     		ldr	r3, [r3, #8]
 1499 019a 324A     		ldr	r2, .L108+4
 1500 019c 23F0F003 		bic	r3, r3, #240
 1501 01a0 9360     		str	r3, [r2, #8]
 1502              	.L102:
 899:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
 900:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 901:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 902:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 903:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (FLatency < __HAL_FLASH_GET_LATENCY())
 1503              		.loc 1 903 18
 1504 01a2 2F4B     		ldr	r3, .L108
 1505 01a4 1B68     		ldr	r3, [r3]
 1506 01a6 03F00F03 		and	r3, r3, #15
 1507              		.loc 1 903 6
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 44


 1508 01aa 3A68     		ldr	r2, [r7]
 1509 01ac 9A42     		cmp	r2, r3
 1510 01ae 1DD2     		bcs	.L103
 904:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 905:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 906:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1511              		.loc 1 906 5
 1512 01b0 2B4B     		ldr	r3, .L108
 1513 01b2 1B68     		ldr	r3, [r3]
 1514 01b4 23F00F02 		bic	r2, r3, #15
 1515 01b8 2949     		ldr	r1, .L108
 1516 01ba 3B68     		ldr	r3, [r7]
 1517 01bc 1343     		orrs	r3, r3, r2
 1518 01be 0B60     		str	r3, [r1]
 907:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 908:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 909:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     memory by polling the FLASH_ACR register */
 910:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1519              		.loc 1 910 17
 1520 01c0 FFF7FEFF 		bl	HAL_GetTick
 1521 01c4 F860     		str	r0, [r7, #12]
 911:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     while (__HAL_FLASH_GET_LATENCY() != FLatency)
 1522              		.loc 1 912 11
 1523 01c6 0AE0     		b	.L104
 1524              	.L105:
 913:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 914:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 1525              		.loc 1 914 12
 1526 01c8 FFF7FEFF 		bl	HAL_GetTick
 1527 01cc 0246     		mov	r2, r0
 1528              		.loc 1 914 26 discriminator 1
 1529 01ce FB68     		ldr	r3, [r7, #12]
 1530 01d0 D31A     		subs	r3, r2, r3
 1531              		.loc 1 914 10 discriminator 1
 1532 01d2 41F28832 		movw	r2, #5000
 1533 01d6 9342     		cmp	r3, r2
 1534 01d8 01D9     		bls	.L104
 915:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       {
 916:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****         return HAL_TIMEOUT;
 1535              		.loc 1 916 16
 1536 01da 0323     		movs	r3, #3
 1537 01dc 3BE0     		b	.L88
 1538              	.L104:
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1539              		.loc 1 912 12
 1540 01de 204B     		ldr	r3, .L108
 1541 01e0 1B68     		ldr	r3, [r3]
 1542 01e2 03F00F03 		and	r3, r3, #15
 912:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
 1543              		.loc 1 912 38
 1544 01e6 3A68     		ldr	r2, [r7]
 1545 01e8 9A42     		cmp	r2, r3
 1546 01ea EDD1     		bne	.L105
 1547              	.L103:
 917:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       }
 918:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 45


 919:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 920:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 921:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/
 922:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1548              		.loc 1 922 26
 1549 01ec 7B68     		ldr	r3, [r7, #4]
 1550 01ee 1B68     		ldr	r3, [r3]
 1551              		.loc 1 922 39
 1552 01f0 03F00403 		and	r3, r3, #4
 1553              		.loc 1 922 6
 1554 01f4 002B     		cmp	r3, #0
 1555 01f6 08D0     		beq	.L106
 923:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 924:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 925:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1556              		.loc 1 925 5
 1557 01f8 1A4B     		ldr	r3, .L108+4
 1558 01fa 9B68     		ldr	r3, [r3, #8]
 1559 01fc 23F4E062 		bic	r2, r3, #1792
 1560 0200 7B68     		ldr	r3, [r7, #4]
 1561 0202 DB68     		ldr	r3, [r3, #12]
 1562 0204 1749     		ldr	r1, .L108+4
 1563 0206 1343     		orrs	r3, r3, r2
 1564 0208 8B60     		str	r3, [r1, #8]
 1565              	.L106:
 926:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 927:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 928:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/
 929:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 1566              		.loc 1 929 25
 1567 020a 7B68     		ldr	r3, [r7, #4]
 1568 020c 1B68     		ldr	r3, [r3]
 1569              		.loc 1 929 38
 1570 020e 03F00803 		and	r3, r3, #8
 1571              		.loc 1 929 5
 1572 0212 002B     		cmp	r3, #0
 1573 0214 09D0     		beq	.L107
 930:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
 931:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 932:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 1574              		.loc 1 932 5
 1575 0216 134B     		ldr	r3, .L108+4
 1576 0218 9B68     		ldr	r3, [r3, #8]
 1577 021a 23F46052 		bic	r2, r3, #14336
 1578 021e 7B68     		ldr	r3, [r7, #4]
 1579 0220 1B69     		ldr	r3, [r3, #16]
 1580 0222 DB00     		lsls	r3, r3, #3
 1581 0224 0F49     		ldr	r1, .L108+4
 1582 0226 1343     		orrs	r3, r3, r2
 1583 0228 8B60     		str	r3, [r1, #8]
 1584              	.L107:
 933:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
 934:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 935:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 936:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> (AHBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_HPRE) 
 1585              		.loc 1 936 21
 1586 022a FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 46


 1587 022e 0246     		mov	r2, r0
 1588              		.loc 1 936 65 discriminator 1
 1589 0230 0C4B     		ldr	r3, .L108+4
 1590 0232 9B68     		ldr	r3, [r3, #8]
 1591              		.loc 1 936 100 discriminator 1
 1592 0234 1B09     		lsrs	r3, r3, #4
 1593 0236 03F00F03 		and	r3, r3, #15
 1594              		.loc 1 936 64 discriminator 1
 1595 023a 0C49     		ldr	r1, .L108+12
 1596 023c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1597              		.loc 1 936 122 discriminator 1
 1598 023e 03F01F03 		and	r3, r3, #31
 1599              		.loc 1 936 47 discriminator 1
 1600 0242 22FA03F3 		lsr	r3, r2, r3
 1601              		.loc 1 936 19 discriminator 1
 1602 0246 0A4A     		ldr	r2, .L108+16
 1603 0248 1360     		str	r3, [r2]
 937:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 938:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 939:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return HAL_InitTick(uwTickPrio);
 1604              		.loc 1 939 10
 1605 024a 0A4B     		ldr	r3, .L108+20
 1606 024c 1B68     		ldr	r3, [r3]
 1607 024e 1846     		mov	r0, r3
 1608 0250 FFF7FEFF 		bl	HAL_InitTick
 1609 0254 0346     		mov	r3, r0
 1610              	.L88:
 940:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1611              		.loc 1 940 1
 1612 0256 1846     		mov	r0, r3
 1613 0258 1837     		adds	r7, r7, #24
 1614              	.LCFI13:
 1615              		.cfi_def_cfa_offset 8
 1616 025a BD46     		mov	sp, r7
 1617              	.LCFI14:
 1618              		.cfi_def_cfa_register 13
 1619              		@ sp needed
 1620 025c 80BD     		pop	{r7, pc}
 1621              	.L109:
 1622 025e 00BF     		.align	2
 1623              	.L108:
 1624 0260 00200240 		.word	1073881088
 1625 0264 00100240 		.word	1073876992
 1626 0268 00B4C404 		.word	80000000
 1627 026c 00000000 		.word	AHBPrescTable
 1628 0270 00000000 		.word	SystemCoreClock
 1629 0274 00000000 		.word	uwTickPrio
 1630              		.cfi_endproc
 1631              	.LFE134:
 1633              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1634              		.align	1
 1635              		.global	HAL_RCC_MCOConfig
 1636              		.syntax unified
 1637              		.thumb
 1638              		.thumb_func
 1640              	HAL_RCC_MCOConfig:
 1641              	.LFB135:
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 47


 941:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 942:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 943:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
 944:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 945:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 946:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 947:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  *  @brief   RCC clocks control functions
 948:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  *
 949:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** @verbatim
 950:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  ===============================================================================
 951:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                       ##### Peripheral Control functions #####
 952:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****  ===============================================================================
 953:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     [..]
 954:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     This subsection provides a set of functions allowing to:
 955:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 956:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     (+) Output clock to MCO pin.
 957:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     (+) Retrieve current clock frequencies.
 958:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     (+) Enable the Clock Security System.
 959:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 960:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** @endverbatim
 961:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
 962:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 963:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
 964:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
 965:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Select the clock source to output on MCO pin(PA8/PG10).
 966:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   PA8/PG10 should be configured in alternate function mode.
 967:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The default configuration of the GPIOG pin 10 (PG10) is set to reset mode (NRST pin)
 968:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         and user shall set the NRST_MODE Bit in the FLASH OPTR register to be able to use it 
 969:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         as an MCO pin.
 970:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         The @ref HAL_FLASHEx_OBProgram() API can be used to configure the NRST_MODE Bit value.
 971:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_MCOx  specifies the output direction for the clock source.
 972:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          For STM32G4xx family this parameter can have only one value:
 973:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO_PA8  Clock source to output on MCO1 pin(PA8).
 974:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO_PG10  Clock source to output on MCO1 pin(PG10).
 975:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_MCOSource  specifies the clock source to output.
 976:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 977:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK  MCO output disabled, no clock on MCO
 978:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK  system  clock selected as MCO source
 979:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI  HSI clock selected as MCO source
 980:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE  HSE clock selected as MCO source
 981:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK  main PLL clock selected as MCO source
 982:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI  LSI clock selected as MCO source
 983:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE  LSE clock selected as MCO source
 984:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI48  HSI48 clock selected as MCO source for devices with 
 985:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_MCODiv  specifies the MCO prescaler.
 986:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 987:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1  no division applied to MCO clock
 988:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2  division by 2 applied to MCO clock
 989:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4  division by 4 applied to MCO clock
 990:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8  division by 8 applied to MCO clock
 991:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 992:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
 993:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
 994:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 995:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1642              		.loc 1 995 1
 1643              		.cfi_startproc
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 48


 1644              		@ args = 0, pretend = 0, frame = 48
 1645              		@ frame_needed = 1, uses_anonymous_args = 0
 1646 0000 80B5     		push	{r7, lr}
 1647              	.LCFI15:
 1648              		.cfi_def_cfa_offset 8
 1649              		.cfi_offset 7, -8
 1650              		.cfi_offset 14, -4
 1651 0002 8CB0     		sub	sp, sp, #48
 1652              	.LCFI16:
 1653              		.cfi_def_cfa_offset 56
 1654 0004 00AF     		add	r7, sp, #0
 1655              	.LCFI17:
 1656              		.cfi_def_cfa_register 7
 1657 0006 F860     		str	r0, [r7, #12]
 1658 0008 B960     		str	r1, [r7, #8]
 1659 000a 7A60     		str	r2, [r7, #4]
 996:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   GPIO_InitTypeDef gpio_initstruct;
 997:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t mcoindex;
 998:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t mco_gpio_index;
 999:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   GPIO_TypeDef * mco_gpio_port;
1000:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1001:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
1002:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
1003:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1004:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Common GPIO init parameters */
1005:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   gpio_initstruct.Mode      = GPIO_MODE_AF_PP;
 1660              		.loc 1 1005 29
 1661 000c 0223     		movs	r3, #2
 1662 000e 7B61     		str	r3, [r7, #20]
1006:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   gpio_initstruct.Speed     = GPIO_SPEED_FREQ_VERY_HIGH;
 1663              		.loc 1 1006 29
 1664 0010 0323     		movs	r3, #3
 1665 0012 FB61     		str	r3, [r7, #28]
1007:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   gpio_initstruct.Pull      = GPIO_NOPULL;
 1666              		.loc 1 1007 29
 1667 0014 0023     		movs	r3, #0
 1668 0016 BB61     		str	r3, [r7, #24]
1008:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1009:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get MCOx selection */
1010:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   mcoindex = RCC_MCOx & RCC_MCO_INDEX_MASK;
 1669              		.loc 1 1010 12
 1670 0018 FB68     		ldr	r3, [r7, #12]
 1671 001a 03F08053 		and	r3, r3, #268435456
 1672 001e FB62     		str	r3, [r7, #44]
1011:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1012:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get MCOx GPIO Port */
1013:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   mco_gpio_port = (GPIO_TypeDef *) RCC_GET_MCO_GPIO_PORT(RCC_MCOx);
 1673              		.loc 1 1013 36
 1674 0020 FB68     		ldr	r3, [r7, #12]
 1675 0022 1B0C     		lsrs	r3, r3, #16
 1676 0024 03F00F03 		and	r3, r3, #15
 1677 0028 03F59013 		add	r3, r3, #1179648
 1678 002c 9B02     		lsls	r3, r3, #10
 1679              		.loc 1 1013 17
 1680 002e BB62     		str	r3, [r7, #40]
1014:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1015:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* MCOx Clock Enable */
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 49


1016:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   mco_gpio_index = RCC_GET_MCO_GPIO_INDEX(RCC_MCOx);
 1681              		.loc 1 1016 20
 1682 0030 FB68     		ldr	r3, [r7, #12]
 1683 0032 1B0C     		lsrs	r3, r3, #16
 1684              		.loc 1 1016 18
 1685 0034 03F00F03 		and	r3, r3, #15
 1686 0038 7B62     		str	r3, [r7, #36]
1017:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->AHB2ENR, (1UL << mco_gpio_index ));
 1687              		.loc 1 1017 3
 1688 003a 134B     		ldr	r3, .L113
 1689 003c DA6C     		ldr	r2, [r3, #76]
 1690 003e 0121     		movs	r1, #1
 1691 0040 7B6A     		ldr	r3, [r7, #36]
 1692 0042 01FA03F3 		lsl	r3, r1, r3
 1693 0046 1049     		ldr	r1, .L113
 1694 0048 1343     		orrs	r3, r3, r2
 1695 004a CB64     		str	r3, [r1, #76]
1018:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1019:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Configure the MCOx pin in alternate function mode */
1020:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   gpio_initstruct.Pin = RCC_GET_MCO_GPIO_PIN(RCC_MCOx);
 1696              		.loc 1 1020 25
 1697 004c FB68     		ldr	r3, [r7, #12]
 1698 004e 9BB2     		uxth	r3, r3
 1699              		.loc 1 1020 23
 1700 0050 3B61     		str	r3, [r7, #16]
1021:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   gpio_initstruct.Alternate = RCC_GET_MCO_GPIO_AF(RCC_MCOx);
 1701              		.loc 1 1021 31
 1702 0052 FB68     		ldr	r3, [r7, #12]
 1703 0054 1B0D     		lsrs	r3, r3, #20
 1704 0056 DBB2     		uxtb	r3, r3
 1705              		.loc 1 1021 29
 1706 0058 3B62     		str	r3, [r7, #32]
1022:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   HAL_GPIO_Init(mco_gpio_port, &gpio_initstruct);
 1707              		.loc 1 1022 3
 1708 005a 07F11003 		add	r3, r7, #16
 1709 005e 1946     		mov	r1, r3
 1710 0060 B86A     		ldr	r0, [r7, #40]
 1711 0062 FFF7FEFF 		bl	HAL_GPIO_Init
1023:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1024:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****    if (mcoindex == RCC_MCO1_INDEX)
 1712              		.loc 1 1024 7
 1713 0066 FB6A     		ldr	r3, [r7, #44]
 1714 0068 002B     		cmp	r3, #0
 1715 006a 09D1     		bne	.L112
1025:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1026:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_MCODIV(RCC_MCODiv));
1027:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
1028:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Mask MCOSEL[] and MCOPRE[] bits then set MCO clock source and prescaler */
1029:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, (RCC_CFGR_MCOSEL | RCC_CFGR_MCOPRE), (RCC_MCOSource | RCC_MCODiv));
 1716              		.loc 1 1029 5
 1717 006c 064B     		ldr	r3, .L113
 1718 006e 9B68     		ldr	r3, [r3, #8]
 1719 0070 23F0FE42 		bic	r2, r3, #2130706432
 1720 0074 B968     		ldr	r1, [r7, #8]
 1721 0076 7B68     		ldr	r3, [r7, #4]
 1722 0078 0B43     		orrs	r3, r3, r1
 1723 007a 0349     		ldr	r1, .L113
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 50


 1724 007c 1343     		orrs	r3, r3, r2
 1725 007e 8B60     		str	r3, [r1, #8]
 1726              	.L112:
1030:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1031:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1727              		.loc 1 1031 1
 1728 0080 00BF     		nop
 1729 0082 3037     		adds	r7, r7, #48
 1730              	.LCFI18:
 1731              		.cfi_def_cfa_offset 8
 1732 0084 BD46     		mov	sp, r7
 1733              	.LCFI19:
 1734              		.cfi_def_cfa_register 13
 1735              		@ sp needed
 1736 0086 80BD     		pop	{r7, pc}
 1737              	.L114:
 1738              		.align	2
 1739              	.L113:
 1740 0088 00100240 		.word	1073876992
 1741              		.cfi_endproc
 1742              	.LFE135:
 1744              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1745              		.align	1
 1746              		.global	HAL_RCC_GetSysClockFreq
 1747              		.syntax unified
 1748              		.thumb
 1749              		.thumb_func
 1751              	HAL_RCC_GetSysClockFreq:
 1752              	.LFB136:
1032:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1033:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1034:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Return the SYSCLK frequency.
1035:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1036:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real
1037:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined
1038:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         constant and the selected clock source:
1039:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
1040:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns values based on HSE_VALUE(**)
1041:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns values based on HSE_VALUE(**),
1042:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *           HSI_VALUE(*) Value multiplied/divided by the PLL factors.
1043:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32g4xx_hal_conf.h file (default value
1044:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *               16 MHz) but the real value may vary depending on the variations
1045:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *               in voltage and temperature.
1046:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32g4xx_hal_conf.h file (default value
1047:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
1048:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
1049:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *                have wrong result.
1050:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1051:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
1052:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         value for HSE crystal.
1053:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1054:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the
1055:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         baudrate for the communication peripherals or configure other parameters.
1056:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1057:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
1058:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
1059:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 51


1060:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1061:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval SYSCLK frequency
1062:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1063:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
1064:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1753              		.loc 1 1064 1
 1754              		.cfi_startproc
 1755              		@ args = 0, pretend = 0, frame = 24
 1756              		@ frame_needed = 1, uses_anonymous_args = 0
 1757              		@ link register save eliminated.
 1758 0000 80B4     		push	{r7}
 1759              	.LCFI20:
 1760              		.cfi_def_cfa_offset 4
 1761              		.cfi_offset 7, -4
 1762 0002 87B0     		sub	sp, sp, #28
 1763              	.LCFI21:
 1764              		.cfi_def_cfa_offset 32
 1765 0004 00AF     		add	r7, sp, #0
 1766              	.LCFI22:
 1767              		.cfi_def_cfa_register 7
1065:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t pllvco, pllsource, pllr, pllm;
1066:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t sysclockfreq;
1067:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1068:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
 1768              		.loc 1 1068 7
 1769 0006 2C4B     		ldr	r3, .L123
 1770 0008 9B68     		ldr	r3, [r3, #8]
 1771 000a 03F00C03 		and	r3, r3, #12
 1772              		.loc 1 1068 6
 1773 000e 042B     		cmp	r3, #4
 1774 0010 02D1     		bne	.L116
1069:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1070:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* HSI used as system clock source */
1071:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     sysclockfreq = HSI_VALUE;
 1775              		.loc 1 1071 18
 1776 0012 2A4B     		ldr	r3, .L123+4
 1777 0014 3B61     		str	r3, [r7, #16]
 1778 0016 47E0     		b	.L117
 1779              	.L116:
1072:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1073:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
 1780              		.loc 1 1073 12
 1781 0018 274B     		ldr	r3, .L123
 1782 001a 9B68     		ldr	r3, [r3, #8]
 1783 001c 03F00C03 		and	r3, r3, #12
 1784              		.loc 1 1073 11
 1785 0020 082B     		cmp	r3, #8
 1786 0022 02D1     		bne	.L118
1074:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1075:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* HSE used as system clock source */
1076:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     sysclockfreq = HSE_VALUE;
 1787              		.loc 1 1076 18
 1788 0024 264B     		ldr	r3, .L123+8
 1789 0026 3B61     		str	r3, [r7, #16]
 1790 0028 3EE0     		b	.L117
 1791              	.L118:
1077:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 52


1078:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else if (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL)
 1792              		.loc 1 1078 12
 1793 002a 234B     		ldr	r3, .L123
 1794 002c 9B68     		ldr	r3, [r3, #8]
 1795 002e 03F00C03 		and	r3, r3, #12
 1796              		.loc 1 1078 11
 1797 0032 0C2B     		cmp	r3, #12
 1798 0034 36D1     		bne	.L119
1079:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1080:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* PLL used as system clock  source */
1081:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1082:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* PLL_VCO = ((HSE_VALUE or HSI_VALUE)/ PLLM) * PLLN
1083:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     SYSCLK = PLL_VCO / PLLR
1084:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     */
1085:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 1799              		.loc 1 1085 17
 1800 0036 204B     		ldr	r3, .L123
 1801 0038 DB68     		ldr	r3, [r3, #12]
 1802              		.loc 1 1085 15
 1803 003a 03F00303 		and	r3, r3, #3
 1804 003e FB60     		str	r3, [r7, #12]
1086:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 1805              		.loc 1 1086 13
 1806 0040 1D4B     		ldr	r3, .L123
 1807 0042 DB68     		ldr	r3, [r3, #12]
 1808              		.loc 1 1086 54
 1809 0044 1B09     		lsrs	r3, r3, #4
 1810 0046 03F00F03 		and	r3, r3, #15
 1811              		.loc 1 1086 10
 1812 004a 0133     		adds	r3, r3, #1
 1813 004c BB60     		str	r3, [r7, #8]
1087:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1088:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     switch (pllsource)
 1814              		.loc 1 1088 5
 1815 004e FB68     		ldr	r3, [r7, #12]
 1816 0050 032B     		cmp	r3, #3
 1817 0052 0CD1     		bne	.L120
1089:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     {
1090:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
1091:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       pllvco = (HSE_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_P
 1818              		.loc 1 1091 27
 1819 0054 1A4A     		ldr	r2, .L123+8
 1820 0056 BB68     		ldr	r3, [r7, #8]
 1821 0058 B2FBF3F3 		udiv	r3, r2, r3
 1822              		.loc 1 1091 38
 1823 005c 164A     		ldr	r2, .L123
 1824 005e D268     		ldr	r2, [r2, #12]
 1825              		.loc 1 1091 79
 1826 0060 120A     		lsrs	r2, r2, #8
 1827 0062 02F07F02 		and	r2, r2, #127
 1828              		.loc 1 1091 14
 1829 0066 02FB03F3 		mul	r3, r2, r3
 1830 006a 7B61     		str	r3, [r7, #20]
1092:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       break;
 1831              		.loc 1 1092 7
 1832 006c 0CE0     		b	.L121
 1833              	.L120:
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 53


1093:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1094:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
1095:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     default:
1096:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       pllvco = (HSI_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_P
 1834              		.loc 1 1096 27
 1835 006e 134A     		ldr	r2, .L123+4
 1836 0070 BB68     		ldr	r3, [r7, #8]
 1837 0072 B2FBF3F3 		udiv	r3, r2, r3
 1838              		.loc 1 1096 38
 1839 0076 104A     		ldr	r2, .L123
 1840 0078 D268     		ldr	r2, [r2, #12]
 1841              		.loc 1 1096 79
 1842 007a 120A     		lsrs	r2, r2, #8
 1843 007c 02F07F02 		and	r2, r2, #127
 1844              		.loc 1 1096 14
 1845 0080 02FB03F3 		mul	r3, r2, r3
 1846 0084 7B61     		str	r3, [r7, #20]
1097:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****       break;
 1847              		.loc 1 1097 7
 1848 0086 00BF     		nop
 1849              	.L121:
1098:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     }
1099:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 1850              		.loc 1 1099 14
 1851 0088 0B4B     		ldr	r3, .L123
 1852 008a DB68     		ldr	r3, [r3, #12]
 1853              		.loc 1 1099 55
 1854 008c 5B0E     		lsrs	r3, r3, #25
 1855 008e 03F00303 		and	r3, r3, #3
 1856              		.loc 1 1099 80
 1857 0092 0133     		adds	r3, r3, #1
 1858              		.loc 1 1099 10
 1859 0094 5B00     		lsls	r3, r3, #1
 1860 0096 7B60     		str	r3, [r7, #4]
1100:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     sysclockfreq = pllvco/pllr;
 1861              		.loc 1 1100 18
 1862 0098 7A69     		ldr	r2, [r7, #20]
 1863 009a 7B68     		ldr	r3, [r7, #4]
 1864 009c B2FBF3F3 		udiv	r3, r2, r3
 1865 00a0 3B61     		str	r3, [r7, #16]
 1866 00a2 01E0     		b	.L117
 1867              	.L119:
1101:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1102:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1103:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1104:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     sysclockfreq = 0U;
 1868              		.loc 1 1104 18
 1869 00a4 0023     		movs	r3, #0
 1870 00a6 3B61     		str	r3, [r7, #16]
 1871              	.L117:
1105:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1106:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1107:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return sysclockfreq;
 1872              		.loc 1 1107 10
 1873 00a8 3B69     		ldr	r3, [r7, #16]
1108:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1874              		.loc 1 1108 1
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 54


 1875 00aa 1846     		mov	r0, r3
 1876 00ac 1C37     		adds	r7, r7, #28
 1877              	.LCFI23:
 1878              		.cfi_def_cfa_offset 4
 1879 00ae BD46     		mov	sp, r7
 1880              	.LCFI24:
 1881              		.cfi_def_cfa_register 13
 1882              		@ sp needed
 1883 00b0 5DF8047B 		ldr	r7, [sp], #4
 1884              	.LCFI25:
 1885              		.cfi_restore 7
 1886              		.cfi_def_cfa_offset 0
 1887 00b4 7047     		bx	lr
 1888              	.L124:
 1889 00b6 00BF     		.align	2
 1890              	.L123:
 1891 00b8 00100240 		.word	1073876992
 1892 00bc 0024F400 		.word	16000000
 1893 00c0 00127A00 		.word	8000000
 1894              		.cfi_endproc
 1895              	.LFE136:
 1897              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 1898              		.align	1
 1899              		.global	HAL_RCC_GetHCLKFreq
 1900              		.syntax unified
 1901              		.thumb
 1902              		.thumb_func
 1904              	HAL_RCC_GetHCLKFreq:
 1905              	.LFB137:
1109:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1110:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1111:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Return the HCLK frequency.
1112:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1113:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1114:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *
1115:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency.
1116:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval HCLK frequency in Hz
1117:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1118:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1119:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1906              		.loc 1 1119 1
 1907              		.cfi_startproc
 1908              		@ args = 0, pretend = 0, frame = 0
 1909              		@ frame_needed = 1, uses_anonymous_args = 0
 1910              		@ link register save eliminated.
 1911 0000 80B4     		push	{r7}
 1912              	.LCFI26:
 1913              		.cfi_def_cfa_offset 4
 1914              		.cfi_offset 7, -4
 1915 0002 00AF     		add	r7, sp, #0
 1916              	.LCFI27:
 1917              		.cfi_def_cfa_register 7
1120:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return SystemCoreClock;
 1918              		.loc 1 1120 10
 1919 0004 034B     		ldr	r3, .L127
 1920 0006 1B68     		ldr	r3, [r3]
1121:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 55


 1921              		.loc 1 1121 1
 1922 0008 1846     		mov	r0, r3
 1923 000a BD46     		mov	sp, r7
 1924              	.LCFI28:
 1925              		.cfi_def_cfa_register 13
 1926              		@ sp needed
 1927 000c 5DF8047B 		ldr	r7, [sp], #4
 1928              	.LCFI29:
 1929              		.cfi_restore 7
 1930              		.cfi_def_cfa_offset 0
 1931 0010 7047     		bx	lr
 1932              	.L128:
 1933 0012 00BF     		.align	2
 1934              	.L127:
 1935 0014 00000000 		.word	SystemCoreClock
 1936              		.cfi_endproc
 1937              	.LFE137:
 1939              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1940              		.align	1
 1941              		.global	HAL_RCC_GetPCLK1Freq
 1942              		.syntax unified
 1943              		.thumb
 1944              		.thumb_func
 1946              	HAL_RCC_GetPCLK1Freq:
 1947              	.LFB138:
1122:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1123:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1124:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Return the PCLK1 frequency.
1125:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1126:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1127:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval PCLK1 frequency in Hz
1128:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1129:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1130:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1948              		.loc 1 1130 1
 1949              		.cfi_startproc
 1950              		@ args = 0, pretend = 0, frame = 0
 1951              		@ frame_needed = 1, uses_anonymous_args = 0
 1952 0000 80B5     		push	{r7, lr}
 1953              	.LCFI30:
 1954              		.cfi_def_cfa_offset 8
 1955              		.cfi_offset 7, -8
 1956              		.cfi_offset 14, -4
 1957 0002 00AF     		add	r7, sp, #0
 1958              	.LCFI31:
 1959              		.cfi_def_cfa_register 7
1131:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1132:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1) >> RCC_CFGR_P
 1960              		.loc 1 1132 11
 1961 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 1962 0008 0246     		mov	r2, r0
 1963              		.loc 1 1132 51 discriminator 1
 1964 000a 064B     		ldr	r3, .L131
 1965 000c 9B68     		ldr	r3, [r3, #8]
 1966              		.loc 1 1132 87 discriminator 1
 1967 000e 1B0A     		lsrs	r3, r3, #8
 1968 0010 03F00703 		and	r3, r3, #7
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 56


 1969              		.loc 1 1132 50 discriminator 1
 1970 0014 0449     		ldr	r1, .L131+4
 1971 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1972              		.loc 1 1132 110 discriminator 1
 1973 0018 03F01F03 		and	r3, r3, #31
 1974              		.loc 1 1132 33 discriminator 1
 1975 001c 22FA03F3 		lsr	r3, r2, r3
1133:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 1976              		.loc 1 1133 1
 1977 0020 1846     		mov	r0, r3
 1978 0022 80BD     		pop	{r7, pc}
 1979              	.L132:
 1980              		.align	2
 1981              	.L131:
 1982 0024 00100240 		.word	1073876992
 1983 0028 00000000 		.word	APBPrescTable
 1984              		.cfi_endproc
 1985              	.LFE138:
 1987              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1988              		.align	1
 1989              		.global	HAL_RCC_GetPCLK2Freq
 1990              		.syntax unified
 1991              		.thumb
 1992              		.thumb_func
 1994              	HAL_RCC_GetPCLK2Freq:
 1995              	.LFB139:
1134:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1135:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1136:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Return the PCLK2 frequency.
1137:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1138:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1139:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval PCLK2 frequency in Hz
1140:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1141:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1142:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 1996              		.loc 1 1142 1
 1997              		.cfi_startproc
 1998              		@ args = 0, pretend = 0, frame = 0
 1999              		@ frame_needed = 1, uses_anonymous_args = 0
 2000 0000 80B5     		push	{r7, lr}
 2001              	.LCFI32:
 2002              		.cfi_def_cfa_offset 8
 2003              		.cfi_offset 7, -8
 2004              		.cfi_offset 14, -4
 2005 0002 00AF     		add	r7, sp, #0
 2006              	.LCFI33:
 2007              		.cfi_def_cfa_register 7
1143:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1144:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> (APBPrescTable[READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> RCC_CFGR_PP
 2008              		.loc 1 1144 11
 2009 0004 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2010 0008 0246     		mov	r2, r0
 2011              		.loc 1 1144 50 discriminator 1
 2012 000a 064B     		ldr	r3, .L135
 2013 000c 9B68     		ldr	r3, [r3, #8]
 2014              		.loc 1 1144 86 discriminator 1
 2015 000e DB0A     		lsrs	r3, r3, #11
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 57


 2016 0010 03F00703 		and	r3, r3, #7
 2017              		.loc 1 1144 49 discriminator 1
 2018 0014 0449     		ldr	r1, .L135+4
 2019 0016 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2020              		.loc 1 1144 109 discriminator 1
 2021 0018 03F01F03 		and	r3, r3, #31
 2022              		.loc 1 1144 32 discriminator 1
 2023 001c 22FA03F3 		lsr	r3, r2, r3
1145:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2024              		.loc 1 1145 1
 2025 0020 1846     		mov	r0, r3
 2026 0022 80BD     		pop	{r7, pc}
 2027              	.L136:
 2028              		.align	2
 2029              	.L135:
 2030 0024 00100240 		.word	1073876992
 2031 0028 00000000 		.word	APBPrescTable
 2032              		.cfi_endproc
 2033              	.LFE139:
 2035              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2036              		.align	1
 2037              		.global	HAL_RCC_GetOscConfig
 2038              		.syntax unified
 2039              		.thumb
 2040              		.thumb_func
 2042              	HAL_RCC_GetOscConfig:
 2043              	.LFB140:
1146:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1147:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1148:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Configure the RCC_OscInitStruct according to the internal
1149:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         RCC configuration registers.
1150:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_OscInitStruct  pointer to an RCC_OscInitTypeDef structure that
1151:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         will be configured.
1152:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1153:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1154:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1155:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2044              		.loc 1 1155 1
 2045              		.cfi_startproc
 2046              		@ args = 0, pretend = 0, frame = 8
 2047              		@ frame_needed = 1, uses_anonymous_args = 0
 2048              		@ link register save eliminated.
 2049 0000 80B4     		push	{r7}
 2050              	.LCFI34:
 2051              		.cfi_def_cfa_offset 4
 2052              		.cfi_offset 7, -4
 2053 0002 83B0     		sub	sp, sp, #12
 2054              	.LCFI35:
 2055              		.cfi_def_cfa_offset 16
 2056 0004 00AF     		add	r7, sp, #0
 2057              	.LCFI36:
 2058              		.cfi_def_cfa_register 7
 2059 0006 7860     		str	r0, [r7, #4]
1156:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
1157:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != (void *)NULL);
1158:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1159:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 58


1160:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI | \
 2060              		.loc 1 1160 37
 2061 0008 7B68     		ldr	r3, [r7, #4]
 2062 000a 2F22     		movs	r2, #47
 2063 000c 1A60     		str	r2, [r3]
1161:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****                                       RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI | RCC_OSCILLA
1162:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1163:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1164:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2064              		.loc 1 1164 6
 2065 000e 544B     		ldr	r3, .L152
 2066 0010 1B68     		ldr	r3, [r3]
 2067 0012 03F48023 		and	r3, r3, #262144
 2068              		.loc 1 1164 5
 2069 0016 B3F5802F 		cmp	r3, #262144
 2070 001a 04D1     		bne	.L138
1165:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1166:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2071              		.loc 1 1166 33
 2072 001c 7B68     		ldr	r3, [r7, #4]
 2073 001e 4FF4A022 		mov	r2, #327680
 2074 0022 5A60     		str	r2, [r3, #4]
 2075 0024 0EE0     		b	.L139
 2076              	.L138:
1167:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1168:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else if(READ_BIT(RCC->CR, RCC_CR_HSEON) == RCC_CR_HSEON)
 2077              		.loc 1 1168 11
 2078 0026 4E4B     		ldr	r3, .L152
 2079 0028 1B68     		ldr	r3, [r3]
 2080 002a 03F48033 		and	r3, r3, #65536
 2081              		.loc 1 1168 10
 2082 002e B3F5803F 		cmp	r3, #65536
 2083 0032 04D1     		bne	.L140
1169:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1170:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2084              		.loc 1 1170 33
 2085 0034 7B68     		ldr	r3, [r7, #4]
 2086 0036 4FF48032 		mov	r2, #65536
 2087 003a 5A60     		str	r2, [r3, #4]
 2088 003c 02E0     		b	.L139
 2089              	.L140:
1171:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1172:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1173:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1174:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2090              		.loc 1 1174 33
 2091 003e 7B68     		ldr	r3, [r7, #4]
 2092 0040 0022     		movs	r2, #0
 2093 0042 5A60     		str	r2, [r3, #4]
 2094              	.L139:
1175:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1176:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1177:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1178:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_HSION) == RCC_CR_HSION)
 2095              		.loc 1 1178 6
 2096 0044 464B     		ldr	r3, .L152
 2097 0046 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 59


 2098 0048 03F48073 		and	r3, r3, #256
 2099              		.loc 1 1178 5
 2100 004c B3F5807F 		cmp	r3, #256
 2101 0050 04D1     		bne	.L141
1179:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1180:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2102              		.loc 1 1180 33
 2103 0052 7B68     		ldr	r3, [r7, #4]
 2104 0054 4FF48072 		mov	r2, #256
 2105 0058 DA60     		str	r2, [r3, #12]
 2106 005a 02E0     		b	.L142
 2107              	.L141:
1181:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1182:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1183:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1184:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2108              		.loc 1 1184 33
 2109 005c 7B68     		ldr	r3, [r7, #4]
 2110 005e 0022     		movs	r2, #0
 2111 0060 DA60     		str	r2, [r3, #12]
 2112              	.L142:
1185:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1186:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1187:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = READ_BIT(RCC->ICSCR, RCC_ICSCR_HSITRIM) >> RCC_ICSCR_HSI
 2113              		.loc 1 1187 44
 2114 0062 3F4B     		ldr	r3, .L152
 2115 0064 5B68     		ldr	r3, [r3, #4]
 2116              		.loc 1 1187 84
 2117 0066 1B0E     		lsrs	r3, r3, #24
 2118 0068 03F07F02 		and	r2, r3, #127
 2119              		.loc 1 1187 42
 2120 006c 7B68     		ldr	r3, [r7, #4]
 2121 006e 1A61     		str	r2, [r3, #16]
1188:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1189:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1190:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->BDCR, RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2122              		.loc 1 1190 6
 2123 0070 3B4B     		ldr	r3, .L152
 2124 0072 D3F89030 		ldr	r3, [r3, #144]
 2125 0076 03F00403 		and	r3, r3, #4
 2126              		.loc 1 1190 5
 2127 007a 042B     		cmp	r3, #4
 2128 007c 03D1     		bne	.L143
1191:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1192:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2129              		.loc 1 1192 33
 2130 007e 7B68     		ldr	r3, [r7, #4]
 2131 0080 0522     		movs	r2, #5
 2132 0082 9A60     		str	r2, [r3, #8]
 2133 0084 0DE0     		b	.L144
 2134              	.L143:
1193:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1194:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else if(READ_BIT(RCC->BDCR, RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2135              		.loc 1 1194 11
 2136 0086 364B     		ldr	r3, .L152
 2137 0088 D3F89030 		ldr	r3, [r3, #144]
 2138 008c 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 60


 2139              		.loc 1 1194 10
 2140 0090 012B     		cmp	r3, #1
 2141 0092 03D1     		bne	.L145
1195:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1196:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2142              		.loc 1 1196 33
 2143 0094 7B68     		ldr	r3, [r7, #4]
 2144 0096 0122     		movs	r2, #1
 2145 0098 9A60     		str	r2, [r3, #8]
 2146 009a 02E0     		b	.L144
 2147              	.L145:
1197:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1198:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1199:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1200:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2148              		.loc 1 1200 33
 2149 009c 7B68     		ldr	r3, [r7, #4]
 2150 009e 0022     		movs	r2, #0
 2151 00a0 9A60     		str	r2, [r3, #8]
 2152              	.L144:
1201:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1202:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1203:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1204:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->CSR, RCC_CSR_LSION) == RCC_CSR_LSION)
 2153              		.loc 1 1204 6
 2154 00a2 2F4B     		ldr	r3, .L152
 2155 00a4 D3F89430 		ldr	r3, [r3, #148]
 2156 00a8 03F00103 		and	r3, r3, #1
 2157              		.loc 1 1204 5
 2158 00ac 012B     		cmp	r3, #1
 2159 00ae 03D1     		bne	.L146
1205:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1206:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2160              		.loc 1 1206 33
 2161 00b0 7B68     		ldr	r3, [r7, #4]
 2162 00b2 0122     		movs	r2, #1
 2163 00b4 5A61     		str	r2, [r3, #20]
 2164 00b6 02E0     		b	.L147
 2165              	.L146:
1207:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1208:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1209:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1210:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2166              		.loc 1 1210 33
 2167 00b8 7B68     		ldr	r3, [r7, #4]
 2168 00ba 0022     		movs	r2, #0
 2169 00bc 5A61     		str	r2, [r3, #20]
 2170              	.L147:
1211:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1212:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1213:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the HSI48 configuration ---------------------------------------------*/
1214:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->CRRCR, RCC_CRRCR_HSI48ON) == RCC_CRRCR_HSI48ON)
 2171              		.loc 1 1214 6
 2172 00be 284B     		ldr	r3, .L152
 2173 00c0 D3F89830 		ldr	r3, [r3, #152]
 2174 00c4 03F00103 		and	r3, r3, #1
 2175              		.loc 1 1214 5
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 61


 2176 00c8 012B     		cmp	r3, #1
 2177 00ca 03D1     		bne	.L148
1215:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1216:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_ON;
 2178              		.loc 1 1216 35
 2179 00cc 7B68     		ldr	r3, [r7, #4]
 2180 00ce 0122     		movs	r2, #1
 2181 00d0 9A61     		str	r2, [r3, #24]
 2182 00d2 02E0     		b	.L149
 2183              	.L148:
1217:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1218:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1219:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1220:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->HSI48State = RCC_HSI48_OFF;
 2184              		.loc 1 1220 35
 2185 00d4 7B68     		ldr	r3, [r7, #4]
 2186 00d6 0022     		movs	r2, #0
 2187 00d8 9A61     		str	r2, [r3, #24]
 2188              	.L149:
1221:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1222:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1223:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1224:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(READ_BIT(RCC->CR, RCC_CR_PLLON) == RCC_CR_PLLON)
 2189              		.loc 1 1224 6
 2190 00da 214B     		ldr	r3, .L152
 2191 00dc 1B68     		ldr	r3, [r3]
 2192 00de 03F08073 		and	r3, r3, #16777216
 2193              		.loc 1 1224 5
 2194 00e2 B3F1807F 		cmp	r3, #16777216
 2195 00e6 03D1     		bne	.L150
1225:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1226:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2196              		.loc 1 1226 37
 2197 00e8 7B68     		ldr	r3, [r7, #4]
 2198 00ea 0222     		movs	r2, #2
 2199 00ec DA61     		str	r2, [r3, #28]
 2200 00ee 02E0     		b	.L151
 2201              	.L150:
1227:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1228:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   else
1229:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1230:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2202              		.loc 1 1230 37
 2203 00f0 7B68     		ldr	r3, [r7, #4]
 2204 00f2 0122     		movs	r2, #1
 2205 00f4 DA61     		str	r2, [r3, #28]
 2206              	.L151:
1231:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1232:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 2207              		.loc 1 1232 38
 2208 00f6 1A4B     		ldr	r3, .L152
 2209 00f8 DB68     		ldr	r3, [r3, #12]
 2210 00fa 03F00302 		and	r2, r3, #3
 2211              		.loc 1 1232 36
 2212 00fe 7B68     		ldr	r3, [r7, #4]
 2213 0100 1A62     		str	r2, [r3, #32]
1233:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLM = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) 
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 62


 2214              		.loc 1 1233 34
 2215 0102 174B     		ldr	r3, .L152
 2216 0104 DB68     		ldr	r3, [r3, #12]
 2217              		.loc 1 1233 75
 2218 0106 1B09     		lsrs	r3, r3, #4
 2219 0108 03F00F03 		and	r3, r3, #15
 2220              		.loc 1 1233 100
 2221 010c 5A1C     		adds	r2, r3, #1
 2222              		.loc 1 1233 31
 2223 010e 7B68     		ldr	r3, [r7, #4]
 2224 0110 5A62     		str	r2, [r3, #36]
1234:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLN = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos;
 2225              		.loc 1 1234 33
 2226 0112 134B     		ldr	r3, .L152
 2227 0114 DB68     		ldr	r3, [r3, #12]
 2228              		.loc 1 1234 74
 2229 0116 1B0A     		lsrs	r3, r3, #8
 2230 0118 03F07F02 		and	r2, r3, #127
 2231              		.loc 1 1234 31
 2232 011c 7B68     		ldr	r3, [r7, #4]
 2233 011e 9A62     		str	r2, [r3, #40]
1235:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLQ = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLQ) >> RCC_PLLCFGR_PLLQ_Pos
 2234              		.loc 1 1235 36
 2235 0120 0F4B     		ldr	r3, .L152
 2236 0122 DB68     		ldr	r3, [r3, #12]
 2237              		.loc 1 1235 77
 2238 0124 5B0D     		lsrs	r3, r3, #21
 2239 0126 03F00303 		and	r3, r3, #3
 2240              		.loc 1 1235 102
 2241 012a 0133     		adds	r3, r3, #1
 2242              		.loc 1 1235 108
 2243 012c 5A00     		lsls	r2, r3, #1
 2244              		.loc 1 1235 31
 2245 012e 7B68     		ldr	r3, [r7, #4]
 2246 0130 1A63     		str	r2, [r3, #48]
1236:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLR = (((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos
 2247              		.loc 1 1236 36
 2248 0132 0B4B     		ldr	r3, .L152
 2249 0134 DB68     		ldr	r3, [r3, #12]
 2250              		.loc 1 1236 77
 2251 0136 5B0E     		lsrs	r3, r3, #25
 2252 0138 03F00303 		and	r3, r3, #3
 2253              		.loc 1 1236 102
 2254 013c 0133     		adds	r3, r3, #1
 2255              		.loc 1 1236 108
 2256 013e 5A00     		lsls	r2, r3, #1
 2257              		.loc 1 1236 31
 2258 0140 7B68     		ldr	r3, [r7, #4]
 2259 0142 5A63     		str	r2, [r3, #52]
1237:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLP = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLPDIV) >> RCC_PLLCFGR_PLLPDIV_
 2260              		.loc 1 1237 33
 2261 0144 064B     		ldr	r3, .L152
 2262 0146 DB68     		ldr	r3, [r3, #12]
 2263              		.loc 1 1237 77
 2264 0148 DB0E     		lsrs	r3, r3, #27
 2265 014a 03F01F02 		and	r2, r3, #31
 2266              		.loc 1 1237 31
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 63


 2267 014e 7B68     		ldr	r3, [r7, #4]
 2268 0150 DA62     		str	r2, [r3, #44]
1238:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2269              		.loc 1 1238 1
 2270 0152 00BF     		nop
 2271 0154 0C37     		adds	r7, r7, #12
 2272              	.LCFI37:
 2273              		.cfi_def_cfa_offset 4
 2274 0156 BD46     		mov	sp, r7
 2275              	.LCFI38:
 2276              		.cfi_def_cfa_register 13
 2277              		@ sp needed
 2278 0158 5DF8047B 		ldr	r7, [sp], #4
 2279              	.LCFI39:
 2280              		.cfi_restore 7
 2281              		.cfi_def_cfa_offset 0
 2282 015c 7047     		bx	lr
 2283              	.L153:
 2284 015e 00BF     		.align	2
 2285              	.L152:
 2286 0160 00100240 		.word	1073876992
 2287              		.cfi_endproc
 2288              	.LFE140:
 2290              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2291              		.align	1
 2292              		.global	HAL_RCC_GetClockConfig
 2293              		.syntax unified
 2294              		.thumb
 2295              		.thumb_func
 2297              	HAL_RCC_GetClockConfig:
 2298              	.LFB141:
1239:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1240:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1241:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Configure the RCC_ClkInitStruct according to the internal
1242:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         RCC configuration registers.
1243:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct  pointer to an RCC_ClkInitTypeDef structure that
1244:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         will be configured.
1245:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @param  pFLatency  Pointer on the Flash Latency.
1246:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1247:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1248:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1249:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2299              		.loc 1 1249 1
 2300              		.cfi_startproc
 2301              		@ args = 0, pretend = 0, frame = 8
 2302              		@ frame_needed = 1, uses_anonymous_args = 0
 2303              		@ link register save eliminated.
 2304 0000 80B4     		push	{r7}
 2305              	.LCFI40:
 2306              		.cfi_def_cfa_offset 4
 2307              		.cfi_offset 7, -4
 2308 0002 83B0     		sub	sp, sp, #12
 2309              	.LCFI41:
 2310              		.cfi_def_cfa_offset 16
 2311 0004 00AF     		add	r7, sp, #0
 2312              	.LCFI42:
 2313              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 64


 2314 0006 7860     		str	r0, [r7, #4]
 2315 0008 3960     		str	r1, [r7]
1250:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check the parameters */
1251:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != (void  *)NULL);
1252:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   assert_param(pFLatency != (void *)NULL);
1253:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1254:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1255:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2316              		.loc 1 1255 32
 2317 000a 7B68     		ldr	r3, [r7, #4]
 2318 000c 0F22     		movs	r2, #15
 2319 000e 1A60     		str	r2, [r3]
1256:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1257:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/
1258:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = READ_BIT(RCC->CFGR, RCC_CFGR_SW);
 2320              		.loc 1 1258 37
 2321 0010 124B     		ldr	r3, .L155
 2322 0012 9B68     		ldr	r3, [r3, #8]
 2323 0014 03F00302 		and	r2, r3, #3
 2324              		.loc 1 1258 35
 2325 0018 7B68     		ldr	r3, [r7, #4]
 2326 001a 5A60     		str	r2, [r3, #4]
1259:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1260:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/
1261:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_HPRE);
 2327              		.loc 1 1261 38
 2328 001c 0F4B     		ldr	r3, .L155
 2329 001e 9B68     		ldr	r3, [r3, #8]
 2330 0020 03F0F002 		and	r2, r3, #240
 2331              		.loc 1 1261 36
 2332 0024 7B68     		ldr	r3, [r7, #4]
 2333 0026 9A60     		str	r2, [r3, #8]
1262:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1263:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/
1264:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = READ_BIT(RCC->CFGR, RCC_CFGR_PPRE1);
 2334              		.loc 1 1264 39
 2335 0028 0C4B     		ldr	r3, .L155
 2336 002a 9B68     		ldr	r3, [r3, #8]
 2337 002c 03F4E062 		and	r2, r3, #1792
 2338              		.loc 1 1264 37
 2339 0030 7B68     		ldr	r3, [r7, #4]
 2340 0032 DA60     		str	r2, [r3, #12]
1265:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1266:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/
1267:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (READ_BIT(RCC->CFGR, RCC_CFGR_PPRE2) >> 3U);
 2341              		.loc 1 1267 40
 2342 0034 094B     		ldr	r3, .L155
 2343 0036 9B68     		ldr	r3, [r3, #8]
 2344              		.loc 1 1267 76
 2345 0038 DB08     		lsrs	r3, r3, #3
 2346 003a 03F4E062 		and	r2, r3, #1792
 2347              		.loc 1 1267 37
 2348 003e 7B68     		ldr	r3, [r7, #4]
 2349 0040 1A61     		str	r2, [r3, #16]
1268:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1269:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/
1270:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *pFLatency = __HAL_FLASH_GET_LATENCY();
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 65


 2350              		.loc 1 1270 16
 2351 0042 074B     		ldr	r3, .L155+4
 2352 0044 1B68     		ldr	r3, [r3]
 2353 0046 03F00F02 		and	r2, r3, #15
 2354              		.loc 1 1270 14
 2355 004a 3B68     		ldr	r3, [r7]
 2356 004c 1A60     		str	r2, [r3]
1271:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2357              		.loc 1 1271 1
 2358 004e 00BF     		nop
 2359 0050 0C37     		adds	r7, r7, #12
 2360              	.LCFI43:
 2361              		.cfi_def_cfa_offset 4
 2362 0052 BD46     		mov	sp, r7
 2363              	.LCFI44:
 2364              		.cfi_def_cfa_register 13
 2365              		@ sp needed
 2366 0054 5DF8047B 		ldr	r7, [sp], #4
 2367              	.LCFI45:
 2368              		.cfi_restore 7
 2369              		.cfi_def_cfa_offset 0
 2370 0058 7047     		bx	lr
 2371              	.L156:
 2372 005a 00BF     		.align	2
 2373              	.L155:
 2374 005c 00100240 		.word	1073876992
 2375 0060 00200240 		.word	1073881088
 2376              		.cfi_endproc
 2377              	.LFE141:
 2379              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 2380              		.align	1
 2381              		.global	HAL_RCC_EnableCSS
 2382              		.syntax unified
 2383              		.thumb
 2384              		.thumb_func
 2386              	HAL_RCC_EnableCSS:
 2387              	.LFB142:
1272:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1273:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1274:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Enable the Clock Security System.
1275:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
1276:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
1277:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
1278:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to
1279:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.
1280:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The Clock Security System can only be cleared by reset.
1281:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1282:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1283:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
1284:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2388              		.loc 1 1284 1
 2389              		.cfi_startproc
 2390              		@ args = 0, pretend = 0, frame = 0
 2391              		@ frame_needed = 1, uses_anonymous_args = 0
 2392              		@ link register save eliminated.
 2393 0000 80B4     		push	{r7}
 2394              	.LCFI46:
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 66


 2395              		.cfi_def_cfa_offset 4
 2396              		.cfi_offset 7, -4
 2397 0002 00AF     		add	r7, sp, #0
 2398              	.LCFI47:
 2399              		.cfi_def_cfa_register 7
1285:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_CSSON) ;
 2400              		.loc 1 1285 3
 2401 0004 054B     		ldr	r3, .L158
 2402 0006 1B68     		ldr	r3, [r3]
 2403 0008 044A     		ldr	r2, .L158
 2404 000a 43F40023 		orr	r3, r3, #524288
 2405 000e 1360     		str	r3, [r2]
1286:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2406              		.loc 1 1286 1
 2407 0010 00BF     		nop
 2408 0012 BD46     		mov	sp, r7
 2409              	.LCFI48:
 2410              		.cfi_def_cfa_register 13
 2411              		@ sp needed
 2412 0014 5DF8047B 		ldr	r7, [sp], #4
 2413              	.LCFI49:
 2414              		.cfi_restore 7
 2415              		.cfi_def_cfa_offset 0
 2416 0018 7047     		bx	lr
 2417              	.L159:
 2418 001a 00BF     		.align	2
 2419              	.L158:
 2420 001c 00100240 		.word	1073876992
 2421              		.cfi_endproc
 2422              	.LFE142:
 2424              		.section	.text.HAL_RCC_EnableLSECSS,"ax",%progbits
 2425              		.align	1
 2426              		.global	HAL_RCC_EnableLSECSS
 2427              		.syntax unified
 2428              		.thumb
 2429              		.thumb_func
 2431              	HAL_RCC_EnableLSECSS:
 2432              	.LFB143:
1287:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1288:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1289:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Enable the LSE Clock Security System.
1290:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   If a failure is detected on the external 32 kHz oscillator,
1291:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         the LSE clock is no longer supplied to the RTC but no hardware action
1292:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         is made to the registers. If enabled, an interrupt will be generated
1293:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   *         and handle through @ref RCCEx_EXTI_LINE_LSECSS
1294:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The Clock Security System can only be cleared by reset or after a LSE failure detection
1295:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1296:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1297:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_EnableLSECSS(void)
1298:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2433              		.loc 1 1298 1
 2434              		.cfi_startproc
 2435              		@ args = 0, pretend = 0, frame = 0
 2436              		@ frame_needed = 1, uses_anonymous_args = 0
 2437              		@ link register save eliminated.
 2438 0000 80B4     		push	{r7}
 2439              	.LCFI50:
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 67


 2440              		.cfi_def_cfa_offset 4
 2441              		.cfi_offset 7, -4
 2442 0002 00AF     		add	r7, sp, #0
 2443              	.LCFI51:
 2444              		.cfi_def_cfa_register 7
1299:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   SET_BIT(RCC->BDCR, RCC_BDCR_LSECSSON) ;
 2445              		.loc 1 1299 3
 2446 0004 064B     		ldr	r3, .L161
 2447 0006 D3F89030 		ldr	r3, [r3, #144]
 2448 000a 054A     		ldr	r2, .L161
 2449 000c 43F02003 		orr	r3, r3, #32
 2450 0010 C2F89030 		str	r3, [r2, #144]
1300:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2451              		.loc 1 1300 1
 2452 0014 00BF     		nop
 2453 0016 BD46     		mov	sp, r7
 2454              	.LCFI52:
 2455              		.cfi_def_cfa_register 13
 2456              		@ sp needed
 2457 0018 5DF8047B 		ldr	r7, [sp], #4
 2458              	.LCFI53:
 2459              		.cfi_restore 7
 2460              		.cfi_def_cfa_offset 0
 2461 001c 7047     		bx	lr
 2462              	.L162:
 2463 001e 00BF     		.align	2
 2464              	.L161:
 2465 0020 00100240 		.word	1073876992
 2466              		.cfi_endproc
 2467              	.LFE143:
 2469              		.section	.text.HAL_RCC_DisableLSECSS,"ax",%progbits
 2470              		.align	1
 2471              		.global	HAL_RCC_DisableLSECSS
 2472              		.syntax unified
 2473              		.thumb
 2474              		.thumb_func
 2476              	HAL_RCC_DisableLSECSS:
 2477              	.LFB144:
1301:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1302:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1303:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Disable the LSE Clock Security System.
1304:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   After LSE failure detection, the software must disable LSECSSON
1305:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note   The Clock Security System can only be cleared by reset otherwise.
1306:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1307:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1308:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_DisableLSECSS(void)
1309:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2478              		.loc 1 1309 1
 2479              		.cfi_startproc
 2480              		@ args = 0, pretend = 0, frame = 0
 2481              		@ frame_needed = 1, uses_anonymous_args = 0
 2482              		@ link register save eliminated.
 2483 0000 80B4     		push	{r7}
 2484              	.LCFI54:
 2485              		.cfi_def_cfa_offset 4
 2486              		.cfi_offset 7, -4
 2487 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 68


 2488              	.LCFI55:
 2489              		.cfi_def_cfa_register 7
1310:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   CLEAR_BIT(RCC->BDCR, RCC_BDCR_LSECSSON) ;
 2490              		.loc 1 1310 3
 2491 0004 064B     		ldr	r3, .L164
 2492 0006 D3F89030 		ldr	r3, [r3, #144]
 2493 000a 054A     		ldr	r2, .L164
 2494 000c 23F02003 		bic	r3, r3, #32
 2495 0010 C2F89030 		str	r3, [r2, #144]
1311:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2496              		.loc 1 1311 1
 2497 0014 00BF     		nop
 2498 0016 BD46     		mov	sp, r7
 2499              	.LCFI56:
 2500              		.cfi_def_cfa_register 13
 2501              		@ sp needed
 2502 0018 5DF8047B 		ldr	r7, [sp], #4
 2503              	.LCFI57:
 2504              		.cfi_restore 7
 2505              		.cfi_def_cfa_offset 0
 2506 001c 7047     		bx	lr
 2507              	.L165:
 2508 001e 00BF     		.align	2
 2509              	.L164:
 2510 0020 00100240 		.word	1073876992
 2511              		.cfi_endproc
 2512              	.LFE144:
 2514              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2515              		.align	1
 2516              		.global	HAL_RCC_NMI_IRQHandler
 2517              		.syntax unified
 2518              		.thumb
 2519              		.thumb_func
 2521              	HAL_RCC_NMI_IRQHandler:
 2522              	.LFB145:
1312:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1313:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1314:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief Handle the RCC Clock Security System interrupt request.
1315:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1316:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval None
1317:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1318:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1319:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2523              		.loc 1 1319 1
 2524              		.cfi_startproc
 2525              		@ args = 0, pretend = 0, frame = 0
 2526              		@ frame_needed = 1, uses_anonymous_args = 0
 2527 0000 80B5     		push	{r7, lr}
 2528              	.LCFI58:
 2529              		.cfi_def_cfa_offset 8
 2530              		.cfi_offset 7, -8
 2531              		.cfi_offset 14, -4
 2532 0002 00AF     		add	r7, sp, #0
 2533              	.LCFI59:
 2534              		.cfi_def_cfa_register 7
1320:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* Check RCC CSSF interrupt flag  */
1321:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 69


 2535              		.loc 1 1321 6
 2536 0004 074B     		ldr	r3, .L169
 2537 0006 DB69     		ldr	r3, [r3, #28]
 2538 0008 03F48073 		and	r3, r3, #256
 2539              		.loc 1 1321 5
 2540 000c B3F5807F 		cmp	r3, #256
 2541 0010 05D1     		bne	.L168
1322:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1323:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1324:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2542              		.loc 1 1324 5
 2543 0012 FFF7FEFF 		bl	HAL_RCC_CSSCallback
1325:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1326:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1327:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2544              		.loc 1 1327 5
 2545 0016 034B     		ldr	r3, .L169
 2546 0018 4FF48072 		mov	r2, #256
 2547 001c 1A62     		str	r2, [r3, #32]
 2548              	.L168:
1328:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1329:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2549              		.loc 1 1329 1
 2550 001e 00BF     		nop
 2551 0020 80BD     		pop	{r7, pc}
 2552              	.L170:
 2553 0022 00BF     		.align	2
 2554              	.L169:
 2555 0024 00100240 		.word	1073876992
 2556              		.cfi_endproc
 2557              	.LFE145:
 2559              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2560              		.align	1
 2561              		.weak	HAL_RCC_CSSCallback
 2562              		.syntax unified
 2563              		.thumb
 2564              		.thumb_func
 2566              	HAL_RCC_CSSCallback:
 2567              	.LFB146:
1330:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1331:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1332:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback.
1333:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval none
1334:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1335:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1336:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2568              		.loc 1 1336 1
 2569              		.cfi_startproc
 2570              		@ args = 0, pretend = 0, frame = 0
 2571              		@ frame_needed = 1, uses_anonymous_args = 0
 2572              		@ link register save eliminated.
 2573 0000 80B4     		push	{r7}
 2574              	.LCFI60:
 2575              		.cfi_def_cfa_offset 4
 2576              		.cfi_offset 7, -4
 2577 0002 00AF     		add	r7, sp, #0
 2578              	.LCFI61:
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 70


 2579              		.cfi_def_cfa_register 7
1337:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* NOTE : This function should not be modified, when the callback is needed,
1338:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****             the HAL_RCC_CSSCallback should be implemented in the user file
1339:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****    */
1340:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2580              		.loc 1 1340 1
 2581 0004 00BF     		nop
 2582 0006 BD46     		mov	sp, r7
 2583              	.LCFI62:
 2584              		.cfi_def_cfa_register 13
 2585              		@ sp needed
 2586 0008 5DF8047B 		ldr	r7, [sp], #4
 2587              	.LCFI63:
 2588              		.cfi_restore 7
 2589              		.cfi_def_cfa_offset 0
 2590 000c 7047     		bx	lr
 2591              		.cfi_endproc
 2592              	.LFE146:
 2594              		.section	.text.RCC_GetSysClockFreqFromPLLSource,"ax",%progbits
 2595              		.align	1
 2596              		.syntax unified
 2597              		.thumb
 2598              		.thumb_func
 2600              	RCC_GetSysClockFreqFromPLLSource:
 2601              	.LFB147:
1341:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1342:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1343:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
1344:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1345:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1346:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1347:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @}
1348:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1349:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1350:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
1351:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /** @addtogroup RCC_Private_Functions
1352:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @{
1353:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1354:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1355:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** /**
1356:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @brief  Compute SYSCLK frequency based on PLL SYSCLK source.
1357:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   * @retval SYSCLK frequency
1358:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   */
1359:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** static uint32_t RCC_GetSysClockFreqFromPLLSource(void)
1360:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** {
 2602              		.loc 1 1360 1
 2603              		.cfi_startproc
 2604              		@ args = 0, pretend = 0, frame = 24
 2605              		@ frame_needed = 1, uses_anonymous_args = 0
 2606              		@ link register save eliminated.
 2607 0000 80B4     		push	{r7}
 2608              	.LCFI64:
 2609              		.cfi_def_cfa_offset 4
 2610              		.cfi_offset 7, -4
 2611 0002 87B0     		sub	sp, sp, #28
 2612              	.LCFI65:
 2613              		.cfi_def_cfa_offset 32
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 71


 2614 0004 00AF     		add	r7, sp, #0
 2615              	.LCFI66:
 2616              		.cfi_def_cfa_register 7
1361:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t pllvco, pllsource, pllr, pllm;
1362:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   uint32_t sysclockfreq;
1363:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1364:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   /* PLL_VCO = (HSE_VALUE or HSI_VALUE/ PLLM) * PLLN
1365:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****      SYSCLK = PLL_VCO / PLLR
1366:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****    */
1367:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   pllsource = READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLSRC);
 2617              		.loc 1 1367 15
 2618 0006 1E4B     		ldr	r3, .L176
 2619 0008 DB68     		ldr	r3, [r3, #12]
 2620              		.loc 1 1367 13
 2621 000a 03F00303 		and	r3, r3, #3
 2622 000e 3B61     		str	r3, [r7, #16]
1368:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   pllm = (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1U ;
 2623              		.loc 1 1368 11
 2624 0010 1B4B     		ldr	r3, .L176
 2625 0012 DB68     		ldr	r3, [r3, #12]
 2626              		.loc 1 1368 52
 2627 0014 1B09     		lsrs	r3, r3, #4
 2628 0016 03F00F03 		and	r3, r3, #15
 2629              		.loc 1 1368 8
 2630 001a 0133     		adds	r3, r3, #1
 2631 001c FB60     		str	r3, [r7, #12]
1369:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1370:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   switch (pllsource)
 2632              		.loc 1 1370 3
 2633 001e 3B69     		ldr	r3, [r7, #16]
 2634 0020 032B     		cmp	r3, #3
 2635 0022 0CD1     		bne	.L173
1371:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   {
1372:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   case RCC_PLLSOURCE_HSE:  /* HSE used as PLL clock source */
1373:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     pllvco = (HSE_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos
 2636              		.loc 1 1373 25
 2637 0024 174A     		ldr	r2, .L176+4
 2638 0026 FB68     		ldr	r3, [r7, #12]
 2639 0028 B2FBF3F3 		udiv	r3, r2, r3
 2640              		.loc 1 1373 36
 2641 002c 144A     		ldr	r2, .L176
 2642 002e D268     		ldr	r2, [r2, #12]
 2643              		.loc 1 1373 77
 2644 0030 120A     		lsrs	r2, r2, #8
 2645 0032 02F07F02 		and	r2, r2, #127
 2646              		.loc 1 1373 12
 2647 0036 02FB03F3 		mul	r3, r2, r3
 2648 003a 7B61     		str	r3, [r7, #20]
1374:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     break;
 2649              		.loc 1 1374 5
 2650 003c 0CE0     		b	.L174
 2651              	.L173:
1375:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1376:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   case RCC_PLLSOURCE_HSI:  /* HSI used as PLL clock source */
1377:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   default:
1378:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     pllvco = (HSI_VALUE / pllm) * (READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos
 2652              		.loc 1 1378 25
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 72


 2653 003e 124A     		ldr	r2, .L176+8
 2654 0040 FB68     		ldr	r3, [r7, #12]
 2655 0042 B2FBF3F3 		udiv	r3, r2, r3
 2656              		.loc 1 1378 36
 2657 0046 0E4A     		ldr	r2, .L176
 2658 0048 D268     		ldr	r2, [r2, #12]
 2659              		.loc 1 1378 77
 2660 004a 120A     		lsrs	r2, r2, #8
 2661 004c 02F07F02 		and	r2, r2, #127
 2662              		.loc 1 1378 12
 2663 0050 02FB03F3 		mul	r3, r2, r3
 2664 0054 7B61     		str	r3, [r7, #20]
1379:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****     break;
 2665              		.loc 1 1379 5
 2666 0056 00BF     		nop
 2667              	.L174:
1380:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   }
1381:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1382:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   pllr = ((READ_BIT(RCC->PLLCFGR, RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1U ) * 2U;
 2668              		.loc 1 1382 12
 2669 0058 094B     		ldr	r3, .L176
 2670 005a DB68     		ldr	r3, [r3, #12]
 2671              		.loc 1 1382 53
 2672 005c 5B0E     		lsrs	r3, r3, #25
 2673 005e 03F00303 		and	r3, r3, #3
 2674              		.loc 1 1382 78
 2675 0062 0133     		adds	r3, r3, #1
 2676              		.loc 1 1382 8
 2677 0064 5B00     		lsls	r3, r3, #1
 2678 0066 BB60     		str	r3, [r7, #8]
1383:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   sysclockfreq = pllvco/pllr;
 2679              		.loc 1 1383 16
 2680 0068 7A69     		ldr	r2, [r7, #20]
 2681 006a BB68     		ldr	r3, [r7, #8]
 2682 006c B2FBF3F3 		udiv	r3, r2, r3
 2683 0070 7B60     		str	r3, [r7, #4]
1384:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** 
1385:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c ****   return sysclockfreq;
 2684              		.loc 1 1385 10
 2685 0072 7B68     		ldr	r3, [r7, #4]
1386:Drivers/STM32G4xx_HAL_Driver/Src/stm32g4xx_hal_rcc.c **** }
 2686              		.loc 1 1386 1
 2687 0074 1846     		mov	r0, r3
 2688 0076 1C37     		adds	r7, r7, #28
 2689              	.LCFI67:
 2690              		.cfi_def_cfa_offset 4
 2691 0078 BD46     		mov	sp, r7
 2692              	.LCFI68:
 2693              		.cfi_def_cfa_register 13
 2694              		@ sp needed
 2695 007a 5DF8047B 		ldr	r7, [sp], #4
 2696              	.LCFI69:
 2697              		.cfi_restore 7
 2698              		.cfi_def_cfa_offset 0
 2699 007e 7047     		bx	lr
 2700              	.L177:
 2701              		.align	2
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 73


 2702              	.L176:
 2703 0080 00100240 		.word	1073876992
 2704 0084 00127A00 		.word	8000000
 2705 0088 0024F400 		.word	16000000
 2706              		.cfi_endproc
 2707              	.LFE147:
 2709              		.text
 2710              	.Letext0:
 2711              		.file 2 "D:/msys64/mingw64/arm-none-eabi/include/machine/_default_types.h"
 2712              		.file 3 "D:/msys64/mingw64/arm-none-eabi/include/sys/_stdint.h"
 2713              		.file 4 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/system_stm32g4xx.h"
 2714              		.file 5 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g474xx.h"
 2715              		.file 6 "Drivers/CMSIS/Device/ST/STM32G4xx/Include/stm32g4xx.h"
 2716              		.file 7 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_def.h"
 2717              		.file 8 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_rcc.h"
 2718              		.file 9 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal_gpio.h"
 2719              		.file 10 "Drivers/STM32G4xx_HAL_Driver/Inc/stm32g4xx_hal.h"
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 74


DEFINED SYMBOLS
                            *ABS*:00000000 stm32g4xx_hal_rcc.c
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:21     .text.HAL_RCC_DeInit:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:27     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:202    .text.HAL_RCC_DeInit:000000f4 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:210    .text.HAL_RCC_OscConfig:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:216    .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:637    .text.HAL_RCC_OscConfig:0000027c $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:641    .text.HAL_RCC_OscConfig:00000284 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:978    .text.HAL_RCC_OscConfig:000004b8 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:982    .text.HAL_RCC_OscConfig:000004c0 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1215   .text.HAL_RCC_OscConfig:00000618 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1222   .text.HAL_RCC_ClockConfig:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1228   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2600   .text.RCC_GetSysClockFreqFromPLLSource:00000000 RCC_GetSysClockFreqFromPLLSource
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1751   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1624   .text.HAL_RCC_ClockConfig:00000260 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1634   .text.HAL_RCC_MCOConfig:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1640   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1740   .text.HAL_RCC_MCOConfig:00000088 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1745   .text.HAL_RCC_GetSysClockFreq:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1891   .text.HAL_RCC_GetSysClockFreq:000000b8 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1898   .text.HAL_RCC_GetHCLKFreq:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1904   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1935   .text.HAL_RCC_GetHCLKFreq:00000014 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1940   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1946   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1982   .text.HAL_RCC_GetPCLK1Freq:00000024 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1988   .text.HAL_RCC_GetPCLK2Freq:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:1994   .text.HAL_RCC_GetPCLK2Freq:00000000 HAL_RCC_GetPCLK2Freq
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2030   .text.HAL_RCC_GetPCLK2Freq:00000024 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2036   .text.HAL_RCC_GetOscConfig:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2042   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2286   .text.HAL_RCC_GetOscConfig:00000160 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2291   .text.HAL_RCC_GetClockConfig:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2297   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2374   .text.HAL_RCC_GetClockConfig:0000005c $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2380   .text.HAL_RCC_EnableCSS:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2386   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2420   .text.HAL_RCC_EnableCSS:0000001c $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2425   .text.HAL_RCC_EnableLSECSS:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2431   .text.HAL_RCC_EnableLSECSS:00000000 HAL_RCC_EnableLSECSS
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2465   .text.HAL_RCC_EnableLSECSS:00000020 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2470   .text.HAL_RCC_DisableLSECSS:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2476   .text.HAL_RCC_DisableLSECSS:00000000 HAL_RCC_DisableLSECSS
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2510   .text.HAL_RCC_DisableLSECSS:00000020 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2515   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2521   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2566   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2555   .text.HAL_RCC_NMI_IRQHandler:00000024 $d
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2560   .text.HAL_RCC_CSSCallback:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2595   .text.RCC_GetSysClockFreqFromPLLSource:00000000 $t
C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s:2703   .text.RCC_GetSysClockFreqFromPLLSource:00000080 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_InitTick
ARM GAS  C:\Users\AURORA~1\AppData\Local\Temp\ccebx8py.s 			page 75


SystemCoreClock
uwTickPrio
AHBPrescTable
HAL_GPIO_Init
APBPrescTable
